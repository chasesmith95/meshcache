{"ast":null,"code":"/** PURE_IMPORTS_START _Observable,_Subscription,_util_subscribeToArray PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { subscribeToArray } from '../util/subscribeToArray';\nexport function fromArray(input, scheduler) {\n  if (!scheduler) {\n    return new Observable(subscribeToArray(input));\n  } else {\n    return new Observable(function (subscriber) {\n      var sub = new Subscription();\n      var i = 0;\n      sub.add(scheduler.schedule(function () {\n        if (i === input.length) {\n          subscriber.complete();\n          return;\n        }\n\n        subscriber.next(input[i++]);\n\n        if (!subscriber.closed) {\n          sub.add(this.schedule());\n        }\n      }));\n      return sub;\n    });\n  }\n}","map":{"version":3,"sources":["../../../src/internal/observable/fromArray.ts"],"names":[],"mappings":"AAAA;AAEA,SAAS,UAAT,QAAuB,eAAvB;AACA,SAAS,YAAT,QAA2B,iBAA3B;AAEA,SAAM,gBAAN,QAAkD,0BAAlD;AACE,OAAA,SAAK,SAAL,CAAgB,KAAhB,EAAgB,SAAhB,EAAgB;MACd,CAAA,S,EAAW;AACZ,WAAA,IAAA,UAAA,CAAA,gBAAA,CAAA,KAAA,CAAA,CAAA;AAAM,G,MACL;AACE,WAAA,IAAS,UAAT,CAAgB,UAAc,UAAd,EAAe;AAC/B,UAAI,GAAC,GAAK,IAAA,YAAA,EAAV;AACA,UAAI,CAAA,GAAI,CAAR;UACE,G,CAAI,SAAM,CAAA,QAAN,CAAkB,YAAE;YACtB,CAAA,KAAA,KAAW,CAAA,M,EAAQ;AACnB,UAAA,UAAO,CAAA,QAAP;AACD;AACD;;AACA,QAAA,UAAK,CAAA,IAAL,CAAgB,KAAA,CAAM,CAAA,EAAN,CAAhB;;YACE,CAAA,UAAQ,CAAI,M,EAAC;AACd,UAAA,GAAA,CAAA,GAAA,CAAA,KAAA,QAAA,EAAA;AACC;AACJ,OATM,C;AAUL,aAAA,GAAA;AACJ,KAdG,CAAA;AAeL","sourcesContent":["/** PURE_IMPORTS_START _Observable,_Subscription,_util_subscribeToArray PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { subscribeToArray } from '../util/subscribeToArray';\nexport function fromArray(input, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscribeToArray(input));\n    }\n    else {\n        return new Observable(function (subscriber) {\n            var sub = new Subscription();\n            var i = 0;\n            sub.add(scheduler.schedule(function () {\n                if (i === input.length) {\n                    subscriber.complete();\n                    return;\n                }\n                subscriber.next(input[i++]);\n                if (!subscriber.closed) {\n                    sub.add(this.schedule());\n                }\n            }));\n            return sub;\n        });\n    }\n}\n//# sourceMappingURL=fromArray.js.map\n"]},"metadata":{},"sourceType":"module"}