{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('./GetIntrinsic');\n\nvar $Object = GetIntrinsic('%Object%');\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $String = GetIntrinsic('%String%');\n\nvar assertRecord = require('./helpers/assertRecord');\n\nvar $isNaN = require('./helpers/isNaN');\n\nvar $isFinite = require('./helpers/isFinite');\n\nvar sign = require('./helpers/sign');\n\nvar mod = require('./helpers/mod');\n\nvar IsCallable = require('is-callable');\n\nvar toPrimitive = require('es-to-primitive/es5');\n\nvar has = require('has'); // https://es5.github.io/#x9\n\n\nvar ES5 = {\n  ToPrimitive: toPrimitive,\n  ToBoolean: function ToBoolean(value) {\n    return !!value;\n  },\n  ToNumber: function ToNumber(value) {\n    return +value; // eslint-disable-line no-implicit-coercion\n  },\n  ToInteger: function ToInteger(value) {\n    var number = this.ToNumber(value);\n\n    if ($isNaN(number)) {\n      return 0;\n    }\n\n    if (number === 0 || !$isFinite(number)) {\n      return number;\n    }\n\n    return sign(number) * Math.floor(Math.abs(number));\n  },\n  ToInt32: function ToInt32(x) {\n    return this.ToNumber(x) >> 0;\n  },\n  ToUint32: function ToUint32(x) {\n    return this.ToNumber(x) >>> 0;\n  },\n  ToUint16: function ToUint16(value) {\n    var number = this.ToNumber(value);\n\n    if ($isNaN(number) || number === 0 || !$isFinite(number)) {\n      return 0;\n    }\n\n    var posInt = sign(number) * Math.floor(Math.abs(number));\n    return mod(posInt, 0x10000);\n  },\n  ToString: function ToString(value) {\n    return $String(value);\n  },\n  ToObject: function ToObject(value) {\n    this.CheckObjectCoercible(value);\n    return $Object(value);\n  },\n  CheckObjectCoercible: function CheckObjectCoercible(value, optMessage) {\n    /* jshint eqnull:true */\n    if (value == null) {\n      throw new $TypeError(optMessage || 'Cannot call method on ' + value);\n    }\n\n    return value;\n  },\n  IsCallable: IsCallable,\n  SameValue: function SameValue(x, y) {\n    if (x === y) {\n      // 0 === -0, but they are not identical.\n      if (x === 0) {\n        return 1 / x === 1 / y;\n      }\n\n      return true;\n    }\n\n    return $isNaN(x) && $isNaN(y);\n  },\n  // https://www.ecma-international.org/ecma-262/5.1/#sec-8\n  Type: function Type(x) {\n    if (x === null) {\n      return 'Null';\n    }\n\n    if (typeof x === 'undefined') {\n      return 'Undefined';\n    }\n\n    if (typeof x === 'function' || typeof x === 'object') {\n      return 'Object';\n    }\n\n    if (typeof x === 'number') {\n      return 'Number';\n    }\n\n    if (typeof x === 'boolean') {\n      return 'Boolean';\n    }\n\n    if (typeof x === 'string') {\n      return 'String';\n    }\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-property-descriptor-specification-type\n  IsPropertyDescriptor: function IsPropertyDescriptor(Desc) {\n    if (this.Type(Desc) !== 'Object') {\n      return false;\n    }\n\n    var allowed = {\n      '[[Configurable]]': true,\n      '[[Enumerable]]': true,\n      '[[Get]]': true,\n      '[[Set]]': true,\n      '[[Value]]': true,\n      '[[Writable]]': true\n    };\n\n    for (var key in Desc) {\n      // eslint-disable-line\n      if (has(Desc, key) && !allowed[key]) {\n        return false;\n      }\n    }\n\n    var isData = has(Desc, '[[Value]]');\n    var IsAccessor = has(Desc, '[[Get]]') || has(Desc, '[[Set]]');\n\n    if (isData && IsAccessor) {\n      throw new $TypeError('Property Descriptors may not be both accessor and data descriptors');\n    }\n\n    return true;\n  },\n  // https://ecma-international.org/ecma-262/5.1/#sec-8.10.1\n  IsAccessorDescriptor: function IsAccessorDescriptor(Desc) {\n    if (typeof Desc === 'undefined') {\n      return false;\n    }\n\n    assertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n    if (!has(Desc, '[[Get]]') && !has(Desc, '[[Set]]')) {\n      return false;\n    }\n\n    return true;\n  },\n  // https://ecma-international.org/ecma-262/5.1/#sec-8.10.2\n  IsDataDescriptor: function IsDataDescriptor(Desc) {\n    if (typeof Desc === 'undefined') {\n      return false;\n    }\n\n    assertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n    if (!has(Desc, '[[Value]]') && !has(Desc, '[[Writable]]')) {\n      return false;\n    }\n\n    return true;\n  },\n  // https://ecma-international.org/ecma-262/5.1/#sec-8.10.3\n  IsGenericDescriptor: function IsGenericDescriptor(Desc) {\n    if (typeof Desc === 'undefined') {\n      return false;\n    }\n\n    assertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n    if (!this.IsAccessorDescriptor(Desc) && !this.IsDataDescriptor(Desc)) {\n      return true;\n    }\n\n    return false;\n  },\n  // https://ecma-international.org/ecma-262/5.1/#sec-8.10.4\n  FromPropertyDescriptor: function FromPropertyDescriptor(Desc) {\n    if (typeof Desc === 'undefined') {\n      return Desc;\n    }\n\n    assertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n    if (this.IsDataDescriptor(Desc)) {\n      return {\n        value: Desc['[[Value]]'],\n        writable: !!Desc['[[Writable]]'],\n        enumerable: !!Desc['[[Enumerable]]'],\n        configurable: !!Desc['[[Configurable]]']\n      };\n    } else if (this.IsAccessorDescriptor(Desc)) {\n      return {\n        get: Desc['[[Get]]'],\n        set: Desc['[[Set]]'],\n        enumerable: !!Desc['[[Enumerable]]'],\n        configurable: !!Desc['[[Configurable]]']\n      };\n    } else {\n      throw new $TypeError('FromPropertyDescriptor must be called with a fully populated Property Descriptor');\n    }\n  },\n  // https://ecma-international.org/ecma-262/5.1/#sec-8.10.5\n  ToPropertyDescriptor: function ToPropertyDescriptor(Obj) {\n    if (this.Type(Obj) !== 'Object') {\n      throw new $TypeError('ToPropertyDescriptor requires an object');\n    }\n\n    var desc = {};\n\n    if (has(Obj, 'enumerable')) {\n      desc['[[Enumerable]]'] = this.ToBoolean(Obj.enumerable);\n    }\n\n    if (has(Obj, 'configurable')) {\n      desc['[[Configurable]]'] = this.ToBoolean(Obj.configurable);\n    }\n\n    if (has(Obj, 'value')) {\n      desc['[[Value]]'] = Obj.value;\n    }\n\n    if (has(Obj, 'writable')) {\n      desc['[[Writable]]'] = this.ToBoolean(Obj.writable);\n    }\n\n    if (has(Obj, 'get')) {\n      var getter = Obj.get;\n\n      if (typeof getter !== 'undefined' && !this.IsCallable(getter)) {\n        throw new TypeError('getter must be a function');\n      }\n\n      desc['[[Get]]'] = getter;\n    }\n\n    if (has(Obj, 'set')) {\n      var setter = Obj.set;\n\n      if (typeof setter !== 'undefined' && !this.IsCallable(setter)) {\n        throw new $TypeError('setter must be a function');\n      }\n\n      desc['[[Set]]'] = setter;\n    }\n\n    if ((has(desc, '[[Get]]') || has(desc, '[[Set]]')) && (has(desc, '[[Value]]') || has(desc, '[[Writable]]'))) {\n      throw new $TypeError('Invalid property descriptor. Cannot both specify accessors and a value or writable attribute');\n    }\n\n    return desc;\n  }\n};\nmodule.exports = ES5;","map":{"version":3,"sources":["/Users/chasesmith/Desktop/registry-display/src/node_modules/es-abstract/es5.js"],"names":["GetIntrinsic","require","$Object","$TypeError","$String","assertRecord","$isNaN","$isFinite","sign","mod","IsCallable","toPrimitive","has","ES5","ToPrimitive","ToBoolean","value","ToNumber","ToInteger","number","Math","floor","abs","ToInt32","x","ToUint32","ToUint16","posInt","ToString","ToObject","CheckObjectCoercible","optMessage","SameValue","y","Type","IsPropertyDescriptor","Desc","allowed","key","isData","IsAccessor","IsAccessorDescriptor","IsDataDescriptor","IsGenericDescriptor","FromPropertyDescriptor","writable","enumerable","configurable","get","set","ToPropertyDescriptor","Obj","desc","getter","TypeError","setter","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('./GetIntrinsic');\n\nvar $Object = GetIntrinsic('%Object%');\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $String = GetIntrinsic('%String%');\n\nvar assertRecord = require('./helpers/assertRecord');\nvar $isNaN = require('./helpers/isNaN');\nvar $isFinite = require('./helpers/isFinite');\n\nvar sign = require('./helpers/sign');\nvar mod = require('./helpers/mod');\n\nvar IsCallable = require('is-callable');\nvar toPrimitive = require('es-to-primitive/es5');\n\nvar has = require('has');\n\n// https://es5.github.io/#x9\nvar ES5 = {\n\tToPrimitive: toPrimitive,\n\n\tToBoolean: function ToBoolean(value) {\n\t\treturn !!value;\n\t},\n\tToNumber: function ToNumber(value) {\n\t\treturn +value; // eslint-disable-line no-implicit-coercion\n\t},\n\tToInteger: function ToInteger(value) {\n\t\tvar number = this.ToNumber(value);\n\t\tif ($isNaN(number)) { return 0; }\n\t\tif (number === 0 || !$isFinite(number)) { return number; }\n\t\treturn sign(number) * Math.floor(Math.abs(number));\n\t},\n\tToInt32: function ToInt32(x) {\n\t\treturn this.ToNumber(x) >> 0;\n\t},\n\tToUint32: function ToUint32(x) {\n\t\treturn this.ToNumber(x) >>> 0;\n\t},\n\tToUint16: function ToUint16(value) {\n\t\tvar number = this.ToNumber(value);\n\t\tif ($isNaN(number) || number === 0 || !$isFinite(number)) { return 0; }\n\t\tvar posInt = sign(number) * Math.floor(Math.abs(number));\n\t\treturn mod(posInt, 0x10000);\n\t},\n\tToString: function ToString(value) {\n\t\treturn $String(value);\n\t},\n\tToObject: function ToObject(value) {\n\t\tthis.CheckObjectCoercible(value);\n\t\treturn $Object(value);\n\t},\n\tCheckObjectCoercible: function CheckObjectCoercible(value, optMessage) {\n\t\t/* jshint eqnull:true */\n\t\tif (value == null) {\n\t\t\tthrow new $TypeError(optMessage || 'Cannot call method on ' + value);\n\t\t}\n\t\treturn value;\n\t},\n\tIsCallable: IsCallable,\n\tSameValue: function SameValue(x, y) {\n\t\tif (x === y) { // 0 === -0, but they are not identical.\n\t\t\tif (x === 0) { return 1 / x === 1 / y; }\n\t\t\treturn true;\n\t\t}\n\t\treturn $isNaN(x) && $isNaN(y);\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/5.1/#sec-8\n\tType: function Type(x) {\n\t\tif (x === null) {\n\t\t\treturn 'Null';\n\t\t}\n\t\tif (typeof x === 'undefined') {\n\t\t\treturn 'Undefined';\n\t\t}\n\t\tif (typeof x === 'function' || typeof x === 'object') {\n\t\t\treturn 'Object';\n\t\t}\n\t\tif (typeof x === 'number') {\n\t\t\treturn 'Number';\n\t\t}\n\t\tif (typeof x === 'boolean') {\n\t\t\treturn 'Boolean';\n\t\t}\n\t\tif (typeof x === 'string') {\n\t\t\treturn 'String';\n\t\t}\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-property-descriptor-specification-type\n\tIsPropertyDescriptor: function IsPropertyDescriptor(Desc) {\n\t\tif (this.Type(Desc) !== 'Object') {\n\t\t\treturn false;\n\t\t}\n\t\tvar allowed = {\n\t\t\t'[[Configurable]]': true,\n\t\t\t'[[Enumerable]]': true,\n\t\t\t'[[Get]]': true,\n\t\t\t'[[Set]]': true,\n\t\t\t'[[Value]]': true,\n\t\t\t'[[Writable]]': true\n\t\t};\n\n\t\tfor (var key in Desc) { // eslint-disable-line\n\t\t\tif (has(Desc, key) && !allowed[key]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tvar isData = has(Desc, '[[Value]]');\n\t\tvar IsAccessor = has(Desc, '[[Get]]') || has(Desc, '[[Set]]');\n\t\tif (isData && IsAccessor) {\n\t\t\tthrow new $TypeError('Property Descriptors may not be both accessor and data descriptors');\n\t\t}\n\t\treturn true;\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.1\n\tIsAccessorDescriptor: function IsAccessorDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn false;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (!has(Desc, '[[Get]]') && !has(Desc, '[[Set]]')) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.2\n\tIsDataDescriptor: function IsDataDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn false;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (!has(Desc, '[[Value]]') && !has(Desc, '[[Writable]]')) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.3\n\tIsGenericDescriptor: function IsGenericDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn false;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (!this.IsAccessorDescriptor(Desc) && !this.IsDataDescriptor(Desc)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.4\n\tFromPropertyDescriptor: function FromPropertyDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn Desc;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (this.IsDataDescriptor(Desc)) {\n\t\t\treturn {\n\t\t\t\tvalue: Desc['[[Value]]'],\n\t\t\t\twritable: !!Desc['[[Writable]]'],\n\t\t\t\tenumerable: !!Desc['[[Enumerable]]'],\n\t\t\t\tconfigurable: !!Desc['[[Configurable]]']\n\t\t\t};\n\t\t} else if (this.IsAccessorDescriptor(Desc)) {\n\t\t\treturn {\n\t\t\t\tget: Desc['[[Get]]'],\n\t\t\t\tset: Desc['[[Set]]'],\n\t\t\t\tenumerable: !!Desc['[[Enumerable]]'],\n\t\t\t\tconfigurable: !!Desc['[[Configurable]]']\n\t\t\t};\n\t\t} else {\n\t\t\tthrow new $TypeError('FromPropertyDescriptor must be called with a fully populated Property Descriptor');\n\t\t}\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.5\n\tToPropertyDescriptor: function ToPropertyDescriptor(Obj) {\n\t\tif (this.Type(Obj) !== 'Object') {\n\t\t\tthrow new $TypeError('ToPropertyDescriptor requires an object');\n\t\t}\n\n\t\tvar desc = {};\n\t\tif (has(Obj, 'enumerable')) {\n\t\t\tdesc['[[Enumerable]]'] = this.ToBoolean(Obj.enumerable);\n\t\t}\n\t\tif (has(Obj, 'configurable')) {\n\t\t\tdesc['[[Configurable]]'] = this.ToBoolean(Obj.configurable);\n\t\t}\n\t\tif (has(Obj, 'value')) {\n\t\t\tdesc['[[Value]]'] = Obj.value;\n\t\t}\n\t\tif (has(Obj, 'writable')) {\n\t\t\tdesc['[[Writable]]'] = this.ToBoolean(Obj.writable);\n\t\t}\n\t\tif (has(Obj, 'get')) {\n\t\t\tvar getter = Obj.get;\n\t\t\tif (typeof getter !== 'undefined' && !this.IsCallable(getter)) {\n\t\t\t\tthrow new TypeError('getter must be a function');\n\t\t\t}\n\t\t\tdesc['[[Get]]'] = getter;\n\t\t}\n\t\tif (has(Obj, 'set')) {\n\t\t\tvar setter = Obj.set;\n\t\t\tif (typeof setter !== 'undefined' && !this.IsCallable(setter)) {\n\t\t\t\tthrow new $TypeError('setter must be a function');\n\t\t\t}\n\t\t\tdesc['[[Set]]'] = setter;\n\t\t}\n\n\t\tif ((has(desc, '[[Get]]') || has(desc, '[[Set]]')) && (has(desc, '[[Value]]') || has(desc, '[[Writable]]'))) {\n\t\t\tthrow new $TypeError('Invalid property descriptor. Cannot both specify accessors and a value or writable attribute');\n\t\t}\n\t\treturn desc;\n\t}\n};\n\nmodule.exports = ES5;\n"]},"metadata":{},"sourceType":"module"}