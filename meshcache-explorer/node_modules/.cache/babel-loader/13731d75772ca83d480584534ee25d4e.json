{"ast":null,"code":"/** PURE_IMPORTS_START _util_isArray,_util_isObject,_util_isFunction,_util_UnsubscriptionError PURE_IMPORTS_END */\nimport { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\n\nvar Subscription =\n/*@__PURE__*/\nfunction () {\n  function Subscription(unsubscribe) {\n    this.closed = false;\n    this._parent = null;\n    this._parents = null;\n    this._subscriptions = null;\n\n    if (unsubscribe) {\n      this._unsubscribe = unsubscribe;\n    }\n  }\n\n  Subscription.prototype.unsubscribe = function () {\n    var hasErrors = false;\n    var errors;\n\n    if (this.closed) {\n      return;\n    }\n\n    var _a = this,\n        _parent = _a._parent,\n        _parents = _a._parents,\n        _unsubscribe = _a._unsubscribe,\n        _subscriptions = _a._subscriptions;\n\n    this.closed = true;\n    this._parent = null;\n    this._parents = null;\n    this._subscriptions = null;\n    var index = -1;\n    var len = _parents ? _parents.length : 0;\n\n    while (_parent) {\n      _parent.remove(this);\n\n      _parent = ++index < len && _parents[index] || null;\n    }\n\n    if (isFunction(_unsubscribe)) {\n      try {\n        _unsubscribe.call(this);\n      } catch (e) {\n        hasErrors = true;\n        errors = e instanceof UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];\n      }\n    }\n\n    if (isArray(_subscriptions)) {\n      index = -1;\n      len = _subscriptions.length;\n\n      while (++index < len) {\n        var sub = _subscriptions[index];\n\n        if (isObject(sub)) {\n          try {\n            sub.unsubscribe();\n          } catch (e) {\n            hasErrors = true;\n            errors = errors || [];\n\n            if (e instanceof UnsubscriptionError) {\n              errors = errors.concat(flattenUnsubscriptionErrors(e.errors));\n            } else {\n              errors.push(e);\n            }\n          }\n        }\n      }\n    }\n\n    if (hasErrors) {\n      throw new UnsubscriptionError(errors);\n    }\n  };\n\n  Subscription.prototype.add = function (teardown) {\n    var subscription = teardown;\n\n    switch (typeof teardown) {\n      case 'function':\n        subscription = new Subscription(teardown);\n\n      case 'object':\n        if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {\n          return subscription;\n        } else if (this.closed) {\n          subscription.unsubscribe();\n          return subscription;\n        } else if (!(subscription instanceof Subscription)) {\n          var tmp = subscription;\n          subscription = new Subscription();\n          subscription._subscriptions = [tmp];\n        }\n\n        break;\n\n      default:\n        {\n          if (!teardown) {\n            return Subscription.EMPTY;\n          }\n\n          throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n    }\n\n    if (subscription._addParent(this)) {\n      var subscriptions = this._subscriptions;\n\n      if (subscriptions) {\n        subscriptions.push(subscription);\n      } else {\n        this._subscriptions = [subscription];\n      }\n    }\n\n    return subscription;\n  };\n\n  Subscription.prototype.remove = function (subscription) {\n    var subscriptions = this._subscriptions;\n\n    if (subscriptions) {\n      var subscriptionIndex = subscriptions.indexOf(subscription);\n\n      if (subscriptionIndex !== -1) {\n        subscriptions.splice(subscriptionIndex, 1);\n      }\n    }\n  };\n\n  Subscription.prototype._addParent = function (parent) {\n    var _a = this,\n        _parent = _a._parent,\n        _parents = _a._parents;\n\n    if (_parent === parent) {\n      return false;\n    } else if (!_parent) {\n      this._parent = parent;\n      return true;\n    } else if (!_parents) {\n      this._parents = [parent];\n      return true;\n    } else if (_parents.indexOf(parent) === -1) {\n      _parents.push(parent);\n\n      return true;\n    }\n\n    return false;\n  };\n\n  Subscription.EMPTY = function (empty) {\n    empty.closed = true;\n    return empty;\n  }(new Subscription());\n\n  return Subscription;\n}();\n\nexport { Subscription };\n\nfunction flattenUnsubscriptionErrors(errors) {\n  return errors.reduce(function (errs, err) {\n    return errs.concat(err instanceof UnsubscriptionError ? err.errors : err);\n  }, []);\n}","map":{"version":3,"sources":["../../src/internal/Subscription.ts"],"names":[],"mappings":"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","sourcesContent":["/** PURE_IMPORTS_START _util_isArray,_util_isObject,_util_isFunction,_util_UnsubscriptionError PURE_IMPORTS_END */\nimport { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nvar Subscription = /*@__PURE__*/ (function () {\n    function Subscription(unsubscribe) {\n        this.closed = false;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        var index = -1;\n        var len = _parents ? _parents.length : 0;\n        while (_parent) {\n            _parent.remove(this);\n            _parent = ++index < len && _parents[index] || null;\n        }\n        if (isFunction(_unsubscribe)) {\n            try {\n                _unsubscribe.call(this);\n            }\n            catch (e) {\n                hasErrors = true;\n                errors = e instanceof UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];\n            }\n        }\n        if (isArray(_subscriptions)) {\n            index = -1;\n            len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject(sub)) {\n                    try {\n                        sub.unsubscribe();\n                    }\n                    catch (e) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        if (e instanceof UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(e.errors));\n                        }\n                        else {\n                            errors.push(e);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError(errors);\n        }\n    };\n    Subscription.prototype.add = function (teardown) {\n        var subscription = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (!(subscription instanceof Subscription)) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default: {\n                if (!teardown) {\n                    return Subscription.EMPTY;\n                }\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n            }\n        }\n        if (subscription._addParent(this)) {\n            var subscriptions = this._subscriptions;\n            if (subscriptions) {\n                subscriptions.push(subscription);\n            }\n            else {\n                this._subscriptions = [subscription];\n            }\n        }\n        return subscription;\n    };\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        if (_parent === parent) {\n            return false;\n        }\n        else if (!_parent) {\n            this._parent = parent;\n            return true;\n        }\n        else if (!_parents) {\n            this._parents = [parent];\n            return true;\n        }\n        else if (_parents.indexOf(parent) === -1) {\n            _parents.push(parent);\n            return true;\n        }\n        return false;\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexport { Subscription };\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError) ? err.errors : err); }, []);\n}\n//# sourceMappingURL=Subscription.js.map\n"]},"metadata":{},"sourceType":"module"}