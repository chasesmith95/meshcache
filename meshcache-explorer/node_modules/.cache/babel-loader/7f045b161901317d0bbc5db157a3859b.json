{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('eventemitter3'), require('web3-core-subscriptions'), require('@babel/runtime/helpers/toConsumableArray'), require('lodash/isString'), require('lodash/cloneDeep'), require('rxjs'), require('@babel/runtime/regenerator'), require('@babel/runtime/helpers/asyncToGenerator'), require('@babel/runtime/helpers/get'), require('lodash/isFunction'), require('@babel/runtime/helpers/createClass'), require('@babel/runtime/helpers/classCallCheck'), require('@babel/runtime/helpers/possibleConstructorReturn'), require('@babel/runtime/helpers/getPrototypeOf'), require('@babel/runtime/helpers/inherits')) : typeof define === 'function' && define.amd ? define(['exports', 'eventemitter3', 'web3-core-subscriptions', '@babel/runtime/helpers/toConsumableArray', 'lodash/isString', 'lodash/cloneDeep', 'rxjs', '@babel/runtime/regenerator', '@babel/runtime/helpers/asyncToGenerator', '@babel/runtime/helpers/get', 'lodash/isFunction', '@babel/runtime/helpers/createClass', '@babel/runtime/helpers/classCallCheck', '@babel/runtime/helpers/possibleConstructorReturn', '@babel/runtime/helpers/getPrototypeOf', '@babel/runtime/helpers/inherits'], factory) : factory(global.Web3CoreMethod = {}, global.EventEmitter, global.web3CoreSubscriptions, global._toConsumableArray, global.isString, global.cloneDeep, global.rxjs, global._regeneratorRuntime, global._asyncToGenerator, global._get, global.isFunction, global._createClass, global._classCallCheck, global._possibleConstructorReturn, global._getPrototypeOf, global._inherits);\n})(this, function (exports, EventEmitter, web3CoreSubscriptions, _toConsumableArray, isString, cloneDeep, rxjs, _regeneratorRuntime, _asyncToGenerator, _get, isFunction, _createClass, _classCallCheck, _possibleConstructorReturn, _getPrototypeOf, _inherits) {\n  'use strict';\n\n  EventEmitter = EventEmitter && EventEmitter.hasOwnProperty('default') ? EventEmitter['default'] : EventEmitter;\n  _toConsumableArray = _toConsumableArray && _toConsumableArray.hasOwnProperty('default') ? _toConsumableArray['default'] : _toConsumableArray;\n  isString = isString && isString.hasOwnProperty('default') ? isString['default'] : isString;\n  cloneDeep = cloneDeep && cloneDeep.hasOwnProperty('default') ? cloneDeep['default'] : cloneDeep;\n  _regeneratorRuntime = _regeneratorRuntime && _regeneratorRuntime.hasOwnProperty('default') ? _regeneratorRuntime['default'] : _regeneratorRuntime;\n  _asyncToGenerator = _asyncToGenerator && _asyncToGenerator.hasOwnProperty('default') ? _asyncToGenerator['default'] : _asyncToGenerator;\n  _get = _get && _get.hasOwnProperty('default') ? _get['default'] : _get;\n  isFunction = isFunction && isFunction.hasOwnProperty('default') ? isFunction['default'] : isFunction;\n  _createClass = _createClass && _createClass.hasOwnProperty('default') ? _createClass['default'] : _createClass;\n  _classCallCheck = _classCallCheck && _classCallCheck.hasOwnProperty('default') ? _classCallCheck['default'] : _classCallCheck;\n  _possibleConstructorReturn = _possibleConstructorReturn && _possibleConstructorReturn.hasOwnProperty('default') ? _possibleConstructorReturn['default'] : _possibleConstructorReturn;\n  _getPrototypeOf = _getPrototypeOf && _getPrototypeOf.hasOwnProperty('default') ? _getPrototypeOf['default'] : _getPrototypeOf;\n  _inherits = _inherits && _inherits.hasOwnProperty('default') ? _inherits['default'] : _inherits;\n\n  var PromiEvent = function () {\n    function PromiEvent() {\n      var _this = this;\n\n      _classCallCheck(this, PromiEvent);\n\n      this.promise = new Promise(function (resolve, reject) {\n        _this.resolve = resolve;\n        _this.reject = reject;\n      });\n      this.eventEmitter = new EventEmitter();\n      return new Proxy(this, {\n        get: this.proxyHandler\n      });\n    }\n\n    _createClass(PromiEvent, [{\n      key: \"proxyHandler\",\n      value: function proxyHandler(target, name) {\n        if (name === 'resolve' || name === 'reject') {\n          return target[name];\n        }\n\n        if (name === 'then') {\n          return target.promise.then.bind(target.promise);\n        }\n\n        if (name === 'catch') {\n          return target.promise.catch.bind(target.promise);\n        }\n\n        if (target.eventEmitter[name]) {\n          return target.eventEmitter[name];\n        }\n      }\n    }]);\n\n    return PromiEvent;\n  }();\n\n  var AbstractMethod = function () {\n    function AbstractMethod(rpcMethod, parametersAmount, utils, formatters, moduleInstance) {\n      _classCallCheck(this, AbstractMethod);\n\n      this.utils = utils;\n      this.formatters = formatters;\n      this.moduleInstance = moduleInstance;\n      this._arguments = {\n        parameters: []\n      };\n      this._rpcMethod = rpcMethod;\n      this._parametersAmount = parametersAmount;\n    }\n\n    _createClass(AbstractMethod, [{\n      key: \"beforeExecution\",\n      value: function beforeExecution(moduleInstance) {}\n    }, {\n      key: \"afterExecution\",\n      value: function afterExecution(response) {\n        return response;\n      }\n    }, {\n      key: \"execute\",\n      value: function () {\n        var _execute = _asyncToGenerator(_regeneratorRuntime.mark(function _callee() {\n          var response;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  this.beforeExecution(this.moduleInstance);\n\n                  if (!(this.parameters.length !== this.parametersAmount)) {\n                    _context.next = 3;\n                    break;\n                  }\n\n                  throw new Error(\"Invalid Arguments length: expected: \".concat(this.parametersAmount, \", given: \").concat(this.parameters.length));\n\n                case 3:\n                  _context.prev = 3;\n                  _context.next = 6;\n                  return this.moduleInstance.currentProvider.send(this.rpcMethod, this.parameters);\n\n                case 6:\n                  response = _context.sent;\n\n                  if (response) {\n                    response = this.afterExecution(response);\n                  }\n\n                  if (this.callback) {\n                    this.callback(false, response);\n                  }\n\n                  return _context.abrupt(\"return\", response);\n\n                case 12:\n                  _context.prev = 12;\n                  _context.t0 = _context[\"catch\"](3);\n\n                  if (this.callback) {\n                    this.callback(_context.t0, null);\n                  }\n\n                  throw _context.t0;\n\n                case 16:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this, [[3, 12]]);\n        }));\n\n        function execute() {\n          return _execute.apply(this, arguments);\n        }\n\n        return execute;\n      }()\n    }, {\n      key: \"setArguments\",\n      value: function setArguments(args) {\n        var parameters = cloneDeep(_toConsumableArray(args));\n        var callback = null;\n\n        if (parameters.length > this.parametersAmount) {\n          if (!isFunction(parameters[parameters.length - 1])) {\n            throw new TypeError(\"The latest parameter should be a function otherwise it can't be used as callback\");\n          }\n\n          callback = parameters.pop();\n        }\n\n        this._arguments = {\n          callback: callback,\n          parameters: parameters\n        };\n      }\n    }, {\n      key: \"getArguments\",\n      value: function getArguments() {\n        return this._arguments;\n      }\n    }, {\n      key: \"isHash\",\n      value: function isHash(parameter) {\n        return isString(parameter) && parameter.startsWith('0x');\n      }\n    }, {\n      key: \"rpcMethod\",\n      set: function set(value) {\n        this._rpcMethod = value;\n      },\n      get: function get() {\n        return this._rpcMethod;\n      }\n    }, {\n      key: \"parametersAmount\",\n      set: function set(value) {\n        this._parametersAmount = value;\n      },\n      get: function get() {\n        return this._parametersAmount;\n      }\n    }, {\n      key: \"parameters\",\n      get: function get() {\n        return this._arguments.parameters;\n      },\n      set: function set(value) {\n        this._arguments.parameters = value;\n      }\n    }, {\n      key: \"callback\",\n      get: function get() {\n        return this._arguments.callback;\n      },\n      set: function set(value) {\n        this._arguments.callback = value;\n      }\n    }]);\n\n    return AbstractMethod;\n  }();\n\n  var AbstractGetBlockMethod = function (_AbstractMethod) {\n    _inherits(AbstractGetBlockMethod, _AbstractMethod);\n\n    function AbstractGetBlockMethod(rpcMethod, utils, formatters, moduleInstance) {\n      _classCallCheck(this, AbstractGetBlockMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(AbstractGetBlockMethod).call(this, rpcMethod, 2, utils, formatters, moduleInstance));\n    }\n\n    _createClass(AbstractGetBlockMethod, [{\n      key: \"beforeExecution\",\n      value: function beforeExecution(moduleInstance) {\n        this.parameters[0] = this.formatters.inputBlockNumberFormatter(this.parameters[0]);\n\n        if (isFunction(this.parameters[1])) {\n          this.callback = this.parameters[1];\n          this.parameters[1] = false;\n        } else {\n          this.parameters[1] = !!this.parameters[1];\n        }\n      }\n    }, {\n      key: \"afterExecution\",\n      value: function afterExecution(response) {\n        return this.formatters.outputBlockFormatter(response);\n      }\n    }]);\n\n    return AbstractGetBlockMethod;\n  }(AbstractMethod);\n\n  var GetBlockByNumberMethod = function (_AbstractGetBlockMeth) {\n    _inherits(GetBlockByNumberMethod, _AbstractGetBlockMeth);\n\n    function GetBlockByNumberMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, GetBlockByNumberMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(GetBlockByNumberMethod).call(this, 'eth_getBlockByNumber', utils, formatters, moduleInstance));\n    }\n\n    return GetBlockByNumberMethod;\n  }(AbstractGetBlockMethod);\n\n  var GetTransactionReceiptMethod = function (_AbstractMethod) {\n    _inherits(GetTransactionReceiptMethod, _AbstractMethod);\n\n    function GetTransactionReceiptMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, GetTransactionReceiptMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(GetTransactionReceiptMethod).call(this, 'eth_getTransactionReceipt', 1, utils, formatters, moduleInstance));\n    }\n\n    _createClass(GetTransactionReceiptMethod, [{\n      key: \"afterExecution\",\n      value: function afterExecution(response) {\n        if (response !== null) {\n          return this.formatters.outputTransactionReceiptFormatter(response);\n        }\n\n        return response;\n      }\n    }]);\n\n    return GetTransactionReceiptMethod;\n  }(AbstractMethod);\n\n  var TransactionObserver = function () {\n    function TransactionObserver(provider, timeout, blockConfirmations, getTransactionReceiptMethod, getBlockByNumberMethod, newHeadsSubscription) {\n      _classCallCheck(this, TransactionObserver);\n\n      this.provider = provider;\n      this.timeout = timeout;\n      this.blockConfirmations = blockConfirmations;\n      this.getTransactionReceiptMethod = getTransactionReceiptMethod;\n      this.getBlockByNumberMethod = getBlockByNumberMethod;\n      this.newHeadsSubscription = newHeadsSubscription;\n      this.blockNumbers = [];\n      this.lastBlock = false;\n      this.confirmations = 0;\n      this.confirmationChecks = 0;\n      this.interval = false;\n    }\n\n    _createClass(TransactionObserver, [{\n      key: \"observe\",\n      value: function observe(transactionHash) {\n        var _this = this;\n\n        return rxjs.Observable.create(function (observer) {\n          if (_this.isSocketBasedProvider()) {\n            _this.startSocketObserver(transactionHash, observer);\n          } else {\n            _this.startHttpObserver(transactionHash, observer);\n          }\n        });\n      }\n    }, {\n      key: \"startSocketObserver\",\n      value: function startSocketObserver(transactionHash, observer) {\n        var _this2 = this;\n\n        this.newHeadsSubscription.subscribe(function () {\n          var _ref = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(error, newHead) {\n            var receipt;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.prev = 0;\n\n                    if (!observer.closed) {\n                      _context.next = 5;\n                      break;\n                    }\n\n                    _context.next = 4;\n                    return _this2.newHeadsSubscription.unsubscribe();\n\n                  case 4:\n                    return _context.abrupt(\"return\");\n\n                  case 5:\n                    if (!error) {\n                      _context.next = 7;\n                      break;\n                    }\n\n                    throw error;\n\n                  case 7:\n                    _this2.getTransactionReceiptMethod.parameters = [transactionHash];\n                    _context.next = 10;\n                    return _this2.getTransactionReceiptMethod.execute();\n\n                  case 10:\n                    receipt = _context.sent;\n\n                    if (_this2.blockNumbers.includes(newHead.number)) {\n                      _context.next = 25;\n                      break;\n                    }\n\n                    if (!receipt) {\n                      _context.next = 19;\n                      break;\n                    }\n\n                    _this2.confirmations++;\n\n                    _this2.emitNext(receipt, observer);\n\n                    if (!_this2.isConfirmed()) {\n                      _context.next = 19;\n                      break;\n                    }\n\n                    _context.next = 18;\n                    return _this2.newHeadsSubscription.unsubscribe();\n\n                  case 18:\n                    observer.complete();\n\n                  case 19:\n                    _this2.blockNumbers.push(newHead.number);\n\n                    _this2.confirmationChecks++;\n\n                    if (!_this2.isTimeoutTimeExceeded()) {\n                      _context.next = 25;\n                      break;\n                    }\n\n                    _context.next = 24;\n                    return _this2.newHeadsSubscription.unsubscribe();\n\n                  case 24:\n                    _this2.emitError(new Error('Timeout exceeded during the transaction confirmation process. Be aware the transaction could still get confirmed!'), receipt, observer);\n\n                  case 25:\n                    _context.next = 30;\n                    break;\n\n                  case 27:\n                    _context.prev = 27;\n                    _context.t0 = _context[\"catch\"](0);\n\n                    _this2.emitError(_context.t0, false, observer);\n\n                  case 30:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, null, [[0, 27]]);\n          }));\n\n          return function (_x, _x2) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n      }\n    }, {\n      key: \"startHttpObserver\",\n      value: function startHttpObserver(transactionHash, observer) {\n        var _this3 = this;\n\n        var interval = setInterval(_asyncToGenerator(_regeneratorRuntime.mark(function _callee2() {\n          var receipt, block;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.prev = 0;\n\n                  if (!observer.closed) {\n                    _context2.next = 4;\n                    break;\n                  }\n\n                  clearInterval(interval);\n                  return _context2.abrupt(\"return\");\n\n                case 4:\n                  _this3.getTransactionReceiptMethod.parameters = [transactionHash];\n                  _context2.next = 7;\n                  return _this3.getTransactionReceiptMethod.execute();\n\n                case 7:\n                  receipt = _context2.sent;\n\n                  if (!receipt) {\n                    _context2.next = 22;\n                    break;\n                  }\n\n                  if (!_this3.lastBlock) {\n                    _context2.next = 16;\n                    break;\n                  }\n\n                  _context2.next = 12;\n                  return _this3.getBlockByNumber(_this3.increaseBlockNumber(_this3.lastBlock.number));\n\n                case 12:\n                  block = _context2.sent;\n\n                  if (block && _this3.isValidConfirmation(block)) {\n                    _this3.lastBlock = block;\n                    _this3.confirmations++;\n\n                    _this3.emitNext(receipt, observer);\n                  }\n\n                  _context2.next = 21;\n                  break;\n\n                case 16:\n                  _context2.next = 18;\n                  return _this3.getBlockByNumber(receipt.blockNumber);\n\n                case 18:\n                  _this3.lastBlock = _context2.sent;\n                  _this3.confirmations++;\n\n                  _this3.emitNext(receipt, observer);\n\n                case 21:\n                  if (_this3.isConfirmed()) {\n                    clearInterval(interval);\n                    observer.complete();\n                  }\n\n                case 22:\n                  _this3.confirmationChecks++;\n\n                  if (_this3.isTimeoutTimeExceeded()) {\n                    clearInterval(interval);\n\n                    _this3.emitError(new Error('Timeout exceeded during the transaction confirmation process. Be aware the transaction could still get confirmed!'), receipt, observer);\n                  }\n\n                  _context2.next = 30;\n                  break;\n\n                case 26:\n                  _context2.prev = 26;\n                  _context2.t0 = _context2[\"catch\"](0);\n                  clearInterval(interval);\n\n                  _this3.emitError(_context2.t0, false, observer);\n\n                case 30:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, null, [[0, 26]]);\n        })), 1000);\n      }\n    }, {\n      key: \"emitNext\",\n      value: function emitNext(receipt, observer) {\n        observer.next({\n          receipt: receipt,\n          confirmations: this.confirmations\n        });\n      }\n    }, {\n      key: \"emitError\",\n      value: function emitError(error, receipt, observer) {\n        observer.error({\n          error: error,\n          receipt: receipt,\n          confirmations: this.confirmations,\n          confirmationChecks: this.confirmationChecks\n        });\n      }\n    }, {\n      key: \"getBlockByNumber\",\n      value: function getBlockByNumber(blockHash) {\n        this.getBlockByNumberMethod.parameters = [blockHash];\n        return this.getBlockByNumberMethod.execute();\n      }\n    }, {\n      key: \"isConfirmed\",\n      value: function isConfirmed() {\n        return this.confirmations === this.blockConfirmations;\n      }\n    }, {\n      key: \"isValidConfirmation\",\n      value: function isValidConfirmation(block) {\n        return this.lastBlock.hash === block.parentHash && this.lastBlock.number !== block.number;\n      }\n    }, {\n      key: \"isTimeoutTimeExceeded\",\n      value: function isTimeoutTimeExceeded() {\n        return this.confirmationChecks === this.timeout;\n      }\n    }, {\n      key: \"isSocketBasedProvider\",\n      value: function isSocketBasedProvider() {\n        switch (this.provider.constructor.name) {\n          case 'CustomProvider':\n          case 'HttpProvider':\n            return false;\n\n          default:\n            return true;\n        }\n      }\n    }, {\n      key: \"increaseBlockNumber\",\n      value: function increaseBlockNumber(blockNumber) {\n        return '0x' + (parseInt(blockNumber, 16) + 1).toString(16);\n      }\n    }]);\n\n    return TransactionObserver;\n  }();\n\n  var GetTransactionCountMethod = function (_AbstractMethod) {\n    _inherits(GetTransactionCountMethod, _AbstractMethod);\n\n    function GetTransactionCountMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, GetTransactionCountMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(GetTransactionCountMethod).call(this, 'eth_getTransactionCount', 2, utils, formatters, moduleInstance));\n    }\n\n    _createClass(GetTransactionCountMethod, [{\n      key: \"beforeExecution\",\n      value: function beforeExecution(moduleInstance) {\n        this.parameters[0] = this.formatters.inputAddressFormatter(this.parameters[0]);\n\n        if (isFunction(this.parameters[1])) {\n          this.callback = this.parameters[1];\n          this.parameters[1] = moduleInstance.defaultBlock;\n        }\n\n        this.parameters[1] = this.formatters.inputDefaultBlockNumberFormatter(this.parameters[1], moduleInstance);\n      }\n    }, {\n      key: \"afterExecution\",\n      value: function afterExecution(response) {\n        return this.utils.hexToNumber(response);\n      }\n    }]);\n\n    return GetTransactionCountMethod;\n  }(AbstractMethod);\n\n  var AbstractObservedTransactionMethod = function (_AbstractMethod) {\n    _inherits(AbstractObservedTransactionMethod, _AbstractMethod);\n\n    function AbstractObservedTransactionMethod(rpcMethod, parametersAmount, utils, formatters, moduleInstance, transactionObserver) {\n      var _this;\n\n      _classCallCheck(this, AbstractObservedTransactionMethod);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(AbstractObservedTransactionMethod).call(this, rpcMethod, parametersAmount, utils, formatters, moduleInstance));\n      _this.transactionObserver = transactionObserver;\n      _this.promiEvent = new PromiEvent();\n      return _this;\n    }\n\n    _createClass(AbstractObservedTransactionMethod, [{\n      key: \"execute\",\n      value: function execute() {\n        var _this2 = this;\n\n        this.beforeExecution(this.moduleInstance);\n        this.moduleInstance.currentProvider.send(this.rpcMethod, this.parameters).then(function (transactionHash) {\n          var confirmations, receipt;\n\n          if (_this2.callback) {\n            _this2.callback(false, transactionHash);\n\n            return;\n          }\n\n          _this2.promiEvent.emit('transactionHash', transactionHash);\n\n          var transactionConfirmationSubscription = _this2.transactionObserver.observe(transactionHash).subscribe(function (transactionConfirmation) {\n            confirmations = transactionConfirmation.confirmations;\n            receipt = transactionConfirmation.receipt;\n\n            if (!receipt.status) {\n              if (_this2.parameters[0].gas === receipt.gasUsed) {\n                _this2.handleError(new Error(\"Transaction ran out of gas. Please provide more gas:\\n\".concat(JSON.stringify(receipt, null, 2))), receipt, confirmations);\n\n                transactionConfirmationSubscription.unsubscribe();\n                return;\n              }\n\n              _this2.handleError(new Error(\"Transaction has been reverted by the EVM:\\n\".concat(JSON.stringify(receipt, null, 2))), receipt, confirmations);\n\n              transactionConfirmationSubscription.unsubscribe();\n              return;\n            }\n\n            _this2.promiEvent.emit('confirmation', confirmations, _this2.afterExecution(receipt));\n          }, function (error) {\n            _this2.handleError(error, receipt, confirmations);\n          }, function () {\n            if (_this2.promiEvent.listenerCount('receipt') > 0) {\n              _this2.promiEvent.emit('receipt', _this2.afterExecution(receipt));\n\n              _this2.promiEvent.removeAllListeners();\n\n              return;\n            }\n\n            _this2.promiEvent.resolve(_this2.afterExecution(receipt));\n          });\n        }).catch(function (error) {\n          if (_this2.callback) {\n            _this2.callback(error, null);\n\n            return;\n          }\n\n          _this2.handleError(error, false, 0);\n        });\n        return this.promiEvent;\n      }\n    }, {\n      key: \"handleError\",\n      value: function handleError(error, receipt, confirmations) {\n        if (this.promiEvent.listenerCount('error') > 0) {\n          this.promiEvent.emit('error', error, receipt, confirmations);\n          this.promiEvent.removeAllListeners();\n          return;\n        }\n\n        this.promiEvent.reject(error);\n      }\n    }], [{\n      key: \"Type\",\n      get: function get() {\n        return 'observed-transaction-method';\n      }\n    }]);\n\n    return AbstractObservedTransactionMethod;\n  }(AbstractMethod);\n\n  var SendRawTransactionMethod = function (_AbstractObservedTran) {\n    _inherits(SendRawTransactionMethod, _AbstractObservedTran);\n\n    function SendRawTransactionMethod(utils, formatters, moduleInstance, transactionObserver) {\n      _classCallCheck(this, SendRawTransactionMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(SendRawTransactionMethod).call(this, 'eth_sendRawTransaction', 1, utils, formatters, moduleInstance, transactionObserver));\n    }\n\n    return SendRawTransactionMethod;\n  }(AbstractObservedTransactionMethod);\n\n  var ChainIdMethod = function (_AbstractMethod) {\n    _inherits(ChainIdMethod, _AbstractMethod);\n\n    function ChainIdMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, ChainIdMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(ChainIdMethod).call(this, 'eth_chainId', 0, utils, formatters, moduleInstance));\n    }\n\n    _createClass(ChainIdMethod, [{\n      key: \"afterExecution\",\n      value: function afterExecution(response) {\n        return this.utils.hexToNumber(response);\n      }\n    }]);\n\n    return ChainIdMethod;\n  }(AbstractMethod);\n\n  var AbstractMethodFactory = function () {\n    function AbstractMethodFactory(utils, formatters) {\n      _classCallCheck(this, AbstractMethodFactory);\n\n      this.utils = utils;\n      this.formatters = formatters;\n      this._methods = null;\n    }\n\n    _createClass(AbstractMethodFactory, [{\n      key: \"hasMethod\",\n      value: function hasMethod(name) {\n        return typeof this.methods[name] !== 'undefined';\n      }\n    }, {\n      key: \"createMethod\",\n      value: function createMethod(name, moduleInstance) {\n        var method = this.methods[name];\n\n        if (method.Type === 'observed-transaction-method') {\n          return new method(this.utils, this.formatters, moduleInstance, this.createTransactionObserver(moduleInstance));\n        }\n\n        if (method.Type === 'eth-send-transaction-method') {\n          var transactionObserver = this.createTransactionObserver(moduleInstance);\n          return new method(this.utils, this.formatters, moduleInstance, transactionObserver, new ChainIdMethod(this.utils, this.formatters, moduleInstance), new GetTransactionCountMethod(this.utils, this.formatters, moduleInstance), new SendRawTransactionMethod(this.utils, this.formatters, moduleInstance, transactionObserver));\n        }\n\n        return new method(this.utils, this.formatters, moduleInstance);\n      }\n    }, {\n      key: \"getTimeout\",\n      value: function getTimeout(moduleInstance) {\n        var timeout = moduleInstance.transactionBlockTimeout;\n\n        if (!moduleInstance.currentProvider.SOCKET_MESSAGE) {\n          timeout = moduleInstance.transactionPollingTimeout;\n        }\n\n        return timeout;\n      }\n    }, {\n      key: \"createTransactionObserver\",\n      value: function createTransactionObserver(moduleInstance) {\n        return new TransactionObserver(moduleInstance.currentProvider, this.getTimeout(moduleInstance), moduleInstance.transactionConfirmationBlocks, new GetTransactionReceiptMethod(this.utils, this.formatters, moduleInstance), new GetBlockByNumberMethod(this.utils, this.formatters, moduleInstance), new web3CoreSubscriptions.NewHeadsSubscription(this.utils, this.formatters, moduleInstance));\n      }\n    }, {\n      key: \"methods\",\n      get: function get() {\n        if (this._methods) {\n          return this._methods;\n        }\n\n        throw new Error('No methods defined for MethodFactory!');\n      },\n      set: function set(value) {\n        this._methods = value;\n      }\n    }]);\n\n    return AbstractMethodFactory;\n  }();\n\n  var MethodProxy = function MethodProxy(target, methodFactory) {\n    _classCallCheck(this, MethodProxy);\n\n    return new Proxy(target, {\n      get: function get(target, name) {\n        if (methodFactory.hasMethod(name)) {\n          var anonymousFunction = function anonymousFunction() {\n            method.setArguments(arguments);\n            return method.execute();\n          };\n\n          if (typeof target[name] !== 'undefined') {\n            throw new TypeError(\"Duplicated method \".concat(name, \". This method is defined as RPC call and as Object method.\"));\n          }\n\n          var method = methodFactory.createMethod(name, target);\n          anonymousFunction.method = method;\n\n          anonymousFunction.request = function () {\n            method.setArguments(arguments);\n            return method;\n          };\n\n          return anonymousFunction;\n        }\n\n        return target[name];\n      }\n    });\n  };\n\n  var GetProtocolVersionMethod = function (_AbstractMethod) {\n    _inherits(GetProtocolVersionMethod, _AbstractMethod);\n\n    function GetProtocolVersionMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, GetProtocolVersionMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(GetProtocolVersionMethod).call(this, 'eth_protocolVersion', 0, utils, formatters, moduleInstance));\n    }\n\n    return GetProtocolVersionMethod;\n  }(AbstractMethod);\n\n  var VersionMethod = function (_AbstractMethod) {\n    _inherits(VersionMethod, _AbstractMethod);\n\n    function VersionMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, VersionMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(VersionMethod).call(this, 'net_version', 0, utils, formatters, moduleInstance));\n    }\n\n    _createClass(VersionMethod, [{\n      key: \"afterExecution\",\n      value: function afterExecution(response) {\n        return this.utils.hexToNumber(response);\n      }\n    }]);\n\n    return VersionMethod;\n  }(AbstractMethod);\n\n  var ListeningMethod = function (_AbstractMethod) {\n    _inherits(ListeningMethod, _AbstractMethod);\n\n    function ListeningMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, ListeningMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(ListeningMethod).call(this, 'net_listening', 0, utils, formatters, moduleInstance));\n    }\n\n    return ListeningMethod;\n  }(AbstractMethod);\n\n  var PeerCountMethod = function (_AbstractMethod) {\n    _inherits(PeerCountMethod, _AbstractMethod);\n\n    function PeerCountMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, PeerCountMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(PeerCountMethod).call(this, 'net_peerCount', 0, utils, formatters, moduleInstance));\n    }\n\n    _createClass(PeerCountMethod, [{\n      key: \"afterExecution\",\n      value: function afterExecution(response) {\n        return this.utils.hexToNumber(response);\n      }\n    }]);\n\n    return PeerCountMethod;\n  }(AbstractMethod);\n\n  var GetNodeInfoMethod = function (_AbstractMethod) {\n    _inherits(GetNodeInfoMethod, _AbstractMethod);\n\n    function GetNodeInfoMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, GetNodeInfoMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(GetNodeInfoMethod).call(this, 'web3_clientVersion', 0, utils, formatters, moduleInstance));\n    }\n\n    return GetNodeInfoMethod;\n  }(AbstractMethod);\n\n  var GetCoinbaseMethod = function (_AbstractMethod) {\n    _inherits(GetCoinbaseMethod, _AbstractMethod);\n\n    function GetCoinbaseMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, GetCoinbaseMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(GetCoinbaseMethod).call(this, 'eth_coinbase', 0, utils, formatters, moduleInstance));\n    }\n\n    return GetCoinbaseMethod;\n  }(AbstractMethod);\n\n  var IsMiningMethod = function (_AbstractMethod) {\n    _inherits(IsMiningMethod, _AbstractMethod);\n\n    function IsMiningMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, IsMiningMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(IsMiningMethod).call(this, 'eth_mining', 0, utils, formatters, moduleInstance));\n    }\n\n    return IsMiningMethod;\n  }(AbstractMethod);\n\n  var GetHashrateMethod = function (_AbstractMethod) {\n    _inherits(GetHashrateMethod, _AbstractMethod);\n\n    function GetHashrateMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, GetHashrateMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(GetHashrateMethod).call(this, 'eth_hashrate', 0, utils, formatters, moduleInstance));\n    }\n\n    _createClass(GetHashrateMethod, [{\n      key: \"afterExecution\",\n      value: function afterExecution(response) {\n        return this.utils.hexToNumber(response);\n      }\n    }]);\n\n    return GetHashrateMethod;\n  }(AbstractMethod);\n\n  var IsSyncingMethod = function (_AbstractMethod) {\n    _inherits(IsSyncingMethod, _AbstractMethod);\n\n    function IsSyncingMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, IsSyncingMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(IsSyncingMethod).call(this, 'eth_syncing', 0, utils, formatters, moduleInstance));\n    }\n\n    _createClass(IsSyncingMethod, [{\n      key: \"afterExecution\",\n      value: function afterExecution(response) {\n        if (typeof response !== 'boolean') {\n          return this.formatters.outputSyncingFormatter(response);\n        }\n\n        return response;\n      }\n    }]);\n\n    return IsSyncingMethod;\n  }(AbstractMethod);\n\n  var GetGasPriceMethod = function (_AbstractMethod) {\n    _inherits(GetGasPriceMethod, _AbstractMethod);\n\n    function GetGasPriceMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, GetGasPriceMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(GetGasPriceMethod).call(this, 'eth_gasPrice', 0, utils, formatters, moduleInstance));\n    }\n\n    _createClass(GetGasPriceMethod, [{\n      key: \"afterExecution\",\n      value: function afterExecution(response) {\n        return this.formatters.outputBigNumberFormatter(response);\n      }\n    }]);\n\n    return GetGasPriceMethod;\n  }(AbstractMethod);\n\n  var SubmitWorkMethod = function (_AbstractMethod) {\n    _inherits(SubmitWorkMethod, _AbstractMethod);\n\n    function SubmitWorkMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, SubmitWorkMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(SubmitWorkMethod).call(this, 'eth_submitWork', 3, utils, formatters, moduleInstance));\n    }\n\n    return SubmitWorkMethod;\n  }(AbstractMethod);\n\n  var GetWorkMethod = function (_AbstractMethod) {\n    _inherits(GetWorkMethod, _AbstractMethod);\n\n    function GetWorkMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, GetWorkMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(GetWorkMethod).call(this, 'eth_getWork', 0, utils, formatters, moduleInstance));\n    }\n\n    return GetWorkMethod;\n  }(AbstractMethod);\n\n  var GetAccountsMethod = function (_AbstractMethod) {\n    _inherits(GetAccountsMethod, _AbstractMethod);\n\n    function GetAccountsMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, GetAccountsMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(GetAccountsMethod).call(this, 'eth_accounts', 0, utils, formatters, moduleInstance));\n    }\n\n    _createClass(GetAccountsMethod, [{\n      key: \"afterExecution\",\n      value: function afterExecution(response) {\n        var _this = this;\n\n        return response.map(function (responseItem) {\n          return _this.utils.toChecksumAddress(responseItem);\n        });\n      }\n    }]);\n\n    return GetAccountsMethod;\n  }(AbstractMethod);\n\n  var GetBalanceMethod = function (_AbstractMethod) {\n    _inherits(GetBalanceMethod, _AbstractMethod);\n\n    function GetBalanceMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, GetBalanceMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(GetBalanceMethod).call(this, 'eth_getBalance', 2, utils, formatters, moduleInstance));\n    }\n\n    _createClass(GetBalanceMethod, [{\n      key: \"beforeExecution\",\n      value: function beforeExecution(moduleInstance) {\n        this.parameters[0] = this.formatters.inputAddressFormatter(this.parameters[0]);\n\n        if (isFunction(this.parameters[1])) {\n          this.callback = this.parameters[1];\n          this.parameters[1] = moduleInstance.defaultBlock;\n        }\n\n        this.parameters[1] = this.formatters.inputDefaultBlockNumberFormatter(this.parameters[1], moduleInstance);\n      }\n    }, {\n      key: \"afterExecution\",\n      value: function afterExecution(response) {\n        return this.formatters.outputBigNumberFormatter(response);\n      }\n    }]);\n\n    return GetBalanceMethod;\n  }(AbstractMethod);\n\n  var RequestAccountsMethod = function (_AbstractMethod) {\n    _inherits(RequestAccountsMethod, _AbstractMethod);\n\n    function RequestAccountsMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, RequestAccountsMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(RequestAccountsMethod).call(this, 'eth_requestAccounts', 0, utils, formatters, moduleInstance));\n    }\n\n    return RequestAccountsMethod;\n  }(AbstractMethod);\n\n  var AbstractGetUncleMethod = function (_AbstractMethod) {\n    _inherits(AbstractGetUncleMethod, _AbstractMethod);\n\n    function AbstractGetUncleMethod(rpcMethod, utils, formatters, moduleInstance) {\n      _classCallCheck(this, AbstractGetUncleMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(AbstractGetUncleMethod).call(this, rpcMethod, 2, utils, formatters, moduleInstance));\n    }\n\n    _createClass(AbstractGetUncleMethod, [{\n      key: \"beforeExecution\",\n      value: function beforeExecution(moduleInstance) {\n        this.parameters[0] = this.formatters.inputBlockNumberFormatter(this.parameters[0]);\n        this.parameters[1] = this.utils.numberToHex(this.parameters[1]);\n      }\n    }, {\n      key: \"afterExecution\",\n      value: function afterExecution(response) {\n        return this.formatters.outputBlockFormatter(response);\n      }\n    }]);\n\n    return AbstractGetUncleMethod;\n  }(AbstractMethod);\n\n  var AbstractGetBlockTransactionCountMethod = function (_AbstractMethod) {\n    _inherits(AbstractGetBlockTransactionCountMethod, _AbstractMethod);\n\n    function AbstractGetBlockTransactionCountMethod(rpcMethod, utils, formatters, moduleInstance) {\n      _classCallCheck(this, AbstractGetBlockTransactionCountMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(AbstractGetBlockTransactionCountMethod).call(this, rpcMethod, 1, utils, formatters, moduleInstance));\n    }\n\n    _createClass(AbstractGetBlockTransactionCountMethod, [{\n      key: \"beforeExecution\",\n      value: function beforeExecution(moduleInstance) {\n        this.parameters[0] = this.formatters.inputBlockNumberFormatter(this.parameters[0]);\n      }\n    }, {\n      key: \"afterExecution\",\n      value: function afterExecution(response) {\n        return this.utils.hexToNumber(response);\n      }\n    }]);\n\n    return AbstractGetBlockTransactionCountMethod;\n  }(AbstractMethod);\n\n  var AbstractGetBlockUncleCountMethod = function (_AbstractMethod) {\n    _inherits(AbstractGetBlockUncleCountMethod, _AbstractMethod);\n\n    function AbstractGetBlockUncleCountMethod(rpcMethod, utils, formatters, moduleInstance) {\n      _classCallCheck(this, AbstractGetBlockUncleCountMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(AbstractGetBlockUncleCountMethod).call(this, rpcMethod, 1, utils, formatters, moduleInstance));\n    }\n\n    _createClass(AbstractGetBlockUncleCountMethod, [{\n      key: \"beforeExecution\",\n      value: function beforeExecution(moduleInstance) {\n        this.parameters[0] = this.formatters.inputBlockNumberFormatter(this.parameters[0]);\n      }\n    }, {\n      key: \"afterExecution\",\n      value: function afterExecution(response) {\n        return this.utils.hexToNumber(response);\n      }\n    }]);\n\n    return AbstractGetBlockUncleCountMethod;\n  }(AbstractMethod);\n\n  var GetBlockByHashMethod = function (_AbstractGetBlockMeth) {\n    _inherits(GetBlockByHashMethod, _AbstractGetBlockMeth);\n\n    function GetBlockByHashMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, GetBlockByHashMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(GetBlockByHashMethod).call(this, 'eth_getBlockByHash', utils, formatters, moduleInstance));\n    }\n\n    return GetBlockByHashMethod;\n  }(AbstractGetBlockMethod);\n\n  var GetBlockNumberMethod = function (_AbstractMethod) {\n    _inherits(GetBlockNumberMethod, _AbstractMethod);\n\n    function GetBlockNumberMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, GetBlockNumberMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(GetBlockNumberMethod).call(this, 'eth_blockNumber', 0, utils, formatters, moduleInstance));\n    }\n\n    _createClass(GetBlockNumberMethod, [{\n      key: \"afterExecution\",\n      value: function afterExecution(response) {\n        return this.utils.hexToNumber(response);\n      }\n    }]);\n\n    return GetBlockNumberMethod;\n  }(AbstractMethod);\n\n  var GetBlockTransactionCountByHashMethod = function (_AbstractGetBlockTran) {\n    _inherits(GetBlockTransactionCountByHashMethod, _AbstractGetBlockTran);\n\n    function GetBlockTransactionCountByHashMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, GetBlockTransactionCountByHashMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(GetBlockTransactionCountByHashMethod).call(this, 'eth_getBlockTransactionCountByHash', utils, formatters, moduleInstance));\n    }\n\n    return GetBlockTransactionCountByHashMethod;\n  }(AbstractGetBlockTransactionCountMethod);\n\n  var GetBlockTransactionCountByNumberMethod = function (_AbstractGetBlockTran) {\n    _inherits(GetBlockTransactionCountByNumberMethod, _AbstractGetBlockTran);\n\n    function GetBlockTransactionCountByNumberMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, GetBlockTransactionCountByNumberMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(GetBlockTransactionCountByNumberMethod).call(this, 'eth_getBlockTransactionCountByNumber', utils, formatters, moduleInstance));\n    }\n\n    return GetBlockTransactionCountByNumberMethod;\n  }(AbstractGetBlockTransactionCountMethod);\n\n  var GetBlockUncleCountByBlockHashMethod = function (_AbstractGetBlockUncl) {\n    _inherits(GetBlockUncleCountByBlockHashMethod, _AbstractGetBlockUncl);\n\n    function GetBlockUncleCountByBlockHashMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, GetBlockUncleCountByBlockHashMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(GetBlockUncleCountByBlockHashMethod).call(this, 'eth_getUncleCountByBlockHash', utils, formatters, moduleInstance));\n    }\n\n    return GetBlockUncleCountByBlockHashMethod;\n  }(AbstractGetBlockUncleCountMethod);\n\n  var GetBlockUncleCountByBlockNumberMethod = function (_AbstractGetBlockUncl) {\n    _inherits(GetBlockUncleCountByBlockNumberMethod, _AbstractGetBlockUncl);\n\n    function GetBlockUncleCountByBlockNumberMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, GetBlockUncleCountByBlockNumberMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(GetBlockUncleCountByBlockNumberMethod).call(this, 'eth_getUncleCountByBlockNumber', utils, formatters, moduleInstance));\n    }\n\n    return GetBlockUncleCountByBlockNumberMethod;\n  }(AbstractGetBlockUncleCountMethod);\n\n  var GetUncleByBlockHashAndIndexMethod = function (_AbstractGetUncleMeth) {\n    _inherits(GetUncleByBlockHashAndIndexMethod, _AbstractGetUncleMeth);\n\n    function GetUncleByBlockHashAndIndexMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, GetUncleByBlockHashAndIndexMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(GetUncleByBlockHashAndIndexMethod).call(this, 'eth_getUncleByBlockHashAndIndex', utils, formatters, moduleInstance));\n    }\n\n    return GetUncleByBlockHashAndIndexMethod;\n  }(AbstractGetUncleMethod);\n\n  var GetUncleByBlockNumberAndIndexMethod = function (_AbstractGetUncleMeth) {\n    _inherits(GetUncleByBlockNumberAndIndexMethod, _AbstractGetUncleMeth);\n\n    function GetUncleByBlockNumberAndIndexMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, GetUncleByBlockNumberAndIndexMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(GetUncleByBlockNumberAndIndexMethod).call(this, 'eth_getUncleByBlockNumberAndIndex', utils, formatters, moduleInstance));\n    }\n\n    return GetUncleByBlockNumberAndIndexMethod;\n  }(AbstractGetUncleMethod);\n\n  var AbstractGetTransactionFromBlockMethod = function (_AbstractMethod) {\n    _inherits(AbstractGetTransactionFromBlockMethod, _AbstractMethod);\n\n    function AbstractGetTransactionFromBlockMethod(rpcMethod, utils, formatters, moduleInstance) {\n      _classCallCheck(this, AbstractGetTransactionFromBlockMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(AbstractGetTransactionFromBlockMethod).call(this, rpcMethod, 2, utils, formatters, moduleInstance));\n    }\n\n    _createClass(AbstractGetTransactionFromBlockMethod, [{\n      key: \"beforeExecution\",\n      value: function beforeExecution(moduleInstance) {\n        this.parameters[0] = this.formatters.inputBlockNumberFormatter(this.parameters[0]);\n        this.parameters[1] = this.utils.numberToHex(this.parameters[1]);\n      }\n    }, {\n      key: \"afterExecution\",\n      value: function afterExecution(response) {\n        return this.formatters.outputTransactionFormatter(response);\n      }\n    }]);\n\n    return AbstractGetTransactionFromBlockMethod;\n  }(AbstractMethod);\n\n  var SendTransactionMethod = function (_AbstractObservedTran) {\n    _inherits(SendTransactionMethod, _AbstractObservedTran);\n\n    function SendTransactionMethod(utils, formatters, moduleInstance, transactionObserver) {\n      _classCallCheck(this, SendTransactionMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(SendTransactionMethod).call(this, 'eth_sendTransaction', 1, utils, formatters, moduleInstance, transactionObserver));\n    }\n\n    _createClass(SendTransactionMethod, [{\n      key: \"beforeExecution\",\n      value: function beforeExecution(moduleInstance) {\n        this.parameters[0] = this.formatters.inputTransactionFormatter(this.parameters[0], moduleInstance);\n      }\n    }]);\n\n    return SendTransactionMethod;\n  }(AbstractObservedTransactionMethod);\n\n  var EthSendTransactionMethod = function (_SendTransactionMetho) {\n    _inherits(EthSendTransactionMethod, _SendTransactionMetho);\n\n    function EthSendTransactionMethod(utils, formatters, moduleInstance, transactionObserver, chainIdMethod, getTransactionCountMethod, sendRawTransactionMethod) {\n      var _this;\n\n      _classCallCheck(this, EthSendTransactionMethod);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(EthSendTransactionMethod).call(this, utils, formatters, moduleInstance, transactionObserver));\n      _this.chainIdMethod = chainIdMethod;\n      _this.getTransactionCountMethod = getTransactionCountMethod;\n      _this.sendRawTransactionMethod = sendRawTransactionMethod;\n      return _this;\n    }\n\n    _createClass(EthSendTransactionMethod, [{\n      key: \"execute\",\n      value: function execute() {\n        var _this2 = this;\n\n        if (!this.parameters[0].gas && this.moduleInstance.defaultGas) {\n          this.parameters[0]['gas'] = this.moduleInstance.defaultGas;\n        }\n\n        if (!this.parameters[0].gasPrice && this.parameters[0].gasPrice !== 0) {\n          if (!this.moduleInstance.defaultGasPrice) {\n            this.moduleInstance.currentProvider.send('eth_gasPrice', []).then(function (gasPrice) {\n              _this2.parameters[0].gasPrice = gasPrice;\n\n              _this2.execute();\n            }).catch(function (error) {\n              _this2.handleError(error, false, 0);\n            });\n            return this.promiEvent;\n          }\n\n          this.parameters[0]['gasPrice'] = this.moduleInstance.defaultGasPrice;\n        }\n\n        if (this.hasAccounts() && this.isDefaultSigner()) {\n          if (this.moduleInstance.accounts.wallet[this.parameters[0].from]) {\n            this.sendRawTransaction(this.moduleInstance.accounts.wallet[this.parameters[0].from].privateKey).catch(function (error) {\n              _this2.handleError(error, false, 0);\n            });\n            return this.promiEvent;\n          }\n        }\n\n        if (this.hasCustomSigner()) {\n          this.sendRawTransaction().catch(function (error) {\n            _this2.handleError(error, false, 0);\n          });\n          return this.promiEvent;\n        }\n\n        return _get(_getPrototypeOf(EthSendTransactionMethod.prototype), \"execute\", this).call(this);\n      }\n    }, {\n      key: \"sendRawTransaction\",\n      value: function () {\n        var _sendRawTransaction = _asyncToGenerator(_regeneratorRuntime.mark(function _callee() {\n          var privateKey,\n              transaction,\n              response,\n              _args = arguments;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  privateKey = _args.length > 0 && _args[0] !== undefined ? _args[0] : null;\n\n                  if (this.parameters[0].chainId) {\n                    _context.next = 5;\n                    break;\n                  }\n\n                  _context.next = 4;\n                  return this.chainIdMethod.execute();\n\n                case 4:\n                  this.parameters[0].chainId = _context.sent;\n\n                case 5:\n                  if (!(!this.parameters[0].nonce && this.parameters[0].nonce !== 0)) {\n                    _context.next = 10;\n                    break;\n                  }\n\n                  this.getTransactionCountMethod.parameters = [this.parameters[0].from];\n                  _context.next = 9;\n                  return this.getTransactionCountMethod.execute();\n\n                case 9:\n                  this.parameters[0].nonce = _context.sent;\n\n                case 10:\n                  transaction = this.formatters.inputCallFormatter(this.parameters[0], this.moduleInstance);\n                  transaction.to = transaction.to || '0x';\n                  transaction.data = transaction.data || '0x';\n                  transaction.value = transaction.value || '0x';\n                  transaction.chainId = this.utils.numberToHex(transaction.chainId);\n                  delete transaction.from;\n                  _context.next = 18;\n                  return this.moduleInstance.transactionSigner.sign(transaction, privateKey);\n\n                case 18:\n                  response = _context.sent;\n                  this.sendRawTransactionMethod.parameters = [response.rawTransaction];\n                  this.sendRawTransactionMethod.callback = this.callback;\n                  this.sendRawTransactionMethod.promiEvent = this.promiEvent;\n                  return _context.abrupt(\"return\", this.sendRawTransactionMethod.execute());\n\n                case 23:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n\n        function sendRawTransaction() {\n          return _sendRawTransaction.apply(this, arguments);\n        }\n\n        return sendRawTransaction;\n      }()\n    }, {\n      key: \"isDefaultSigner\",\n      value: function isDefaultSigner() {\n        return this.moduleInstance.transactionSigner.constructor.name === 'TransactionSigner';\n      }\n    }, {\n      key: \"hasAccounts\",\n      value: function hasAccounts() {\n        return this.moduleInstance.accounts && this.moduleInstance.accounts.wallet.accountsIndex > 0;\n      }\n    }, {\n      key: \"hasCustomSigner\",\n      value: function hasCustomSigner() {\n        return this.moduleInstance.transactionSigner.constructor.name !== 'TransactionSigner';\n      }\n    }], [{\n      key: \"Type\",\n      get: function get() {\n        return 'eth-send-transaction-method';\n      }\n    }]);\n\n    return EthSendTransactionMethod;\n  }(SendTransactionMethod);\n\n  var GetTransactionMethod = function (_AbstractMethod) {\n    _inherits(GetTransactionMethod, _AbstractMethod);\n\n    function GetTransactionMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, GetTransactionMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(GetTransactionMethod).call(this, 'eth_getTransactionByHash', 1, utils, formatters, moduleInstance));\n    }\n\n    _createClass(GetTransactionMethod, [{\n      key: \"afterExecution\",\n      value: function afterExecution(response) {\n        return this.formatters.outputTransactionFormatter(response);\n      }\n    }]);\n\n    return GetTransactionMethod;\n  }(AbstractMethod);\n\n  var GetTransactionByBlockHashAndIndexMethod = function (_AbstractGetTransacti) {\n    _inherits(GetTransactionByBlockHashAndIndexMethod, _AbstractGetTransacti);\n\n    function GetTransactionByBlockHashAndIndexMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, GetTransactionByBlockHashAndIndexMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(GetTransactionByBlockHashAndIndexMethod).call(this, 'eth_getTransactionByBlockHashAndIndex', utils, formatters, moduleInstance));\n    }\n\n    return GetTransactionByBlockHashAndIndexMethod;\n  }(AbstractGetTransactionFromBlockMethod);\n\n  var GetTransactionByBlockNumberAndIndexMethod = function (_AbstractGetTransacti) {\n    _inherits(GetTransactionByBlockNumberAndIndexMethod, _AbstractGetTransacti);\n\n    function GetTransactionByBlockNumberAndIndexMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, GetTransactionByBlockNumberAndIndexMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(GetTransactionByBlockNumberAndIndexMethod).call(this, 'eth_getTransactionByBlockNumberAndIndex', utils, formatters, moduleInstance));\n    }\n\n    return GetTransactionByBlockNumberAndIndexMethod;\n  }(AbstractGetTransactionFromBlockMethod);\n\n  var SignTransactionMethod = function (_AbstractMethod) {\n    _inherits(SignTransactionMethod, _AbstractMethod);\n\n    function SignTransactionMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, SignTransactionMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(SignTransactionMethod).call(this, 'eth_signTransaction', 1, utils, formatters, moduleInstance));\n    }\n\n    _createClass(SignTransactionMethod, [{\n      key: \"beforeExecution\",\n      value: function beforeExecution(moduleInstance) {\n        this.parameters[0] = this.formatters.inputTransactionFormatter(this.parameters[0], moduleInstance);\n      }\n    }]);\n\n    return SignTransactionMethod;\n  }(AbstractMethod);\n\n  var GetCodeMethod = function (_AbstractMethod) {\n    _inherits(GetCodeMethod, _AbstractMethod);\n\n    function GetCodeMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, GetCodeMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(GetCodeMethod).call(this, 'eth_getCode', 2, utils, formatters, moduleInstance));\n    }\n\n    _createClass(GetCodeMethod, [{\n      key: \"beforeExecution\",\n      value: function beforeExecution(moduleInstance) {\n        this.parameters[0] = this.formatters.inputAddressFormatter(this.parameters[0]);\n\n        if (isFunction(this.parameters[1])) {\n          this.callback = this.parameters[1];\n          this.parameters[1] = moduleInstance.defaultBlock;\n        }\n\n        this.parameters[1] = this.formatters.inputDefaultBlockNumberFormatter(this.parameters[1], moduleInstance);\n      }\n    }]);\n\n    return GetCodeMethod;\n  }(AbstractMethod);\n\n  var SignMethod = function (_AbstractMethod) {\n    _inherits(SignMethod, _AbstractMethod);\n\n    function SignMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, SignMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(SignMethod).call(this, 'eth_sign', 2, utils, formatters, moduleInstance));\n    }\n\n    _createClass(SignMethod, [{\n      key: \"beforeExecution\",\n      value: function beforeExecution(moduleInstance) {\n        this.parameters[0] = this.formatters.inputSignFormatter(this.parameters[0]);\n        this.parameters[1] = this.formatters.inputAddressFormatter(this.parameters[1]);\n        this.parameters.reverse();\n      }\n    }]);\n\n    return SignMethod;\n  }(AbstractMethod);\n\n  var CallMethod = function (_AbstractMethod) {\n    _inherits(CallMethod, _AbstractMethod);\n\n    function CallMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, CallMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(CallMethod).call(this, 'eth_call', 2, utils, formatters, moduleInstance));\n    }\n\n    _createClass(CallMethod, [{\n      key: \"beforeExecution\",\n      value: function beforeExecution(moduleInstance) {\n        this.parameters[0] = this.formatters.inputCallFormatter(this.parameters[0], moduleInstance);\n\n        if (isFunction(this.parameters[1])) {\n          this.callback = this.parameters[1];\n          this.parameters[1] = moduleInstance.defaultBlock;\n        }\n\n        this.parameters[1] = this.formatters.inputDefaultBlockNumberFormatter(this.parameters[1], moduleInstance);\n      }\n    }]);\n\n    return CallMethod;\n  }(AbstractMethod);\n\n  var GetStorageAtMethod = function (_AbstractMethod) {\n    _inherits(GetStorageAtMethod, _AbstractMethod);\n\n    function GetStorageAtMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, GetStorageAtMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(GetStorageAtMethod).call(this, 'eth_getStorageAt', 3, utils, formatters, moduleInstance));\n    }\n\n    _createClass(GetStorageAtMethod, [{\n      key: \"beforeExecution\",\n      value: function beforeExecution(moduleInstance) {\n        this.parameters[0] = this.formatters.inputAddressFormatter(this.parameters[0]);\n        this.parameters[1] = this.utils.numberToHex(this.parameters[1]);\n\n        if (isFunction(this.parameters[2])) {\n          this.callback = this.parameters[2];\n          this.parameters[2] = moduleInstance.defaultBlock;\n        }\n\n        this.parameters[2] = this.formatters.inputDefaultBlockNumberFormatter(this.parameters[2], moduleInstance);\n      }\n    }]);\n\n    return GetStorageAtMethod;\n  }(AbstractMethod);\n\n  var EstimateGasMethod = function (_AbstractMethod) {\n    _inherits(EstimateGasMethod, _AbstractMethod);\n\n    function EstimateGasMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, EstimateGasMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(EstimateGasMethod).call(this, 'eth_estimateGas', 1, utils, formatters, moduleInstance));\n    }\n\n    _createClass(EstimateGasMethod, [{\n      key: \"beforeExecution\",\n      value: function beforeExecution(moduleInstance) {\n        this.parameters[0] = this.formatters.inputCallFormatter(this.parameters[0], moduleInstance);\n      }\n    }, {\n      key: \"afterExecution\",\n      value: function afterExecution(response) {\n        return this.utils.hexToNumber(response);\n      }\n    }]);\n\n    return EstimateGasMethod;\n  }(AbstractMethod);\n\n  var GetPastLogsMethod = function (_AbstractMethod) {\n    _inherits(GetPastLogsMethod, _AbstractMethod);\n\n    function GetPastLogsMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, GetPastLogsMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(GetPastLogsMethod).call(this, 'eth_getLogs', 1, utils, formatters, moduleInstance));\n    }\n\n    _createClass(GetPastLogsMethod, [{\n      key: \"beforeExecution\",\n      value: function beforeExecution(moduleInstance) {\n        this.parameters[0] = this.formatters.inputLogFormatter(this.parameters[0]);\n      }\n    }, {\n      key: \"afterExecution\",\n      value: function afterExecution(response) {\n        var _this = this;\n\n        return response.map(function (responseItem) {\n          return _this.formatters.outputLogFormatter(responseItem);\n        });\n      }\n    }]);\n\n    return GetPastLogsMethod;\n  }(AbstractMethod);\n\n  var EcRecoverMethod = function (_AbstractMethod) {\n    _inherits(EcRecoverMethod, _AbstractMethod);\n\n    function EcRecoverMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, EcRecoverMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(EcRecoverMethod).call(this, 'personal_ecRecover', 2, utils, formatters, moduleInstance));\n    }\n\n    _createClass(EcRecoverMethod, [{\n      key: \"beforeExecution\",\n      value: function beforeExecution(moduleInstance) {\n        this.parameters[0] = this.formatters.inputSignFormatter(this.parameters[0]);\n      }\n    }]);\n\n    return EcRecoverMethod;\n  }(AbstractMethod);\n\n  var ImportRawKeyMethod = function (_AbstractMethod) {\n    _inherits(ImportRawKeyMethod, _AbstractMethod);\n\n    function ImportRawKeyMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, ImportRawKeyMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(ImportRawKeyMethod).call(this, 'personal_importRawKey', 2, utils, formatters, moduleInstance));\n    }\n\n    return ImportRawKeyMethod;\n  }(AbstractMethod);\n\n  var ListAccountsMethod = function (_AbstractMethod) {\n    _inherits(ListAccountsMethod, _AbstractMethod);\n\n    function ListAccountsMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, ListAccountsMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(ListAccountsMethod).call(this, 'personal_listAccounts', 0, utils, formatters, moduleInstance));\n    }\n\n    _createClass(ListAccountsMethod, [{\n      key: \"afterExecution\",\n      value: function afterExecution(response) {\n        var _this = this;\n\n        return response.map(function (responseItem) {\n          return _this.utils.toChecksumAddress(responseItem);\n        });\n      }\n    }]);\n\n    return ListAccountsMethod;\n  }(AbstractMethod);\n\n  var LockAccountMethod = function (_AbstractMethod) {\n    _inherits(LockAccountMethod, _AbstractMethod);\n\n    function LockAccountMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, LockAccountMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(LockAccountMethod).call(this, 'personal_lockAccount', 1, utils, formatters, moduleInstance));\n    }\n\n    _createClass(LockAccountMethod, [{\n      key: \"beforeExecution\",\n      value: function beforeExecution(moduleInstance) {\n        this.parameters[0] = this.formatters.inputAddressFormatter(this.parameters[0]);\n      }\n    }]);\n\n    return LockAccountMethod;\n  }(AbstractMethod);\n\n  var NewAccountMethod = function (_AbstractMethod) {\n    _inherits(NewAccountMethod, _AbstractMethod);\n\n    function NewAccountMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, NewAccountMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(NewAccountMethod).call(this, 'personal_newAccount', 1, utils, formatters, moduleInstance));\n    }\n\n    _createClass(NewAccountMethod, [{\n      key: \"afterExecution\",\n      value: function afterExecution(response) {\n        return this.utils.toChecksumAddress(response);\n      }\n    }]);\n\n    return NewAccountMethod;\n  }(AbstractMethod);\n\n  var PersonalSendTransactionMethod = function (_AbstractMethod) {\n    _inherits(PersonalSendTransactionMethod, _AbstractMethod);\n\n    function PersonalSendTransactionMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, PersonalSendTransactionMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(PersonalSendTransactionMethod).call(this, 'personal_sendTransaction', 2, utils, formatters, moduleInstance));\n    }\n\n    _createClass(PersonalSendTransactionMethod, [{\n      key: \"beforeExecution\",\n      value: function beforeExecution(moduleInstance) {\n        this.parameters[0] = this.formatters.inputTransactionFormatter(this.parameters[0], moduleInstance);\n      }\n    }]);\n\n    return PersonalSendTransactionMethod;\n  }(AbstractMethod);\n\n  var PersonalSignMethod = function (_AbstractMethod) {\n    _inherits(PersonalSignMethod, _AbstractMethod);\n\n    function PersonalSignMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, PersonalSignMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(PersonalSignMethod).call(this, 'personal_sign', 3, utils, formatters, moduleInstance));\n    }\n\n    _createClass(PersonalSignMethod, [{\n      key: \"beforeExecution\",\n      value: function beforeExecution(moduleInstance) {\n        this.parameters[0] = this.formatters.inputSignFormatter(this.parameters[0]);\n        this.parameters[1] = this.formatters.inputAddressFormatter(this.parameters[1]);\n\n        if (isFunction(this.parameters[2])) {\n          this.callback = this.parameters[2];\n          delete this.parameters[2];\n        }\n      }\n    }]);\n\n    return PersonalSignMethod;\n  }(AbstractMethod);\n\n  var PersonalSignTransactionMethod = function (_AbstractMethod) {\n    _inherits(PersonalSignTransactionMethod, _AbstractMethod);\n\n    function PersonalSignTransactionMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, PersonalSignTransactionMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(PersonalSignTransactionMethod).call(this, 'personal_signTransaction', 2, utils, formatters, moduleInstance));\n    }\n\n    _createClass(PersonalSignTransactionMethod, [{\n      key: \"beforeExecution\",\n      value: function beforeExecution(moduleInstance) {\n        this.parameters[0] = this.formatters.inputTransactionFormatter(this.parameters[0], moduleInstance);\n      }\n    }]);\n\n    return PersonalSignTransactionMethod;\n  }(AbstractMethod);\n\n  var UnlockAccountMethod = function (_AbstractMethod) {\n    _inherits(UnlockAccountMethod, _AbstractMethod);\n\n    function UnlockAccountMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, UnlockAccountMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(UnlockAccountMethod).call(this, 'personal_unlockAccount', 3, utils, formatters, moduleInstance));\n    }\n\n    _createClass(UnlockAccountMethod, [{\n      key: \"beforeExecution\",\n      value: function beforeExecution(moduleInstance) {\n        this.parameters[0] = this.formatters.inputAddressFormatter(this.parameters[0]);\n      }\n    }]);\n\n    return UnlockAccountMethod;\n  }(AbstractMethod);\n\n  var AddPrivateKeyMethod = function (_AbstractMethod) {\n    _inherits(AddPrivateKeyMethod, _AbstractMethod);\n\n    function AddPrivateKeyMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, AddPrivateKeyMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(AddPrivateKeyMethod).call(this, 'shh_addPrivateKey', 1, utils, formatters, moduleInstance));\n    }\n\n    return AddPrivateKeyMethod;\n  }(AbstractMethod);\n\n  var AddSymKeyMethod = function (_AbstractMethod) {\n    _inherits(AddSymKeyMethod, _AbstractMethod);\n\n    function AddSymKeyMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, AddSymKeyMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(AddSymKeyMethod).call(this, 'shh_addSymKey', 1, utils, formatters, moduleInstance));\n    }\n\n    return AddSymKeyMethod;\n  }(AbstractMethod);\n\n  var DeleteKeyPairMethod = function (_AbstractMethod) {\n    _inherits(DeleteKeyPairMethod, _AbstractMethod);\n\n    function DeleteKeyPairMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, DeleteKeyPairMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(DeleteKeyPairMethod).call(this, 'shh_deleteKeyPair', 1, utils, formatters, moduleInstance));\n    }\n\n    return DeleteKeyPairMethod;\n  }(AbstractMethod);\n\n  var DeleteMessageFilterMethod = function (_AbstractMethod) {\n    _inherits(DeleteMessageFilterMethod, _AbstractMethod);\n\n    function DeleteMessageFilterMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, DeleteMessageFilterMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(DeleteMessageFilterMethod).call(this, 'shh_deleteMessageFilter', 1, utils, formatters, moduleInstance));\n    }\n\n    return DeleteMessageFilterMethod;\n  }(AbstractMethod);\n\n  var DeleteSymKeyMethod = function (_AbstractMethod) {\n    _inherits(DeleteSymKeyMethod, _AbstractMethod);\n\n    function DeleteSymKeyMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, DeleteSymKeyMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(DeleteSymKeyMethod).call(this, 'shh_deleteSymKey', 1, utils, formatters, moduleInstance));\n    }\n\n    return DeleteSymKeyMethod;\n  }(AbstractMethod);\n\n  var GenerateSymKeyFromPasswordMethod = function (_AbstractMethod) {\n    _inherits(GenerateSymKeyFromPasswordMethod, _AbstractMethod);\n\n    function GenerateSymKeyFromPasswordMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, GenerateSymKeyFromPasswordMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(GenerateSymKeyFromPasswordMethod).call(this, 'shh_generateSymKeyFromPassword', 1, utils, formatters, moduleInstance));\n    }\n\n    return GenerateSymKeyFromPasswordMethod;\n  }(AbstractMethod);\n\n  var GetFilterMessagesMethod = function (_AbstractMethod) {\n    _inherits(GetFilterMessagesMethod, _AbstractMethod);\n\n    function GetFilterMessagesMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, GetFilterMessagesMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(GetFilterMessagesMethod).call(this, 'shh_getFilterMessages', 1, utils, formatters, moduleInstance));\n    }\n\n    return GetFilterMessagesMethod;\n  }(AbstractMethod);\n\n  var GetInfoMethod = function (_AbstractMethod) {\n    _inherits(GetInfoMethod, _AbstractMethod);\n\n    function GetInfoMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, GetInfoMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(GetInfoMethod).call(this, 'shh_info', 0, utils, formatters, moduleInstance));\n    }\n\n    return GetInfoMethod;\n  }(AbstractMethod);\n\n  var GetPrivateKeyMethod = function (_AbstractMethod) {\n    _inherits(GetPrivateKeyMethod, _AbstractMethod);\n\n    function GetPrivateKeyMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, GetPrivateKeyMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(GetPrivateKeyMethod).call(this, 'shh_getPrivateKey', 1, utils, formatters, moduleInstance));\n    }\n\n    return GetPrivateKeyMethod;\n  }(AbstractMethod);\n\n  var GetPublicKeyMethod = function (_AbstractMethod) {\n    _inherits(GetPublicKeyMethod, _AbstractMethod);\n\n    function GetPublicKeyMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, GetPublicKeyMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(GetPublicKeyMethod).call(this, 'shh_getPublicKey', 1, utils, formatters, moduleInstance));\n    }\n\n    return GetPublicKeyMethod;\n  }(AbstractMethod);\n\n  var GetSymKeyMethod = function (_AbstractMethod) {\n    _inherits(GetSymKeyMethod, _AbstractMethod);\n\n    function GetSymKeyMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, GetSymKeyMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(GetSymKeyMethod).call(this, 'shh_getSymKey', 1, utils, formatters, moduleInstance));\n    }\n\n    return GetSymKeyMethod;\n  }(AbstractMethod);\n\n  var HasKeyPairMethod = function (_AbstractMethod) {\n    _inherits(HasKeyPairMethod, _AbstractMethod);\n\n    function HasKeyPairMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, HasKeyPairMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(HasKeyPairMethod).call(this, 'shh_hasKeyPair', 1, utils, formatters, moduleInstance));\n    }\n\n    return HasKeyPairMethod;\n  }(AbstractMethod);\n\n  var HasSymKeyMethod = function (_AbstractMethod) {\n    _inherits(HasSymKeyMethod, _AbstractMethod);\n\n    function HasSymKeyMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, HasSymKeyMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(HasSymKeyMethod).call(this, 'shh_hasSymKey', 1, utils, formatters, moduleInstance));\n    }\n\n    return HasSymKeyMethod;\n  }(AbstractMethod);\n\n  var MarkTrustedPeerMethod = function (_AbstractMethod) {\n    _inherits(MarkTrustedPeerMethod, _AbstractMethod);\n\n    function MarkTrustedPeerMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, MarkTrustedPeerMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(MarkTrustedPeerMethod).call(this, 'shh_markTrustedPeer', 1, utils, formatters, moduleInstance));\n    }\n\n    return MarkTrustedPeerMethod;\n  }(AbstractMethod);\n\n  var NewKeyPairMethod = function (_AbstractMethod) {\n    _inherits(NewKeyPairMethod, _AbstractMethod);\n\n    function NewKeyPairMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, NewKeyPairMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(NewKeyPairMethod).call(this, 'shh_newKeyPair', 0, utils, formatters, moduleInstance));\n    }\n\n    return NewKeyPairMethod;\n  }(AbstractMethod);\n\n  var NewMessageFilterMethod = function (_AbstractMethod) {\n    _inherits(NewMessageFilterMethod, _AbstractMethod);\n\n    function NewMessageFilterMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, NewMessageFilterMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(NewMessageFilterMethod).call(this, 'shh_newMessageFilter', 1, utils, formatters, moduleInstance));\n    }\n\n    return NewMessageFilterMethod;\n  }(AbstractMethod);\n\n  var NewSymKeyMethod = function (_AbstractMethod) {\n    _inherits(NewSymKeyMethod, _AbstractMethod);\n\n    function NewSymKeyMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, NewSymKeyMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(NewSymKeyMethod).call(this, 'shh_newSymKey', 0, utils, formatters, moduleInstance));\n    }\n\n    return NewSymKeyMethod;\n  }(AbstractMethod);\n\n  var PostMethod = function (_AbstractMethod) {\n    _inherits(PostMethod, _AbstractMethod);\n\n    function PostMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, PostMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(PostMethod).call(this, 'shh_post', 1, utils, formatters, moduleInstance));\n    }\n\n    return PostMethod;\n  }(AbstractMethod);\n\n  var SetMaxMessageSizeMethod = function (_AbstractMethod) {\n    _inherits(SetMaxMessageSizeMethod, _AbstractMethod);\n\n    function SetMaxMessageSizeMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, SetMaxMessageSizeMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(SetMaxMessageSizeMethod).call(this, 'shh_setMaxMessageSize', 1, utils, formatters, moduleInstance));\n    }\n\n    return SetMaxMessageSizeMethod;\n  }(AbstractMethod);\n\n  var SetMinPoWMethod = function (_AbstractMethod) {\n    _inherits(SetMinPoWMethod, _AbstractMethod);\n\n    function SetMinPoWMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, SetMinPoWMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(SetMinPoWMethod).call(this, 'shh_setMinPoW', 1, utils, formatters, moduleInstance));\n    }\n\n    return SetMinPoWMethod;\n  }(AbstractMethod);\n\n  var ShhVersionMethod = function (_AbstractMethod) {\n    _inherits(ShhVersionMethod, _AbstractMethod);\n\n    function ShhVersionMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, ShhVersionMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(ShhVersionMethod).call(this, 'shh_version', 0, utils, formatters, moduleInstance));\n    }\n\n    return ShhVersionMethod;\n  }(AbstractMethod);\n\n  exports.PromiEvent = PromiEvent;\n  exports.AbstractMethodFactory = AbstractMethodFactory;\n  exports.AbstractMethod = AbstractMethod;\n  exports.MethodProxy = MethodProxy;\n  exports.TransactionObserver = TransactionObserver;\n  exports.GetProtocolVersionMethod = GetProtocolVersionMethod;\n  exports.VersionMethod = VersionMethod;\n  exports.ListeningMethod = ListeningMethod;\n  exports.PeerCountMethod = PeerCountMethod;\n  exports.ChainIdMethod = ChainIdMethod;\n  exports.GetNodeInfoMethod = GetNodeInfoMethod;\n  exports.GetCoinbaseMethod = GetCoinbaseMethod;\n  exports.IsMiningMethod = IsMiningMethod;\n  exports.GetHashrateMethod = GetHashrateMethod;\n  exports.IsSyncingMethod = IsSyncingMethod;\n  exports.GetGasPriceMethod = GetGasPriceMethod;\n  exports.SubmitWorkMethod = SubmitWorkMethod;\n  exports.GetWorkMethod = GetWorkMethod;\n  exports.GetAccountsMethod = GetAccountsMethod;\n  exports.GetBalanceMethod = GetBalanceMethod;\n  exports.GetTransactionCountMethod = GetTransactionCountMethod;\n  exports.RequestAccountsMethod = RequestAccountsMethod;\n  exports.AbstractGetBlockMethod = AbstractGetBlockMethod;\n  exports.AbstractGetUncleMethod = AbstractGetUncleMethod;\n  exports.AbstractGetBlockTransactionCountMethod = AbstractGetBlockTransactionCountMethod;\n  exports.AbstractGetBlockUncleCountMethod = AbstractGetBlockUncleCountMethod;\n  exports.GetBlockByHashMethod = GetBlockByHashMethod;\n  exports.GetBlockByNumberMethod = GetBlockByNumberMethod;\n  exports.GetBlockNumberMethod = GetBlockNumberMethod;\n  exports.GetBlockTransactionCountByHashMethod = GetBlockTransactionCountByHashMethod;\n  exports.GetBlockTransactionCountByNumberMethod = GetBlockTransactionCountByNumberMethod;\n  exports.GetBlockUncleCountByBlockHashMethod = GetBlockUncleCountByBlockHashMethod;\n  exports.GetBlockUncleCountByBlockNumberMethod = GetBlockUncleCountByBlockNumberMethod;\n  exports.GetUncleByBlockHashAndIndexMethod = GetUncleByBlockHashAndIndexMethod;\n  exports.GetUncleByBlockNumberAndIndexMethod = GetUncleByBlockNumberAndIndexMethod;\n  exports.AbstractGetTransactionFromBlockMethod = AbstractGetTransactionFromBlockMethod;\n  exports.AbstractObservedTransactionMethod = AbstractObservedTransactionMethod;\n  exports.EthSendTransactionMethod = EthSendTransactionMethod;\n  exports.GetTransactionMethod = GetTransactionMethod;\n  exports.GetTransactionByBlockHashAndIndexMethod = GetTransactionByBlockHashAndIndexMethod;\n  exports.GetTransactionByBlockNumberAndIndexMethod = GetTransactionByBlockNumberAndIndexMethod;\n  exports.GetTransactionReceiptMethod = GetTransactionReceiptMethod;\n  exports.SendRawTransactionMethod = SendRawTransactionMethod;\n  exports.SignTransactionMethod = SignTransactionMethod;\n  exports.SendTransactionMethod = SendTransactionMethod;\n  exports.GetCodeMethod = GetCodeMethod;\n  exports.SignMethod = SignMethod;\n  exports.CallMethod = CallMethod;\n  exports.GetStorageAtMethod = GetStorageAtMethod;\n  exports.EstimateGasMethod = EstimateGasMethod;\n  exports.GetPastLogsMethod = GetPastLogsMethod;\n  exports.EcRecoverMethod = EcRecoverMethod;\n  exports.ImportRawKeyMethod = ImportRawKeyMethod;\n  exports.ListAccountsMethod = ListAccountsMethod;\n  exports.LockAccountMethod = LockAccountMethod;\n  exports.NewAccountMethod = NewAccountMethod;\n  exports.PersonalSendTransactionMethod = PersonalSendTransactionMethod;\n  exports.PersonalSignMethod = PersonalSignMethod;\n  exports.PersonalSignTransactionMethod = PersonalSignTransactionMethod;\n  exports.UnlockAccountMethod = UnlockAccountMethod;\n  exports.AddPrivateKeyMethod = AddPrivateKeyMethod;\n  exports.AddSymKeyMethod = AddSymKeyMethod;\n  exports.DeleteKeyPairMethod = DeleteKeyPairMethod;\n  exports.DeleteMessageFilterMethod = DeleteMessageFilterMethod;\n  exports.DeleteSymKeyMethod = DeleteSymKeyMethod;\n  exports.GenerateSymKeyFromPasswordMethod = GenerateSymKeyFromPasswordMethod;\n  exports.GetFilterMessagesMethod = GetFilterMessagesMethod;\n  exports.GetInfoMethod = GetInfoMethod;\n  exports.GetPrivateKeyMethod = GetPrivateKeyMethod;\n  exports.GetPublicKeyMethod = GetPublicKeyMethod;\n  exports.GetSymKeyMethod = GetSymKeyMethod;\n  exports.HasKeyPairMethod = HasKeyPairMethod;\n  exports.HasSymKeyMethod = HasSymKeyMethod;\n  exports.MarkTrustedPeerMethod = MarkTrustedPeerMethod;\n  exports.NewKeyPairMethod = NewKeyPairMethod;\n  exports.NewMessageFilterMethod = NewMessageFilterMethod;\n  exports.NewSymKeyMethod = NewSymKeyMethod;\n  exports.PostMethod = PostMethod;\n  exports.SetMaxMessageSizeMethod = SetMaxMessageSizeMethod;\n  exports.SetMinPoWMethod = SetMinPoWMethod;\n  exports.ShhVersionMethod = ShhVersionMethod;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"sources":["/Users/chasesmith/Desktop/registry-display/src/node_modules/web3-core-method/dist/web3-core-method.umd.js"],"names":["global","factory","exports","module","require","define","amd","Web3CoreMethod","EventEmitter","web3CoreSubscriptions","_toConsumableArray","isString","cloneDeep","rxjs","_regeneratorRuntime","_asyncToGenerator","_get","isFunction","_createClass","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","_inherits","hasOwnProperty","PromiEvent","_this","promise","Promise","resolve","reject","eventEmitter","Proxy","get","proxyHandler","key","value","target","name","then","bind","catch","AbstractMethod","rpcMethod","parametersAmount","utils","formatters","moduleInstance","_arguments","parameters","_rpcMethod","_parametersAmount","beforeExecution","afterExecution","response","_execute","mark","_callee","wrap","_callee$","_context","prev","next","length","Error","concat","currentProvider","send","sent","callback","abrupt","t0","stop","execute","apply","arguments","setArguments","args","TypeError","pop","getArguments","isHash","parameter","startsWith","set","AbstractGetBlockMethod","_AbstractMethod","call","inputBlockNumberFormatter","outputBlockFormatter","GetBlockByNumberMethod","_AbstractGetBlockMeth","GetTransactionReceiptMethod","outputTransactionReceiptFormatter","TransactionObserver","provider","timeout","blockConfirmations","getTransactionReceiptMethod","getBlockByNumberMethod","newHeadsSubscription","blockNumbers","lastBlock","confirmations","confirmationChecks","interval","observe","transactionHash","Observable","create","observer","isSocketBasedProvider","startSocketObserver","startHttpObserver","_this2","subscribe","_ref","error","newHead","receipt","closed","unsubscribe","includes","number","emitNext","isConfirmed","complete","push","isTimeoutTimeExceeded","emitError","_x","_x2","_this3","setInterval","_callee2","block","_callee2$","_context2","clearInterval","getBlockByNumber","increaseBlockNumber","isValidConfirmation","blockNumber","blockHash","hash","parentHash","constructor","parseInt","toString","GetTransactionCountMethod","inputAddressFormatter","defaultBlock","inputDefaultBlockNumberFormatter","hexToNumber","AbstractObservedTransactionMethod","transactionObserver","promiEvent","emit","transactionConfirmationSubscription","transactionConfirmation","status","gas","gasUsed","handleError","JSON","stringify","listenerCount","removeAllListeners","SendRawTransactionMethod","_AbstractObservedTran","ChainIdMethod","AbstractMethodFactory","_methods","hasMethod","methods","createMethod","method","Type","createTransactionObserver","getTimeout","transactionBlockTimeout","SOCKET_MESSAGE","transactionPollingTimeout","transactionConfirmationBlocks","NewHeadsSubscription","MethodProxy","methodFactory","anonymousFunction","request","GetProtocolVersionMethod","VersionMethod","ListeningMethod","PeerCountMethod","GetNodeInfoMethod","GetCoinbaseMethod","IsMiningMethod","GetHashrateMethod","IsSyncingMethod","outputSyncingFormatter","GetGasPriceMethod","outputBigNumberFormatter","SubmitWorkMethod","GetWorkMethod","GetAccountsMethod","map","responseItem","toChecksumAddress","GetBalanceMethod","RequestAccountsMethod","AbstractGetUncleMethod","numberToHex","AbstractGetBlockTransactionCountMethod","AbstractGetBlockUncleCountMethod","GetBlockByHashMethod","GetBlockNumberMethod","GetBlockTransactionCountByHashMethod","_AbstractGetBlockTran","GetBlockTransactionCountByNumberMethod","GetBlockUncleCountByBlockHashMethod","_AbstractGetBlockUncl","GetBlockUncleCountByBlockNumberMethod","GetUncleByBlockHashAndIndexMethod","_AbstractGetUncleMeth","GetUncleByBlockNumberAndIndexMethod","AbstractGetTransactionFromBlockMethod","outputTransactionFormatter","SendTransactionMethod","inputTransactionFormatter","EthSendTransactionMethod","_SendTransactionMetho","chainIdMethod","getTransactionCountMethod","sendRawTransactionMethod","defaultGas","gasPrice","defaultGasPrice","hasAccounts","isDefaultSigner","accounts","wallet","from","sendRawTransaction","privateKey","hasCustomSigner","prototype","_sendRawTransaction","transaction","_args","undefined","chainId","nonce","inputCallFormatter","to","data","transactionSigner","sign","rawTransaction","accountsIndex","GetTransactionMethod","GetTransactionByBlockHashAndIndexMethod","_AbstractGetTransacti","GetTransactionByBlockNumberAndIndexMethod","SignTransactionMethod","GetCodeMethod","SignMethod","inputSignFormatter","reverse","CallMethod","GetStorageAtMethod","EstimateGasMethod","GetPastLogsMethod","inputLogFormatter","outputLogFormatter","EcRecoverMethod","ImportRawKeyMethod","ListAccountsMethod","LockAccountMethod","NewAccountMethod","PersonalSendTransactionMethod","PersonalSignMethod","PersonalSignTransactionMethod","UnlockAccountMethod","AddPrivateKeyMethod","AddSymKeyMethod","DeleteKeyPairMethod","DeleteMessageFilterMethod","DeleteSymKeyMethod","GenerateSymKeyFromPasswordMethod","GetFilterMessagesMethod","GetInfoMethod","GetPrivateKeyMethod","GetPublicKeyMethod","GetSymKeyMethod","HasKeyPairMethod","HasSymKeyMethod","MarkTrustedPeerMethod","NewKeyPairMethod","NewMessageFilterMethod","NewSymKeyMethod","PostMethod","SetMaxMessageSizeMethod","SetMinPoWMethod","ShhVersionMethod","Object","defineProperty"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('eventemitter3'), require('web3-core-subscriptions'), require('@babel/runtime/helpers/toConsumableArray'), require('lodash/isString'), require('lodash/cloneDeep'), require('rxjs'), require('@babel/runtime/regenerator'), require('@babel/runtime/helpers/asyncToGenerator'), require('@babel/runtime/helpers/get'), require('lodash/isFunction'), require('@babel/runtime/helpers/createClass'), require('@babel/runtime/helpers/classCallCheck'), require('@babel/runtime/helpers/possibleConstructorReturn'), require('@babel/runtime/helpers/getPrototypeOf'), require('@babel/runtime/helpers/inherits')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'eventemitter3', 'web3-core-subscriptions', '@babel/runtime/helpers/toConsumableArray', 'lodash/isString', 'lodash/cloneDeep', 'rxjs', '@babel/runtime/regenerator', '@babel/runtime/helpers/asyncToGenerator', '@babel/runtime/helpers/get', 'lodash/isFunction', '@babel/runtime/helpers/createClass', '@babel/runtime/helpers/classCallCheck', '@babel/runtime/helpers/possibleConstructorReturn', '@babel/runtime/helpers/getPrototypeOf', '@babel/runtime/helpers/inherits'], factory) :\n    (factory((global.Web3CoreMethod = {}),global.EventEmitter,global.web3CoreSubscriptions,global._toConsumableArray,global.isString,global.cloneDeep,global.rxjs,global._regeneratorRuntime,global._asyncToGenerator,global._get,global.isFunction,global._createClass,global._classCallCheck,global._possibleConstructorReturn,global._getPrototypeOf,global._inherits));\n}(this, (function (exports,EventEmitter,web3CoreSubscriptions,_toConsumableArray,isString,cloneDeep,rxjs,_regeneratorRuntime,_asyncToGenerator,_get,isFunction,_createClass,_classCallCheck,_possibleConstructorReturn,_getPrototypeOf,_inherits) { 'use strict';\n\n    EventEmitter = EventEmitter && EventEmitter.hasOwnProperty('default') ? EventEmitter['default'] : EventEmitter;\n    _toConsumableArray = _toConsumableArray && _toConsumableArray.hasOwnProperty('default') ? _toConsumableArray['default'] : _toConsumableArray;\n    isString = isString && isString.hasOwnProperty('default') ? isString['default'] : isString;\n    cloneDeep = cloneDeep && cloneDeep.hasOwnProperty('default') ? cloneDeep['default'] : cloneDeep;\n    _regeneratorRuntime = _regeneratorRuntime && _regeneratorRuntime.hasOwnProperty('default') ? _regeneratorRuntime['default'] : _regeneratorRuntime;\n    _asyncToGenerator = _asyncToGenerator && _asyncToGenerator.hasOwnProperty('default') ? _asyncToGenerator['default'] : _asyncToGenerator;\n    _get = _get && _get.hasOwnProperty('default') ? _get['default'] : _get;\n    isFunction = isFunction && isFunction.hasOwnProperty('default') ? isFunction['default'] : isFunction;\n    _createClass = _createClass && _createClass.hasOwnProperty('default') ? _createClass['default'] : _createClass;\n    _classCallCheck = _classCallCheck && _classCallCheck.hasOwnProperty('default') ? _classCallCheck['default'] : _classCallCheck;\n    _possibleConstructorReturn = _possibleConstructorReturn && _possibleConstructorReturn.hasOwnProperty('default') ? _possibleConstructorReturn['default'] : _possibleConstructorReturn;\n    _getPrototypeOf = _getPrototypeOf && _getPrototypeOf.hasOwnProperty('default') ? _getPrototypeOf['default'] : _getPrototypeOf;\n    _inherits = _inherits && _inherits.hasOwnProperty('default') ? _inherits['default'] : _inherits;\n\n    var PromiEvent =\n    function () {\n      function PromiEvent() {\n        var _this = this;\n        _classCallCheck(this, PromiEvent);\n        this.promise = new Promise(function (resolve, reject) {\n          _this.resolve = resolve;\n          _this.reject = reject;\n        });\n        this.eventEmitter = new EventEmitter();\n        return new Proxy(this, {\n          get: this.proxyHandler\n        });\n      }\n      _createClass(PromiEvent, [{\n        key: \"proxyHandler\",\n        value: function proxyHandler(target, name) {\n          if (name === 'resolve' || name === 'reject') {\n            return target[name];\n          }\n          if (name === 'then') {\n            return target.promise.then.bind(target.promise);\n          }\n          if (name === 'catch') {\n            return target.promise.catch.bind(target.promise);\n          }\n          if (target.eventEmitter[name]) {\n            return target.eventEmitter[name];\n          }\n        }\n      }]);\n      return PromiEvent;\n    }();\n\n    var AbstractMethod =\n    function () {\n      function AbstractMethod(rpcMethod, parametersAmount, utils, formatters, moduleInstance) {\n        _classCallCheck(this, AbstractMethod);\n        this.utils = utils;\n        this.formatters = formatters;\n        this.moduleInstance = moduleInstance;\n        this._arguments = {\n          parameters: []\n        };\n        this._rpcMethod = rpcMethod;\n        this._parametersAmount = parametersAmount;\n      }\n      _createClass(AbstractMethod, [{\n        key: \"beforeExecution\",\n        value: function beforeExecution(moduleInstance) {}\n      }, {\n        key: \"afterExecution\",\n        value: function afterExecution(response) {\n          return response;\n        }\n      }, {\n        key: \"execute\",\n        value: function () {\n          var _execute = _asyncToGenerator(\n          _regeneratorRuntime.mark(function _callee() {\n            var response;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    this.beforeExecution(this.moduleInstance);\n                    if (!(this.parameters.length !== this.parametersAmount)) {\n                      _context.next = 3;\n                      break;\n                    }\n                    throw new Error(\"Invalid Arguments length: expected: \".concat(this.parametersAmount, \", given: \").concat(this.parameters.length));\n                  case 3:\n                    _context.prev = 3;\n                    _context.next = 6;\n                    return this.moduleInstance.currentProvider.send(this.rpcMethod, this.parameters);\n                  case 6:\n                    response = _context.sent;\n                    if (response) {\n                      response = this.afterExecution(response);\n                    }\n                    if (this.callback) {\n                      this.callback(false, response);\n                    }\n                    return _context.abrupt(\"return\", response);\n                  case 12:\n                    _context.prev = 12;\n                    _context.t0 = _context[\"catch\"](3);\n                    if (this.callback) {\n                      this.callback(_context.t0, null);\n                    }\n                    throw _context.t0;\n                  case 16:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, this, [[3, 12]]);\n          }));\n          function execute() {\n            return _execute.apply(this, arguments);\n          }\n          return execute;\n        }()\n      }, {\n        key: \"setArguments\",\n        value: function setArguments(args) {\n          var parameters = cloneDeep(_toConsumableArray(args));\n          var callback = null;\n          if (parameters.length > this.parametersAmount) {\n            if (!isFunction(parameters[parameters.length - 1])) {\n              throw new TypeError(\"The latest parameter should be a function otherwise it can't be used as callback\");\n            }\n            callback = parameters.pop();\n          }\n          this._arguments = {\n            callback: callback,\n            parameters: parameters\n          };\n        }\n      }, {\n        key: \"getArguments\",\n        value: function getArguments() {\n          return this._arguments;\n        }\n      }, {\n        key: \"isHash\",\n        value: function isHash(parameter) {\n          return isString(parameter) && parameter.startsWith('0x');\n        }\n      }, {\n        key: \"rpcMethod\",\n        set: function set(value) {\n          this._rpcMethod = value;\n        }\n        ,\n        get: function get() {\n          return this._rpcMethod;\n        }\n      }, {\n        key: \"parametersAmount\",\n        set: function set(value) {\n          this._parametersAmount = value;\n        }\n        ,\n        get: function get() {\n          return this._parametersAmount;\n        }\n      }, {\n        key: \"parameters\",\n        get: function get() {\n          return this._arguments.parameters;\n        }\n        ,\n        set: function set(value) {\n          this._arguments.parameters = value;\n        }\n      }, {\n        key: \"callback\",\n        get: function get() {\n          return this._arguments.callback;\n        }\n        ,\n        set: function set(value) {\n          this._arguments.callback = value;\n        }\n      }]);\n      return AbstractMethod;\n    }();\n\n    var AbstractGetBlockMethod =\n    function (_AbstractMethod) {\n      _inherits(AbstractGetBlockMethod, _AbstractMethod);\n      function AbstractGetBlockMethod(rpcMethod, utils, formatters, moduleInstance) {\n        _classCallCheck(this, AbstractGetBlockMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(AbstractGetBlockMethod).call(this, rpcMethod, 2, utils, formatters, moduleInstance));\n      }\n      _createClass(AbstractGetBlockMethod, [{\n        key: \"beforeExecution\",\n        value: function beforeExecution(moduleInstance) {\n          this.parameters[0] = this.formatters.inputBlockNumberFormatter(this.parameters[0]);\n          if (isFunction(this.parameters[1])) {\n            this.callback = this.parameters[1];\n            this.parameters[1] = false;\n          } else {\n            this.parameters[1] = !!this.parameters[1];\n          }\n        }\n      }, {\n        key: \"afterExecution\",\n        value: function afterExecution(response) {\n          return this.formatters.outputBlockFormatter(response);\n        }\n      }]);\n      return AbstractGetBlockMethod;\n    }(AbstractMethod);\n\n    var GetBlockByNumberMethod =\n    function (_AbstractGetBlockMeth) {\n      _inherits(GetBlockByNumberMethod, _AbstractGetBlockMeth);\n      function GetBlockByNumberMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetBlockByNumberMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetBlockByNumberMethod).call(this, 'eth_getBlockByNumber', utils, formatters, moduleInstance));\n      }\n      return GetBlockByNumberMethod;\n    }(AbstractGetBlockMethod);\n\n    var GetTransactionReceiptMethod =\n    function (_AbstractMethod) {\n      _inherits(GetTransactionReceiptMethod, _AbstractMethod);\n      function GetTransactionReceiptMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetTransactionReceiptMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetTransactionReceiptMethod).call(this, 'eth_getTransactionReceipt', 1, utils, formatters, moduleInstance));\n      }\n      _createClass(GetTransactionReceiptMethod, [{\n        key: \"afterExecution\",\n        value: function afterExecution(response) {\n          if (response !== null) {\n            return this.formatters.outputTransactionReceiptFormatter(response);\n          }\n          return response;\n        }\n      }]);\n      return GetTransactionReceiptMethod;\n    }(AbstractMethod);\n\n    var TransactionObserver =\n    function () {\n      function TransactionObserver(provider, timeout, blockConfirmations, getTransactionReceiptMethod, getBlockByNumberMethod, newHeadsSubscription) {\n        _classCallCheck(this, TransactionObserver);\n        this.provider = provider;\n        this.timeout = timeout;\n        this.blockConfirmations = blockConfirmations;\n        this.getTransactionReceiptMethod = getTransactionReceiptMethod;\n        this.getBlockByNumberMethod = getBlockByNumberMethod;\n        this.newHeadsSubscription = newHeadsSubscription;\n        this.blockNumbers = [];\n        this.lastBlock = false;\n        this.confirmations = 0;\n        this.confirmationChecks = 0;\n        this.interval = false;\n      }\n      _createClass(TransactionObserver, [{\n        key: \"observe\",\n        value: function observe(transactionHash) {\n          var _this = this;\n          return rxjs.Observable.create(function (observer) {\n            if (_this.isSocketBasedProvider()) {\n              _this.startSocketObserver(transactionHash, observer);\n            } else {\n              _this.startHttpObserver(transactionHash, observer);\n            }\n          });\n        }\n      }, {\n        key: \"startSocketObserver\",\n        value: function startSocketObserver(transactionHash, observer) {\n          var _this2 = this;\n          this.newHeadsSubscription.subscribe(\n          function () {\n            var _ref = _asyncToGenerator(\n            _regeneratorRuntime.mark(function _callee(error, newHead) {\n              var receipt;\n              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.prev = 0;\n                      if (!observer.closed) {\n                        _context.next = 5;\n                        break;\n                      }\n                      _context.next = 4;\n                      return _this2.newHeadsSubscription.unsubscribe();\n                    case 4:\n                      return _context.abrupt(\"return\");\n                    case 5:\n                      if (!error) {\n                        _context.next = 7;\n                        break;\n                      }\n                      throw error;\n                    case 7:\n                      _this2.getTransactionReceiptMethod.parameters = [transactionHash];\n                      _context.next = 10;\n                      return _this2.getTransactionReceiptMethod.execute();\n                    case 10:\n                      receipt = _context.sent;\n                      if (_this2.blockNumbers.includes(newHead.number)) {\n                        _context.next = 25;\n                        break;\n                      }\n                      if (!receipt) {\n                        _context.next = 19;\n                        break;\n                      }\n                      _this2.confirmations++;\n                      _this2.emitNext(receipt, observer);\n                      if (!_this2.isConfirmed()) {\n                        _context.next = 19;\n                        break;\n                      }\n                      _context.next = 18;\n                      return _this2.newHeadsSubscription.unsubscribe();\n                    case 18:\n                      observer.complete();\n                    case 19:\n                      _this2.blockNumbers.push(newHead.number);\n                      _this2.confirmationChecks++;\n                      if (!_this2.isTimeoutTimeExceeded()) {\n                        _context.next = 25;\n                        break;\n                      }\n                      _context.next = 24;\n                      return _this2.newHeadsSubscription.unsubscribe();\n                    case 24:\n                      _this2.emitError(new Error('Timeout exceeded during the transaction confirmation process. Be aware the transaction could still get confirmed!'), receipt, observer);\n                    case 25:\n                      _context.next = 30;\n                      break;\n                    case 27:\n                      _context.prev = 27;\n                      _context.t0 = _context[\"catch\"](0);\n                      _this2.emitError(_context.t0, false, observer);\n                    case 30:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee, null, [[0, 27]]);\n            }));\n            return function (_x, _x2) {\n              return _ref.apply(this, arguments);\n            };\n          }());\n        }\n      }, {\n        key: \"startHttpObserver\",\n        value: function startHttpObserver(transactionHash, observer) {\n          var _this3 = this;\n          var interval = setInterval(\n          _asyncToGenerator(\n          _regeneratorRuntime.mark(function _callee2() {\n            var receipt, block;\n            return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _context2.prev = 0;\n                    if (!observer.closed) {\n                      _context2.next = 4;\n                      break;\n                    }\n                    clearInterval(interval);\n                    return _context2.abrupt(\"return\");\n                  case 4:\n                    _this3.getTransactionReceiptMethod.parameters = [transactionHash];\n                    _context2.next = 7;\n                    return _this3.getTransactionReceiptMethod.execute();\n                  case 7:\n                    receipt = _context2.sent;\n                    if (!receipt) {\n                      _context2.next = 22;\n                      break;\n                    }\n                    if (!_this3.lastBlock) {\n                      _context2.next = 16;\n                      break;\n                    }\n                    _context2.next = 12;\n                    return _this3.getBlockByNumber(_this3.increaseBlockNumber(_this3.lastBlock.number));\n                  case 12:\n                    block = _context2.sent;\n                    if (block && _this3.isValidConfirmation(block)) {\n                      _this3.lastBlock = block;\n                      _this3.confirmations++;\n                      _this3.emitNext(receipt, observer);\n                    }\n                    _context2.next = 21;\n                    break;\n                  case 16:\n                    _context2.next = 18;\n                    return _this3.getBlockByNumber(receipt.blockNumber);\n                  case 18:\n                    _this3.lastBlock = _context2.sent;\n                    _this3.confirmations++;\n                    _this3.emitNext(receipt, observer);\n                  case 21:\n                    if (_this3.isConfirmed()) {\n                      clearInterval(interval);\n                      observer.complete();\n                    }\n                  case 22:\n                    _this3.confirmationChecks++;\n                    if (_this3.isTimeoutTimeExceeded()) {\n                      clearInterval(interval);\n                      _this3.emitError(new Error('Timeout exceeded during the transaction confirmation process. Be aware the transaction could still get confirmed!'), receipt, observer);\n                    }\n                    _context2.next = 30;\n                    break;\n                  case 26:\n                    _context2.prev = 26;\n                    _context2.t0 = _context2[\"catch\"](0);\n                    clearInterval(interval);\n                    _this3.emitError(_context2.t0, false, observer);\n                  case 30:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee2, null, [[0, 26]]);\n          })), 1000);\n        }\n      }, {\n        key: \"emitNext\",\n        value: function emitNext(receipt, observer) {\n          observer.next({\n            receipt: receipt,\n            confirmations: this.confirmations\n          });\n        }\n      }, {\n        key: \"emitError\",\n        value: function emitError(error, receipt, observer) {\n          observer.error({\n            error: error,\n            receipt: receipt,\n            confirmations: this.confirmations,\n            confirmationChecks: this.confirmationChecks\n          });\n        }\n      }, {\n        key: \"getBlockByNumber\",\n        value: function getBlockByNumber(blockHash) {\n          this.getBlockByNumberMethod.parameters = [blockHash];\n          return this.getBlockByNumberMethod.execute();\n        }\n      }, {\n        key: \"isConfirmed\",\n        value: function isConfirmed() {\n          return this.confirmations === this.blockConfirmations;\n        }\n      }, {\n        key: \"isValidConfirmation\",\n        value: function isValidConfirmation(block) {\n          return this.lastBlock.hash === block.parentHash && this.lastBlock.number !== block.number;\n        }\n      }, {\n        key: \"isTimeoutTimeExceeded\",\n        value: function isTimeoutTimeExceeded() {\n          return this.confirmationChecks === this.timeout;\n        }\n      }, {\n        key: \"isSocketBasedProvider\",\n        value: function isSocketBasedProvider() {\n          switch (this.provider.constructor.name) {\n            case 'CustomProvider':\n            case 'HttpProvider':\n              return false;\n            default:\n              return true;\n          }\n        }\n      }, {\n        key: \"increaseBlockNumber\",\n        value: function increaseBlockNumber(blockNumber) {\n          return '0x' + (parseInt(blockNumber, 16) + 1).toString(16);\n        }\n      }]);\n      return TransactionObserver;\n    }();\n\n    var GetTransactionCountMethod =\n    function (_AbstractMethod) {\n      _inherits(GetTransactionCountMethod, _AbstractMethod);\n      function GetTransactionCountMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetTransactionCountMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetTransactionCountMethod).call(this, 'eth_getTransactionCount', 2, utils, formatters, moduleInstance));\n      }\n      _createClass(GetTransactionCountMethod, [{\n        key: \"beforeExecution\",\n        value: function beforeExecution(moduleInstance) {\n          this.parameters[0] = this.formatters.inputAddressFormatter(this.parameters[0]);\n          if (isFunction(this.parameters[1])) {\n            this.callback = this.parameters[1];\n            this.parameters[1] = moduleInstance.defaultBlock;\n          }\n          this.parameters[1] = this.formatters.inputDefaultBlockNumberFormatter(this.parameters[1], moduleInstance);\n        }\n      }, {\n        key: \"afterExecution\",\n        value: function afterExecution(response) {\n          return this.utils.hexToNumber(response);\n        }\n      }]);\n      return GetTransactionCountMethod;\n    }(AbstractMethod);\n\n    var AbstractObservedTransactionMethod =\n    function (_AbstractMethod) {\n      _inherits(AbstractObservedTransactionMethod, _AbstractMethod);\n      function AbstractObservedTransactionMethod(rpcMethod, parametersAmount, utils, formatters, moduleInstance, transactionObserver) {\n        var _this;\n        _classCallCheck(this, AbstractObservedTransactionMethod);\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(AbstractObservedTransactionMethod).call(this, rpcMethod, parametersAmount, utils, formatters, moduleInstance));\n        _this.transactionObserver = transactionObserver;\n        _this.promiEvent = new PromiEvent();\n        return _this;\n      }\n      _createClass(AbstractObservedTransactionMethod, [{\n        key: \"execute\",\n        value: function execute() {\n          var _this2 = this;\n          this.beforeExecution(this.moduleInstance);\n          this.moduleInstance.currentProvider.send(this.rpcMethod, this.parameters).then(function (transactionHash) {\n            var confirmations, receipt;\n            if (_this2.callback) {\n              _this2.callback(false, transactionHash);\n              return;\n            }\n            _this2.promiEvent.emit('transactionHash', transactionHash);\n            var transactionConfirmationSubscription = _this2.transactionObserver.observe(transactionHash).subscribe(function (transactionConfirmation) {\n              confirmations = transactionConfirmation.confirmations;\n              receipt = transactionConfirmation.receipt;\n              if (!receipt.status) {\n                if (_this2.parameters[0].gas === receipt.gasUsed) {\n                  _this2.handleError(new Error(\"Transaction ran out of gas. Please provide more gas:\\n\".concat(JSON.stringify(receipt, null, 2))), receipt, confirmations);\n                  transactionConfirmationSubscription.unsubscribe();\n                  return;\n                }\n                _this2.handleError(new Error(\"Transaction has been reverted by the EVM:\\n\".concat(JSON.stringify(receipt, null, 2))), receipt, confirmations);\n                transactionConfirmationSubscription.unsubscribe();\n                return;\n              }\n              _this2.promiEvent.emit('confirmation', confirmations, _this2.afterExecution(receipt));\n            }, function (error) {\n              _this2.handleError(error, receipt, confirmations);\n            }, function () {\n              if (_this2.promiEvent.listenerCount('receipt') > 0) {\n                _this2.promiEvent.emit('receipt', _this2.afterExecution(receipt));\n                _this2.promiEvent.removeAllListeners();\n                return;\n              }\n              _this2.promiEvent.resolve(_this2.afterExecution(receipt));\n            });\n          }).catch(function (error) {\n            if (_this2.callback) {\n              _this2.callback(error, null);\n              return;\n            }\n            _this2.handleError(error, false, 0);\n          });\n          return this.promiEvent;\n        }\n      }, {\n        key: \"handleError\",\n        value: function handleError(error, receipt, confirmations) {\n          if (this.promiEvent.listenerCount('error') > 0) {\n            this.promiEvent.emit('error', error, receipt, confirmations);\n            this.promiEvent.removeAllListeners();\n            return;\n          }\n          this.promiEvent.reject(error);\n        }\n      }], [{\n        key: \"Type\",\n        get: function get() {\n          return 'observed-transaction-method';\n        }\n      }]);\n      return AbstractObservedTransactionMethod;\n    }(AbstractMethod);\n\n    var SendRawTransactionMethod =\n    function (_AbstractObservedTran) {\n      _inherits(SendRawTransactionMethod, _AbstractObservedTran);\n      function SendRawTransactionMethod(utils, formatters, moduleInstance, transactionObserver) {\n        _classCallCheck(this, SendRawTransactionMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(SendRawTransactionMethod).call(this, 'eth_sendRawTransaction', 1, utils, formatters, moduleInstance, transactionObserver));\n      }\n      return SendRawTransactionMethod;\n    }(AbstractObservedTransactionMethod);\n\n    var ChainIdMethod =\n    function (_AbstractMethod) {\n      _inherits(ChainIdMethod, _AbstractMethod);\n      function ChainIdMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, ChainIdMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(ChainIdMethod).call(this, 'eth_chainId', 0, utils, formatters, moduleInstance));\n      }\n      _createClass(ChainIdMethod, [{\n        key: \"afterExecution\",\n        value: function afterExecution(response) {\n          return this.utils.hexToNumber(response);\n        }\n      }]);\n      return ChainIdMethod;\n    }(AbstractMethod);\n\n    var AbstractMethodFactory =\n    function () {\n      function AbstractMethodFactory(utils, formatters) {\n        _classCallCheck(this, AbstractMethodFactory);\n        this.utils = utils;\n        this.formatters = formatters;\n        this._methods = null;\n      }\n      _createClass(AbstractMethodFactory, [{\n        key: \"hasMethod\",\n        value: function hasMethod(name) {\n          return typeof this.methods[name] !== 'undefined';\n        }\n      }, {\n        key: \"createMethod\",\n        value: function createMethod(name, moduleInstance) {\n          var method = this.methods[name];\n          if (method.Type === 'observed-transaction-method') {\n            return new method(this.utils, this.formatters, moduleInstance, this.createTransactionObserver(moduleInstance));\n          }\n          if (method.Type === 'eth-send-transaction-method') {\n            var transactionObserver = this.createTransactionObserver(moduleInstance);\n            return new method(this.utils, this.formatters, moduleInstance, transactionObserver, new ChainIdMethod(this.utils, this.formatters, moduleInstance), new GetTransactionCountMethod(this.utils, this.formatters, moduleInstance), new SendRawTransactionMethod(this.utils, this.formatters, moduleInstance, transactionObserver));\n          }\n          return new method(this.utils, this.formatters, moduleInstance);\n        }\n      }, {\n        key: \"getTimeout\",\n        value: function getTimeout(moduleInstance) {\n          var timeout = moduleInstance.transactionBlockTimeout;\n          if (!moduleInstance.currentProvider.SOCKET_MESSAGE) {\n            timeout = moduleInstance.transactionPollingTimeout;\n          }\n          return timeout;\n        }\n      }, {\n        key: \"createTransactionObserver\",\n        value: function createTransactionObserver(moduleInstance) {\n          return new TransactionObserver(moduleInstance.currentProvider, this.getTimeout(moduleInstance), moduleInstance.transactionConfirmationBlocks, new GetTransactionReceiptMethod(this.utils, this.formatters, moduleInstance), new GetBlockByNumberMethod(this.utils, this.formatters, moduleInstance), new web3CoreSubscriptions.NewHeadsSubscription(this.utils, this.formatters, moduleInstance));\n        }\n      }, {\n        key: \"methods\",\n        get: function get() {\n          if (this._methods) {\n            return this._methods;\n          }\n          throw new Error('No methods defined for MethodFactory!');\n        }\n        ,\n        set: function set(value) {\n          this._methods = value;\n        }\n      }]);\n      return AbstractMethodFactory;\n    }();\n\n    var MethodProxy =\n    function MethodProxy(target, methodFactory) {\n      _classCallCheck(this, MethodProxy);\n      return new Proxy(target, {\n        get: function get(target, name) {\n          if (methodFactory.hasMethod(name)) {\n            var anonymousFunction = function anonymousFunction() {\n              method.setArguments(arguments);\n              return method.execute();\n            };\n            if (typeof target[name] !== 'undefined') {\n              throw new TypeError(\"Duplicated method \".concat(name, \". This method is defined as RPC call and as Object method.\"));\n            }\n            var method = methodFactory.createMethod(name, target);\n            anonymousFunction.method = method;\n            anonymousFunction.request = function () {\n              method.setArguments(arguments);\n              return method;\n            };\n            return anonymousFunction;\n          }\n          return target[name];\n        }\n      });\n    };\n\n    var GetProtocolVersionMethod =\n    function (_AbstractMethod) {\n      _inherits(GetProtocolVersionMethod, _AbstractMethod);\n      function GetProtocolVersionMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetProtocolVersionMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetProtocolVersionMethod).call(this, 'eth_protocolVersion', 0, utils, formatters, moduleInstance));\n      }\n      return GetProtocolVersionMethod;\n    }(AbstractMethod);\n\n    var VersionMethod =\n    function (_AbstractMethod) {\n      _inherits(VersionMethod, _AbstractMethod);\n      function VersionMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, VersionMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(VersionMethod).call(this, 'net_version', 0, utils, formatters, moduleInstance));\n      }\n      _createClass(VersionMethod, [{\n        key: \"afterExecution\",\n        value: function afterExecution(response) {\n          return this.utils.hexToNumber(response);\n        }\n      }]);\n      return VersionMethod;\n    }(AbstractMethod);\n\n    var ListeningMethod =\n    function (_AbstractMethod) {\n      _inherits(ListeningMethod, _AbstractMethod);\n      function ListeningMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, ListeningMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(ListeningMethod).call(this, 'net_listening', 0, utils, formatters, moduleInstance));\n      }\n      return ListeningMethod;\n    }(AbstractMethod);\n\n    var PeerCountMethod =\n    function (_AbstractMethod) {\n      _inherits(PeerCountMethod, _AbstractMethod);\n      function PeerCountMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, PeerCountMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(PeerCountMethod).call(this, 'net_peerCount', 0, utils, formatters, moduleInstance));\n      }\n      _createClass(PeerCountMethod, [{\n        key: \"afterExecution\",\n        value: function afterExecution(response) {\n          return this.utils.hexToNumber(response);\n        }\n      }]);\n      return PeerCountMethod;\n    }(AbstractMethod);\n\n    var GetNodeInfoMethod =\n    function (_AbstractMethod) {\n      _inherits(GetNodeInfoMethod, _AbstractMethod);\n      function GetNodeInfoMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetNodeInfoMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetNodeInfoMethod).call(this, 'web3_clientVersion', 0, utils, formatters, moduleInstance));\n      }\n      return GetNodeInfoMethod;\n    }(AbstractMethod);\n\n    var GetCoinbaseMethod =\n    function (_AbstractMethod) {\n      _inherits(GetCoinbaseMethod, _AbstractMethod);\n      function GetCoinbaseMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetCoinbaseMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetCoinbaseMethod).call(this, 'eth_coinbase', 0, utils, formatters, moduleInstance));\n      }\n      return GetCoinbaseMethod;\n    }(AbstractMethod);\n\n    var IsMiningMethod =\n    function (_AbstractMethod) {\n      _inherits(IsMiningMethod, _AbstractMethod);\n      function IsMiningMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, IsMiningMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(IsMiningMethod).call(this, 'eth_mining', 0, utils, formatters, moduleInstance));\n      }\n      return IsMiningMethod;\n    }(AbstractMethod);\n\n    var GetHashrateMethod =\n    function (_AbstractMethod) {\n      _inherits(GetHashrateMethod, _AbstractMethod);\n      function GetHashrateMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetHashrateMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetHashrateMethod).call(this, 'eth_hashrate', 0, utils, formatters, moduleInstance));\n      }\n      _createClass(GetHashrateMethod, [{\n        key: \"afterExecution\",\n        value: function afterExecution(response) {\n          return this.utils.hexToNumber(response);\n        }\n      }]);\n      return GetHashrateMethod;\n    }(AbstractMethod);\n\n    var IsSyncingMethod =\n    function (_AbstractMethod) {\n      _inherits(IsSyncingMethod, _AbstractMethod);\n      function IsSyncingMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, IsSyncingMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(IsSyncingMethod).call(this, 'eth_syncing', 0, utils, formatters, moduleInstance));\n      }\n      _createClass(IsSyncingMethod, [{\n        key: \"afterExecution\",\n        value: function afterExecution(response) {\n          if (typeof response !== 'boolean') {\n            return this.formatters.outputSyncingFormatter(response);\n          }\n          return response;\n        }\n      }]);\n      return IsSyncingMethod;\n    }(AbstractMethod);\n\n    var GetGasPriceMethod =\n    function (_AbstractMethod) {\n      _inherits(GetGasPriceMethod, _AbstractMethod);\n      function GetGasPriceMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetGasPriceMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetGasPriceMethod).call(this, 'eth_gasPrice', 0, utils, formatters, moduleInstance));\n      }\n      _createClass(GetGasPriceMethod, [{\n        key: \"afterExecution\",\n        value: function afterExecution(response) {\n          return this.formatters.outputBigNumberFormatter(response);\n        }\n      }]);\n      return GetGasPriceMethod;\n    }(AbstractMethod);\n\n    var SubmitWorkMethod =\n    function (_AbstractMethod) {\n      _inherits(SubmitWorkMethod, _AbstractMethod);\n      function SubmitWorkMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, SubmitWorkMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(SubmitWorkMethod).call(this, 'eth_submitWork', 3, utils, formatters, moduleInstance));\n      }\n      return SubmitWorkMethod;\n    }(AbstractMethod);\n\n    var GetWorkMethod =\n    function (_AbstractMethod) {\n      _inherits(GetWorkMethod, _AbstractMethod);\n      function GetWorkMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetWorkMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetWorkMethod).call(this, 'eth_getWork', 0, utils, formatters, moduleInstance));\n      }\n      return GetWorkMethod;\n    }(AbstractMethod);\n\n    var GetAccountsMethod =\n    function (_AbstractMethod) {\n      _inherits(GetAccountsMethod, _AbstractMethod);\n      function GetAccountsMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetAccountsMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetAccountsMethod).call(this, 'eth_accounts', 0, utils, formatters, moduleInstance));\n      }\n      _createClass(GetAccountsMethod, [{\n        key: \"afterExecution\",\n        value: function afterExecution(response) {\n          var _this = this;\n          return response.map(function (responseItem) {\n            return _this.utils.toChecksumAddress(responseItem);\n          });\n        }\n      }]);\n      return GetAccountsMethod;\n    }(AbstractMethod);\n\n    var GetBalanceMethod =\n    function (_AbstractMethod) {\n      _inherits(GetBalanceMethod, _AbstractMethod);\n      function GetBalanceMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetBalanceMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetBalanceMethod).call(this, 'eth_getBalance', 2, utils, formatters, moduleInstance));\n      }\n      _createClass(GetBalanceMethod, [{\n        key: \"beforeExecution\",\n        value: function beforeExecution(moduleInstance) {\n          this.parameters[0] = this.formatters.inputAddressFormatter(this.parameters[0]);\n          if (isFunction(this.parameters[1])) {\n            this.callback = this.parameters[1];\n            this.parameters[1] = moduleInstance.defaultBlock;\n          }\n          this.parameters[1] = this.formatters.inputDefaultBlockNumberFormatter(this.parameters[1], moduleInstance);\n        }\n      }, {\n        key: \"afterExecution\",\n        value: function afterExecution(response) {\n          return this.formatters.outputBigNumberFormatter(response);\n        }\n      }]);\n      return GetBalanceMethod;\n    }(AbstractMethod);\n\n    var RequestAccountsMethod =\n    function (_AbstractMethod) {\n      _inherits(RequestAccountsMethod, _AbstractMethod);\n      function RequestAccountsMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, RequestAccountsMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(RequestAccountsMethod).call(this, 'eth_requestAccounts', 0, utils, formatters, moduleInstance));\n      }\n      return RequestAccountsMethod;\n    }(AbstractMethod);\n\n    var AbstractGetUncleMethod =\n    function (_AbstractMethod) {\n      _inherits(AbstractGetUncleMethod, _AbstractMethod);\n      function AbstractGetUncleMethod(rpcMethod, utils, formatters, moduleInstance) {\n        _classCallCheck(this, AbstractGetUncleMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(AbstractGetUncleMethod).call(this, rpcMethod, 2, utils, formatters, moduleInstance));\n      }\n      _createClass(AbstractGetUncleMethod, [{\n        key: \"beforeExecution\",\n        value: function beforeExecution(moduleInstance) {\n          this.parameters[0] = this.formatters.inputBlockNumberFormatter(this.parameters[0]);\n          this.parameters[1] = this.utils.numberToHex(this.parameters[1]);\n        }\n      }, {\n        key: \"afterExecution\",\n        value: function afterExecution(response) {\n          return this.formatters.outputBlockFormatter(response);\n        }\n      }]);\n      return AbstractGetUncleMethod;\n    }(AbstractMethod);\n\n    var AbstractGetBlockTransactionCountMethod =\n    function (_AbstractMethod) {\n      _inherits(AbstractGetBlockTransactionCountMethod, _AbstractMethod);\n      function AbstractGetBlockTransactionCountMethod(rpcMethod, utils, formatters, moduleInstance) {\n        _classCallCheck(this, AbstractGetBlockTransactionCountMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(AbstractGetBlockTransactionCountMethod).call(this, rpcMethod, 1, utils, formatters, moduleInstance));\n      }\n      _createClass(AbstractGetBlockTransactionCountMethod, [{\n        key: \"beforeExecution\",\n        value: function beforeExecution(moduleInstance) {\n          this.parameters[0] = this.formatters.inputBlockNumberFormatter(this.parameters[0]);\n        }\n      }, {\n        key: \"afterExecution\",\n        value: function afterExecution(response) {\n          return this.utils.hexToNumber(response);\n        }\n      }]);\n      return AbstractGetBlockTransactionCountMethod;\n    }(AbstractMethod);\n\n    var AbstractGetBlockUncleCountMethod =\n    function (_AbstractMethod) {\n      _inherits(AbstractGetBlockUncleCountMethod, _AbstractMethod);\n      function AbstractGetBlockUncleCountMethod(rpcMethod, utils, formatters, moduleInstance) {\n        _classCallCheck(this, AbstractGetBlockUncleCountMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(AbstractGetBlockUncleCountMethod).call(this, rpcMethod, 1, utils, formatters, moduleInstance));\n      }\n      _createClass(AbstractGetBlockUncleCountMethod, [{\n        key: \"beforeExecution\",\n        value: function beforeExecution(moduleInstance) {\n          this.parameters[0] = this.formatters.inputBlockNumberFormatter(this.parameters[0]);\n        }\n      }, {\n        key: \"afterExecution\",\n        value: function afterExecution(response) {\n          return this.utils.hexToNumber(response);\n        }\n      }]);\n      return AbstractGetBlockUncleCountMethod;\n    }(AbstractMethod);\n\n    var GetBlockByHashMethod =\n    function (_AbstractGetBlockMeth) {\n      _inherits(GetBlockByHashMethod, _AbstractGetBlockMeth);\n      function GetBlockByHashMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetBlockByHashMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetBlockByHashMethod).call(this, 'eth_getBlockByHash', utils, formatters, moduleInstance));\n      }\n      return GetBlockByHashMethod;\n    }(AbstractGetBlockMethod);\n\n    var GetBlockNumberMethod =\n    function (_AbstractMethod) {\n      _inherits(GetBlockNumberMethod, _AbstractMethod);\n      function GetBlockNumberMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetBlockNumberMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetBlockNumberMethod).call(this, 'eth_blockNumber', 0, utils, formatters, moduleInstance));\n      }\n      _createClass(GetBlockNumberMethod, [{\n        key: \"afterExecution\",\n        value: function afterExecution(response) {\n          return this.utils.hexToNumber(response);\n        }\n      }]);\n      return GetBlockNumberMethod;\n    }(AbstractMethod);\n\n    var GetBlockTransactionCountByHashMethod =\n    function (_AbstractGetBlockTran) {\n      _inherits(GetBlockTransactionCountByHashMethod, _AbstractGetBlockTran);\n      function GetBlockTransactionCountByHashMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetBlockTransactionCountByHashMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetBlockTransactionCountByHashMethod).call(this, 'eth_getBlockTransactionCountByHash', utils, formatters, moduleInstance));\n      }\n      return GetBlockTransactionCountByHashMethod;\n    }(AbstractGetBlockTransactionCountMethod);\n\n    var GetBlockTransactionCountByNumberMethod =\n    function (_AbstractGetBlockTran) {\n      _inherits(GetBlockTransactionCountByNumberMethod, _AbstractGetBlockTran);\n      function GetBlockTransactionCountByNumberMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetBlockTransactionCountByNumberMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetBlockTransactionCountByNumberMethod).call(this, 'eth_getBlockTransactionCountByNumber', utils, formatters, moduleInstance));\n      }\n      return GetBlockTransactionCountByNumberMethod;\n    }(AbstractGetBlockTransactionCountMethod);\n\n    var GetBlockUncleCountByBlockHashMethod =\n    function (_AbstractGetBlockUncl) {\n      _inherits(GetBlockUncleCountByBlockHashMethod, _AbstractGetBlockUncl);\n      function GetBlockUncleCountByBlockHashMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetBlockUncleCountByBlockHashMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetBlockUncleCountByBlockHashMethod).call(this, 'eth_getUncleCountByBlockHash', utils, formatters, moduleInstance));\n      }\n      return GetBlockUncleCountByBlockHashMethod;\n    }(AbstractGetBlockUncleCountMethod);\n\n    var GetBlockUncleCountByBlockNumberMethod =\n    function (_AbstractGetBlockUncl) {\n      _inherits(GetBlockUncleCountByBlockNumberMethod, _AbstractGetBlockUncl);\n      function GetBlockUncleCountByBlockNumberMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetBlockUncleCountByBlockNumberMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetBlockUncleCountByBlockNumberMethod).call(this, 'eth_getUncleCountByBlockNumber', utils, formatters, moduleInstance));\n      }\n      return GetBlockUncleCountByBlockNumberMethod;\n    }(AbstractGetBlockUncleCountMethod);\n\n    var GetUncleByBlockHashAndIndexMethod =\n    function (_AbstractGetUncleMeth) {\n      _inherits(GetUncleByBlockHashAndIndexMethod, _AbstractGetUncleMeth);\n      function GetUncleByBlockHashAndIndexMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetUncleByBlockHashAndIndexMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetUncleByBlockHashAndIndexMethod).call(this, 'eth_getUncleByBlockHashAndIndex', utils, formatters, moduleInstance));\n      }\n      return GetUncleByBlockHashAndIndexMethod;\n    }(AbstractGetUncleMethod);\n\n    var GetUncleByBlockNumberAndIndexMethod =\n    function (_AbstractGetUncleMeth) {\n      _inherits(GetUncleByBlockNumberAndIndexMethod, _AbstractGetUncleMeth);\n      function GetUncleByBlockNumberAndIndexMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetUncleByBlockNumberAndIndexMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetUncleByBlockNumberAndIndexMethod).call(this, 'eth_getUncleByBlockNumberAndIndex', utils, formatters, moduleInstance));\n      }\n      return GetUncleByBlockNumberAndIndexMethod;\n    }(AbstractGetUncleMethod);\n\n    var AbstractGetTransactionFromBlockMethod =\n    function (_AbstractMethod) {\n      _inherits(AbstractGetTransactionFromBlockMethod, _AbstractMethod);\n      function AbstractGetTransactionFromBlockMethod(rpcMethod, utils, formatters, moduleInstance) {\n        _classCallCheck(this, AbstractGetTransactionFromBlockMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(AbstractGetTransactionFromBlockMethod).call(this, rpcMethod, 2, utils, formatters, moduleInstance));\n      }\n      _createClass(AbstractGetTransactionFromBlockMethod, [{\n        key: \"beforeExecution\",\n        value: function beforeExecution(moduleInstance) {\n          this.parameters[0] = this.formatters.inputBlockNumberFormatter(this.parameters[0]);\n          this.parameters[1] = this.utils.numberToHex(this.parameters[1]);\n        }\n      }, {\n        key: \"afterExecution\",\n        value: function afterExecution(response) {\n          return this.formatters.outputTransactionFormatter(response);\n        }\n      }]);\n      return AbstractGetTransactionFromBlockMethod;\n    }(AbstractMethod);\n\n    var SendTransactionMethod =\n    function (_AbstractObservedTran) {\n      _inherits(SendTransactionMethod, _AbstractObservedTran);\n      function SendTransactionMethod(utils, formatters, moduleInstance, transactionObserver) {\n        _classCallCheck(this, SendTransactionMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(SendTransactionMethod).call(this, 'eth_sendTransaction', 1, utils, formatters, moduleInstance, transactionObserver));\n      }\n      _createClass(SendTransactionMethod, [{\n        key: \"beforeExecution\",\n        value: function beforeExecution(moduleInstance) {\n          this.parameters[0] = this.formatters.inputTransactionFormatter(this.parameters[0], moduleInstance);\n        }\n      }]);\n      return SendTransactionMethod;\n    }(AbstractObservedTransactionMethod);\n\n    var EthSendTransactionMethod =\n    function (_SendTransactionMetho) {\n      _inherits(EthSendTransactionMethod, _SendTransactionMetho);\n      function EthSendTransactionMethod(utils, formatters, moduleInstance, transactionObserver, chainIdMethod, getTransactionCountMethod, sendRawTransactionMethod) {\n        var _this;\n        _classCallCheck(this, EthSendTransactionMethod);\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(EthSendTransactionMethod).call(this, utils, formatters, moduleInstance, transactionObserver));\n        _this.chainIdMethod = chainIdMethod;\n        _this.getTransactionCountMethod = getTransactionCountMethod;\n        _this.sendRawTransactionMethod = sendRawTransactionMethod;\n        return _this;\n      }\n      _createClass(EthSendTransactionMethod, [{\n        key: \"execute\",\n        value: function execute() {\n          var _this2 = this;\n          if (!this.parameters[0].gas && this.moduleInstance.defaultGas) {\n            this.parameters[0]['gas'] = this.moduleInstance.defaultGas;\n          }\n          if (!this.parameters[0].gasPrice && this.parameters[0].gasPrice !== 0) {\n            if (!this.moduleInstance.defaultGasPrice) {\n              this.moduleInstance.currentProvider.send('eth_gasPrice', []).then(function (gasPrice) {\n                _this2.parameters[0].gasPrice = gasPrice;\n                _this2.execute();\n              }).catch(function (error) {\n                _this2.handleError(error, false, 0);\n              });\n              return this.promiEvent;\n            }\n            this.parameters[0]['gasPrice'] = this.moduleInstance.defaultGasPrice;\n          }\n          if (this.hasAccounts() && this.isDefaultSigner()) {\n            if (this.moduleInstance.accounts.wallet[this.parameters[0].from]) {\n              this.sendRawTransaction(this.moduleInstance.accounts.wallet[this.parameters[0].from].privateKey).catch(function (error) {\n                _this2.handleError(error, false, 0);\n              });\n              return this.promiEvent;\n            }\n          }\n          if (this.hasCustomSigner()) {\n            this.sendRawTransaction().catch(function (error) {\n              _this2.handleError(error, false, 0);\n            });\n            return this.promiEvent;\n          }\n          return _get(_getPrototypeOf(EthSendTransactionMethod.prototype), \"execute\", this).call(this);\n        }\n      }, {\n        key: \"sendRawTransaction\",\n        value: function () {\n          var _sendRawTransaction = _asyncToGenerator(\n          _regeneratorRuntime.mark(function _callee() {\n            var privateKey,\n                transaction,\n                response,\n                _args = arguments;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    privateKey = _args.length > 0 && _args[0] !== undefined ? _args[0] : null;\n                    if (this.parameters[0].chainId) {\n                      _context.next = 5;\n                      break;\n                    }\n                    _context.next = 4;\n                    return this.chainIdMethod.execute();\n                  case 4:\n                    this.parameters[0].chainId = _context.sent;\n                  case 5:\n                    if (!(!this.parameters[0].nonce && this.parameters[0].nonce !== 0)) {\n                      _context.next = 10;\n                      break;\n                    }\n                    this.getTransactionCountMethod.parameters = [this.parameters[0].from];\n                    _context.next = 9;\n                    return this.getTransactionCountMethod.execute();\n                  case 9:\n                    this.parameters[0].nonce = _context.sent;\n                  case 10:\n                    transaction = this.formatters.inputCallFormatter(this.parameters[0], this.moduleInstance);\n                    transaction.to = transaction.to || '0x';\n                    transaction.data = transaction.data || '0x';\n                    transaction.value = transaction.value || '0x';\n                    transaction.chainId = this.utils.numberToHex(transaction.chainId);\n                    delete transaction.from;\n                    _context.next = 18;\n                    return this.moduleInstance.transactionSigner.sign(transaction, privateKey);\n                  case 18:\n                    response = _context.sent;\n                    this.sendRawTransactionMethod.parameters = [response.rawTransaction];\n                    this.sendRawTransactionMethod.callback = this.callback;\n                    this.sendRawTransactionMethod.promiEvent = this.promiEvent;\n                    return _context.abrupt(\"return\", this.sendRawTransactionMethod.execute());\n                  case 23:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, this);\n          }));\n          function sendRawTransaction() {\n            return _sendRawTransaction.apply(this, arguments);\n          }\n          return sendRawTransaction;\n        }()\n      }, {\n        key: \"isDefaultSigner\",\n        value: function isDefaultSigner() {\n          return this.moduleInstance.transactionSigner.constructor.name === 'TransactionSigner';\n        }\n      }, {\n        key: \"hasAccounts\",\n        value: function hasAccounts() {\n          return this.moduleInstance.accounts && this.moduleInstance.accounts.wallet.accountsIndex > 0;\n        }\n      }, {\n        key: \"hasCustomSigner\",\n        value: function hasCustomSigner() {\n          return this.moduleInstance.transactionSigner.constructor.name !== 'TransactionSigner';\n        }\n      }], [{\n        key: \"Type\",\n        get: function get() {\n          return 'eth-send-transaction-method';\n        }\n      }]);\n      return EthSendTransactionMethod;\n    }(SendTransactionMethod);\n\n    var GetTransactionMethod =\n    function (_AbstractMethod) {\n      _inherits(GetTransactionMethod, _AbstractMethod);\n      function GetTransactionMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetTransactionMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetTransactionMethod).call(this, 'eth_getTransactionByHash', 1, utils, formatters, moduleInstance));\n      }\n      _createClass(GetTransactionMethod, [{\n        key: \"afterExecution\",\n        value: function afterExecution(response) {\n          return this.formatters.outputTransactionFormatter(response);\n        }\n      }]);\n      return GetTransactionMethod;\n    }(AbstractMethod);\n\n    var GetTransactionByBlockHashAndIndexMethod =\n    function (_AbstractGetTransacti) {\n      _inherits(GetTransactionByBlockHashAndIndexMethod, _AbstractGetTransacti);\n      function GetTransactionByBlockHashAndIndexMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetTransactionByBlockHashAndIndexMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetTransactionByBlockHashAndIndexMethod).call(this, 'eth_getTransactionByBlockHashAndIndex', utils, formatters, moduleInstance));\n      }\n      return GetTransactionByBlockHashAndIndexMethod;\n    }(AbstractGetTransactionFromBlockMethod);\n\n    var GetTransactionByBlockNumberAndIndexMethod =\n    function (_AbstractGetTransacti) {\n      _inherits(GetTransactionByBlockNumberAndIndexMethod, _AbstractGetTransacti);\n      function GetTransactionByBlockNumberAndIndexMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetTransactionByBlockNumberAndIndexMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetTransactionByBlockNumberAndIndexMethod).call(this, 'eth_getTransactionByBlockNumberAndIndex', utils, formatters, moduleInstance));\n      }\n      return GetTransactionByBlockNumberAndIndexMethod;\n    }(AbstractGetTransactionFromBlockMethod);\n\n    var SignTransactionMethod =\n    function (_AbstractMethod) {\n      _inherits(SignTransactionMethod, _AbstractMethod);\n      function SignTransactionMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, SignTransactionMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(SignTransactionMethod).call(this, 'eth_signTransaction', 1, utils, formatters, moduleInstance));\n      }\n      _createClass(SignTransactionMethod, [{\n        key: \"beforeExecution\",\n        value: function beforeExecution(moduleInstance) {\n          this.parameters[0] = this.formatters.inputTransactionFormatter(this.parameters[0], moduleInstance);\n        }\n      }]);\n      return SignTransactionMethod;\n    }(AbstractMethod);\n\n    var GetCodeMethod =\n    function (_AbstractMethod) {\n      _inherits(GetCodeMethod, _AbstractMethod);\n      function GetCodeMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetCodeMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetCodeMethod).call(this, 'eth_getCode', 2, utils, formatters, moduleInstance));\n      }\n      _createClass(GetCodeMethod, [{\n        key: \"beforeExecution\",\n        value: function beforeExecution(moduleInstance) {\n          this.parameters[0] = this.formatters.inputAddressFormatter(this.parameters[0]);\n          if (isFunction(this.parameters[1])) {\n            this.callback = this.parameters[1];\n            this.parameters[1] = moduleInstance.defaultBlock;\n          }\n          this.parameters[1] = this.formatters.inputDefaultBlockNumberFormatter(this.parameters[1], moduleInstance);\n        }\n      }]);\n      return GetCodeMethod;\n    }(AbstractMethod);\n\n    var SignMethod =\n    function (_AbstractMethod) {\n      _inherits(SignMethod, _AbstractMethod);\n      function SignMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, SignMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(SignMethod).call(this, 'eth_sign', 2, utils, formatters, moduleInstance));\n      }\n      _createClass(SignMethod, [{\n        key: \"beforeExecution\",\n        value: function beforeExecution(moduleInstance) {\n          this.parameters[0] = this.formatters.inputSignFormatter(this.parameters[0]);\n          this.parameters[1] = this.formatters.inputAddressFormatter(this.parameters[1]);\n          this.parameters.reverse();\n        }\n      }]);\n      return SignMethod;\n    }(AbstractMethod);\n\n    var CallMethod =\n    function (_AbstractMethod) {\n      _inherits(CallMethod, _AbstractMethod);\n      function CallMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, CallMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(CallMethod).call(this, 'eth_call', 2, utils, formatters, moduleInstance));\n      }\n      _createClass(CallMethod, [{\n        key: \"beforeExecution\",\n        value: function beforeExecution(moduleInstance) {\n          this.parameters[0] = this.formatters.inputCallFormatter(this.parameters[0], moduleInstance);\n          if (isFunction(this.parameters[1])) {\n            this.callback = this.parameters[1];\n            this.parameters[1] = moduleInstance.defaultBlock;\n          }\n          this.parameters[1] = this.formatters.inputDefaultBlockNumberFormatter(this.parameters[1], moduleInstance);\n        }\n      }]);\n      return CallMethod;\n    }(AbstractMethod);\n\n    var GetStorageAtMethod =\n    function (_AbstractMethod) {\n      _inherits(GetStorageAtMethod, _AbstractMethod);\n      function GetStorageAtMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetStorageAtMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetStorageAtMethod).call(this, 'eth_getStorageAt', 3, utils, formatters, moduleInstance));\n      }\n      _createClass(GetStorageAtMethod, [{\n        key: \"beforeExecution\",\n        value: function beforeExecution(moduleInstance) {\n          this.parameters[0] = this.formatters.inputAddressFormatter(this.parameters[0]);\n          this.parameters[1] = this.utils.numberToHex(this.parameters[1]);\n          if (isFunction(this.parameters[2])) {\n            this.callback = this.parameters[2];\n            this.parameters[2] = moduleInstance.defaultBlock;\n          }\n          this.parameters[2] = this.formatters.inputDefaultBlockNumberFormatter(this.parameters[2], moduleInstance);\n        }\n      }]);\n      return GetStorageAtMethod;\n    }(AbstractMethod);\n\n    var EstimateGasMethod =\n    function (_AbstractMethod) {\n      _inherits(EstimateGasMethod, _AbstractMethod);\n      function EstimateGasMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, EstimateGasMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(EstimateGasMethod).call(this, 'eth_estimateGas', 1, utils, formatters, moduleInstance));\n      }\n      _createClass(EstimateGasMethod, [{\n        key: \"beforeExecution\",\n        value: function beforeExecution(moduleInstance) {\n          this.parameters[0] = this.formatters.inputCallFormatter(this.parameters[0], moduleInstance);\n        }\n      }, {\n        key: \"afterExecution\",\n        value: function afterExecution(response) {\n          return this.utils.hexToNumber(response);\n        }\n      }]);\n      return EstimateGasMethod;\n    }(AbstractMethod);\n\n    var GetPastLogsMethod =\n    function (_AbstractMethod) {\n      _inherits(GetPastLogsMethod, _AbstractMethod);\n      function GetPastLogsMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetPastLogsMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetPastLogsMethod).call(this, 'eth_getLogs', 1, utils, formatters, moduleInstance));\n      }\n      _createClass(GetPastLogsMethod, [{\n        key: \"beforeExecution\",\n        value: function beforeExecution(moduleInstance) {\n          this.parameters[0] = this.formatters.inputLogFormatter(this.parameters[0]);\n        }\n      }, {\n        key: \"afterExecution\",\n        value: function afterExecution(response) {\n          var _this = this;\n          return response.map(function (responseItem) {\n            return _this.formatters.outputLogFormatter(responseItem);\n          });\n        }\n      }]);\n      return GetPastLogsMethod;\n    }(AbstractMethod);\n\n    var EcRecoverMethod =\n    function (_AbstractMethod) {\n      _inherits(EcRecoverMethod, _AbstractMethod);\n      function EcRecoverMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, EcRecoverMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(EcRecoverMethod).call(this, 'personal_ecRecover', 2, utils, formatters, moduleInstance));\n      }\n      _createClass(EcRecoverMethod, [{\n        key: \"beforeExecution\",\n        value: function beforeExecution(moduleInstance) {\n          this.parameters[0] = this.formatters.inputSignFormatter(this.parameters[0]);\n        }\n      }]);\n      return EcRecoverMethod;\n    }(AbstractMethod);\n\n    var ImportRawKeyMethod =\n    function (_AbstractMethod) {\n      _inherits(ImportRawKeyMethod, _AbstractMethod);\n      function ImportRawKeyMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, ImportRawKeyMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(ImportRawKeyMethod).call(this, 'personal_importRawKey', 2, utils, formatters, moduleInstance));\n      }\n      return ImportRawKeyMethod;\n    }(AbstractMethod);\n\n    var ListAccountsMethod =\n    function (_AbstractMethod) {\n      _inherits(ListAccountsMethod, _AbstractMethod);\n      function ListAccountsMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, ListAccountsMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(ListAccountsMethod).call(this, 'personal_listAccounts', 0, utils, formatters, moduleInstance));\n      }\n      _createClass(ListAccountsMethod, [{\n        key: \"afterExecution\",\n        value: function afterExecution(response) {\n          var _this = this;\n          return response.map(function (responseItem) {\n            return _this.utils.toChecksumAddress(responseItem);\n          });\n        }\n      }]);\n      return ListAccountsMethod;\n    }(AbstractMethod);\n\n    var LockAccountMethod =\n    function (_AbstractMethod) {\n      _inherits(LockAccountMethod, _AbstractMethod);\n      function LockAccountMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, LockAccountMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(LockAccountMethod).call(this, 'personal_lockAccount', 1, utils, formatters, moduleInstance));\n      }\n      _createClass(LockAccountMethod, [{\n        key: \"beforeExecution\",\n        value: function beforeExecution(moduleInstance) {\n          this.parameters[0] = this.formatters.inputAddressFormatter(this.parameters[0]);\n        }\n      }]);\n      return LockAccountMethod;\n    }(AbstractMethod);\n\n    var NewAccountMethod =\n    function (_AbstractMethod) {\n      _inherits(NewAccountMethod, _AbstractMethod);\n      function NewAccountMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, NewAccountMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(NewAccountMethod).call(this, 'personal_newAccount', 1, utils, formatters, moduleInstance));\n      }\n      _createClass(NewAccountMethod, [{\n        key: \"afterExecution\",\n        value: function afterExecution(response) {\n          return this.utils.toChecksumAddress(response);\n        }\n      }]);\n      return NewAccountMethod;\n    }(AbstractMethod);\n\n    var PersonalSendTransactionMethod =\n    function (_AbstractMethod) {\n      _inherits(PersonalSendTransactionMethod, _AbstractMethod);\n      function PersonalSendTransactionMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, PersonalSendTransactionMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(PersonalSendTransactionMethod).call(this, 'personal_sendTransaction', 2, utils, formatters, moduleInstance));\n      }\n      _createClass(PersonalSendTransactionMethod, [{\n        key: \"beforeExecution\",\n        value: function beforeExecution(moduleInstance) {\n          this.parameters[0] = this.formatters.inputTransactionFormatter(this.parameters[0], moduleInstance);\n        }\n      }]);\n      return PersonalSendTransactionMethod;\n    }(AbstractMethod);\n\n    var PersonalSignMethod =\n    function (_AbstractMethod) {\n      _inherits(PersonalSignMethod, _AbstractMethod);\n      function PersonalSignMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, PersonalSignMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(PersonalSignMethod).call(this, 'personal_sign', 3, utils, formatters, moduleInstance));\n      }\n      _createClass(PersonalSignMethod, [{\n        key: \"beforeExecution\",\n        value: function beforeExecution(moduleInstance) {\n          this.parameters[0] = this.formatters.inputSignFormatter(this.parameters[0]);\n          this.parameters[1] = this.formatters.inputAddressFormatter(this.parameters[1]);\n          if (isFunction(this.parameters[2])) {\n            this.callback = this.parameters[2];\n            delete this.parameters[2];\n          }\n        }\n      }]);\n      return PersonalSignMethod;\n    }(AbstractMethod);\n\n    var PersonalSignTransactionMethod =\n    function (_AbstractMethod) {\n      _inherits(PersonalSignTransactionMethod, _AbstractMethod);\n      function PersonalSignTransactionMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, PersonalSignTransactionMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(PersonalSignTransactionMethod).call(this, 'personal_signTransaction', 2, utils, formatters, moduleInstance));\n      }\n      _createClass(PersonalSignTransactionMethod, [{\n        key: \"beforeExecution\",\n        value: function beforeExecution(moduleInstance) {\n          this.parameters[0] = this.formatters.inputTransactionFormatter(this.parameters[0], moduleInstance);\n        }\n      }]);\n      return PersonalSignTransactionMethod;\n    }(AbstractMethod);\n\n    var UnlockAccountMethod =\n    function (_AbstractMethod) {\n      _inherits(UnlockAccountMethod, _AbstractMethod);\n      function UnlockAccountMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, UnlockAccountMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(UnlockAccountMethod).call(this, 'personal_unlockAccount', 3, utils, formatters, moduleInstance));\n      }\n      _createClass(UnlockAccountMethod, [{\n        key: \"beforeExecution\",\n        value: function beforeExecution(moduleInstance) {\n          this.parameters[0] = this.formatters.inputAddressFormatter(this.parameters[0]);\n        }\n      }]);\n      return UnlockAccountMethod;\n    }(AbstractMethod);\n\n    var AddPrivateKeyMethod =\n    function (_AbstractMethod) {\n      _inherits(AddPrivateKeyMethod, _AbstractMethod);\n      function AddPrivateKeyMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, AddPrivateKeyMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(AddPrivateKeyMethod).call(this, 'shh_addPrivateKey', 1, utils, formatters, moduleInstance));\n      }\n      return AddPrivateKeyMethod;\n    }(AbstractMethod);\n\n    var AddSymKeyMethod =\n    function (_AbstractMethod) {\n      _inherits(AddSymKeyMethod, _AbstractMethod);\n      function AddSymKeyMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, AddSymKeyMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(AddSymKeyMethod).call(this, 'shh_addSymKey', 1, utils, formatters, moduleInstance));\n      }\n      return AddSymKeyMethod;\n    }(AbstractMethod);\n\n    var DeleteKeyPairMethod =\n    function (_AbstractMethod) {\n      _inherits(DeleteKeyPairMethod, _AbstractMethod);\n      function DeleteKeyPairMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, DeleteKeyPairMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(DeleteKeyPairMethod).call(this, 'shh_deleteKeyPair', 1, utils, formatters, moduleInstance));\n      }\n      return DeleteKeyPairMethod;\n    }(AbstractMethod);\n\n    var DeleteMessageFilterMethod =\n    function (_AbstractMethod) {\n      _inherits(DeleteMessageFilterMethod, _AbstractMethod);\n      function DeleteMessageFilterMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, DeleteMessageFilterMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(DeleteMessageFilterMethod).call(this, 'shh_deleteMessageFilter', 1, utils, formatters, moduleInstance));\n      }\n      return DeleteMessageFilterMethod;\n    }(AbstractMethod);\n\n    var DeleteSymKeyMethod =\n    function (_AbstractMethod) {\n      _inherits(DeleteSymKeyMethod, _AbstractMethod);\n      function DeleteSymKeyMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, DeleteSymKeyMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(DeleteSymKeyMethod).call(this, 'shh_deleteSymKey', 1, utils, formatters, moduleInstance));\n      }\n      return DeleteSymKeyMethod;\n    }(AbstractMethod);\n\n    var GenerateSymKeyFromPasswordMethod =\n    function (_AbstractMethod) {\n      _inherits(GenerateSymKeyFromPasswordMethod, _AbstractMethod);\n      function GenerateSymKeyFromPasswordMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GenerateSymKeyFromPasswordMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GenerateSymKeyFromPasswordMethod).call(this, 'shh_generateSymKeyFromPassword', 1, utils, formatters, moduleInstance));\n      }\n      return GenerateSymKeyFromPasswordMethod;\n    }(AbstractMethod);\n\n    var GetFilterMessagesMethod =\n    function (_AbstractMethod) {\n      _inherits(GetFilterMessagesMethod, _AbstractMethod);\n      function GetFilterMessagesMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetFilterMessagesMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetFilterMessagesMethod).call(this, 'shh_getFilterMessages', 1, utils, formatters, moduleInstance));\n      }\n      return GetFilterMessagesMethod;\n    }(AbstractMethod);\n\n    var GetInfoMethod =\n    function (_AbstractMethod) {\n      _inherits(GetInfoMethod, _AbstractMethod);\n      function GetInfoMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetInfoMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetInfoMethod).call(this, 'shh_info', 0, utils, formatters, moduleInstance));\n      }\n      return GetInfoMethod;\n    }(AbstractMethod);\n\n    var GetPrivateKeyMethod =\n    function (_AbstractMethod) {\n      _inherits(GetPrivateKeyMethod, _AbstractMethod);\n      function GetPrivateKeyMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetPrivateKeyMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetPrivateKeyMethod).call(this, 'shh_getPrivateKey', 1, utils, formatters, moduleInstance));\n      }\n      return GetPrivateKeyMethod;\n    }(AbstractMethod);\n\n    var GetPublicKeyMethod =\n    function (_AbstractMethod) {\n      _inherits(GetPublicKeyMethod, _AbstractMethod);\n      function GetPublicKeyMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetPublicKeyMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetPublicKeyMethod).call(this, 'shh_getPublicKey', 1, utils, formatters, moduleInstance));\n      }\n      return GetPublicKeyMethod;\n    }(AbstractMethod);\n\n    var GetSymKeyMethod =\n    function (_AbstractMethod) {\n      _inherits(GetSymKeyMethod, _AbstractMethod);\n      function GetSymKeyMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetSymKeyMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetSymKeyMethod).call(this, 'shh_getSymKey', 1, utils, formatters, moduleInstance));\n      }\n      return GetSymKeyMethod;\n    }(AbstractMethod);\n\n    var HasKeyPairMethod =\n    function (_AbstractMethod) {\n      _inherits(HasKeyPairMethod, _AbstractMethod);\n      function HasKeyPairMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, HasKeyPairMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(HasKeyPairMethod).call(this, 'shh_hasKeyPair', 1, utils, formatters, moduleInstance));\n      }\n      return HasKeyPairMethod;\n    }(AbstractMethod);\n\n    var HasSymKeyMethod =\n    function (_AbstractMethod) {\n      _inherits(HasSymKeyMethod, _AbstractMethod);\n      function HasSymKeyMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, HasSymKeyMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(HasSymKeyMethod).call(this, 'shh_hasSymKey', 1, utils, formatters, moduleInstance));\n      }\n      return HasSymKeyMethod;\n    }(AbstractMethod);\n\n    var MarkTrustedPeerMethod =\n    function (_AbstractMethod) {\n      _inherits(MarkTrustedPeerMethod, _AbstractMethod);\n      function MarkTrustedPeerMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, MarkTrustedPeerMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(MarkTrustedPeerMethod).call(this, 'shh_markTrustedPeer', 1, utils, formatters, moduleInstance));\n      }\n      return MarkTrustedPeerMethod;\n    }(AbstractMethod);\n\n    var NewKeyPairMethod =\n    function (_AbstractMethod) {\n      _inherits(NewKeyPairMethod, _AbstractMethod);\n      function NewKeyPairMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, NewKeyPairMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(NewKeyPairMethod).call(this, 'shh_newKeyPair', 0, utils, formatters, moduleInstance));\n      }\n      return NewKeyPairMethod;\n    }(AbstractMethod);\n\n    var NewMessageFilterMethod =\n    function (_AbstractMethod) {\n      _inherits(NewMessageFilterMethod, _AbstractMethod);\n      function NewMessageFilterMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, NewMessageFilterMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(NewMessageFilterMethod).call(this, 'shh_newMessageFilter', 1, utils, formatters, moduleInstance));\n      }\n      return NewMessageFilterMethod;\n    }(AbstractMethod);\n\n    var NewSymKeyMethod =\n    function (_AbstractMethod) {\n      _inherits(NewSymKeyMethod, _AbstractMethod);\n      function NewSymKeyMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, NewSymKeyMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(NewSymKeyMethod).call(this, 'shh_newSymKey', 0, utils, formatters, moduleInstance));\n      }\n      return NewSymKeyMethod;\n    }(AbstractMethod);\n\n    var PostMethod =\n    function (_AbstractMethod) {\n      _inherits(PostMethod, _AbstractMethod);\n      function PostMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, PostMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(PostMethod).call(this, 'shh_post', 1, utils, formatters, moduleInstance));\n      }\n      return PostMethod;\n    }(AbstractMethod);\n\n    var SetMaxMessageSizeMethod =\n    function (_AbstractMethod) {\n      _inherits(SetMaxMessageSizeMethod, _AbstractMethod);\n      function SetMaxMessageSizeMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, SetMaxMessageSizeMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(SetMaxMessageSizeMethod).call(this, 'shh_setMaxMessageSize', 1, utils, formatters, moduleInstance));\n      }\n      return SetMaxMessageSizeMethod;\n    }(AbstractMethod);\n\n    var SetMinPoWMethod =\n    function (_AbstractMethod) {\n      _inherits(SetMinPoWMethod, _AbstractMethod);\n      function SetMinPoWMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, SetMinPoWMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(SetMinPoWMethod).call(this, 'shh_setMinPoW', 1, utils, formatters, moduleInstance));\n      }\n      return SetMinPoWMethod;\n    }(AbstractMethod);\n\n    var ShhVersionMethod =\n    function (_AbstractMethod) {\n      _inherits(ShhVersionMethod, _AbstractMethod);\n      function ShhVersionMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, ShhVersionMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(ShhVersionMethod).call(this, 'shh_version', 0, utils, formatters, moduleInstance));\n      }\n      return ShhVersionMethod;\n    }(AbstractMethod);\n\n    exports.PromiEvent = PromiEvent;\n    exports.AbstractMethodFactory = AbstractMethodFactory;\n    exports.AbstractMethod = AbstractMethod;\n    exports.MethodProxy = MethodProxy;\n    exports.TransactionObserver = TransactionObserver;\n    exports.GetProtocolVersionMethod = GetProtocolVersionMethod;\n    exports.VersionMethod = VersionMethod;\n    exports.ListeningMethod = ListeningMethod;\n    exports.PeerCountMethod = PeerCountMethod;\n    exports.ChainIdMethod = ChainIdMethod;\n    exports.GetNodeInfoMethod = GetNodeInfoMethod;\n    exports.GetCoinbaseMethod = GetCoinbaseMethod;\n    exports.IsMiningMethod = IsMiningMethod;\n    exports.GetHashrateMethod = GetHashrateMethod;\n    exports.IsSyncingMethod = IsSyncingMethod;\n    exports.GetGasPriceMethod = GetGasPriceMethod;\n    exports.SubmitWorkMethod = SubmitWorkMethod;\n    exports.GetWorkMethod = GetWorkMethod;\n    exports.GetAccountsMethod = GetAccountsMethod;\n    exports.GetBalanceMethod = GetBalanceMethod;\n    exports.GetTransactionCountMethod = GetTransactionCountMethod;\n    exports.RequestAccountsMethod = RequestAccountsMethod;\n    exports.AbstractGetBlockMethod = AbstractGetBlockMethod;\n    exports.AbstractGetUncleMethod = AbstractGetUncleMethod;\n    exports.AbstractGetBlockTransactionCountMethod = AbstractGetBlockTransactionCountMethod;\n    exports.AbstractGetBlockUncleCountMethod = AbstractGetBlockUncleCountMethod;\n    exports.GetBlockByHashMethod = GetBlockByHashMethod;\n    exports.GetBlockByNumberMethod = GetBlockByNumberMethod;\n    exports.GetBlockNumberMethod = GetBlockNumberMethod;\n    exports.GetBlockTransactionCountByHashMethod = GetBlockTransactionCountByHashMethod;\n    exports.GetBlockTransactionCountByNumberMethod = GetBlockTransactionCountByNumberMethod;\n    exports.GetBlockUncleCountByBlockHashMethod = GetBlockUncleCountByBlockHashMethod;\n    exports.GetBlockUncleCountByBlockNumberMethod = GetBlockUncleCountByBlockNumberMethod;\n    exports.GetUncleByBlockHashAndIndexMethod = GetUncleByBlockHashAndIndexMethod;\n    exports.GetUncleByBlockNumberAndIndexMethod = GetUncleByBlockNumberAndIndexMethod;\n    exports.AbstractGetTransactionFromBlockMethod = AbstractGetTransactionFromBlockMethod;\n    exports.AbstractObservedTransactionMethod = AbstractObservedTransactionMethod;\n    exports.EthSendTransactionMethod = EthSendTransactionMethod;\n    exports.GetTransactionMethod = GetTransactionMethod;\n    exports.GetTransactionByBlockHashAndIndexMethod = GetTransactionByBlockHashAndIndexMethod;\n    exports.GetTransactionByBlockNumberAndIndexMethod = GetTransactionByBlockNumberAndIndexMethod;\n    exports.GetTransactionReceiptMethod = GetTransactionReceiptMethod;\n    exports.SendRawTransactionMethod = SendRawTransactionMethod;\n    exports.SignTransactionMethod = SignTransactionMethod;\n    exports.SendTransactionMethod = SendTransactionMethod;\n    exports.GetCodeMethod = GetCodeMethod;\n    exports.SignMethod = SignMethod;\n    exports.CallMethod = CallMethod;\n    exports.GetStorageAtMethod = GetStorageAtMethod;\n    exports.EstimateGasMethod = EstimateGasMethod;\n    exports.GetPastLogsMethod = GetPastLogsMethod;\n    exports.EcRecoverMethod = EcRecoverMethod;\n    exports.ImportRawKeyMethod = ImportRawKeyMethod;\n    exports.ListAccountsMethod = ListAccountsMethod;\n    exports.LockAccountMethod = LockAccountMethod;\n    exports.NewAccountMethod = NewAccountMethod;\n    exports.PersonalSendTransactionMethod = PersonalSendTransactionMethod;\n    exports.PersonalSignMethod = PersonalSignMethod;\n    exports.PersonalSignTransactionMethod = PersonalSignTransactionMethod;\n    exports.UnlockAccountMethod = UnlockAccountMethod;\n    exports.AddPrivateKeyMethod = AddPrivateKeyMethod;\n    exports.AddSymKeyMethod = AddSymKeyMethod;\n    exports.DeleteKeyPairMethod = DeleteKeyPairMethod;\n    exports.DeleteMessageFilterMethod = DeleteMessageFilterMethod;\n    exports.DeleteSymKeyMethod = DeleteSymKeyMethod;\n    exports.GenerateSymKeyFromPasswordMethod = GenerateSymKeyFromPasswordMethod;\n    exports.GetFilterMessagesMethod = GetFilterMessagesMethod;\n    exports.GetInfoMethod = GetInfoMethod;\n    exports.GetPrivateKeyMethod = GetPrivateKeyMethod;\n    exports.GetPublicKeyMethod = GetPublicKeyMethod;\n    exports.GetSymKeyMethod = GetSymKeyMethod;\n    exports.HasKeyPairMethod = HasKeyPairMethod;\n    exports.HasSymKeyMethod = HasSymKeyMethod;\n    exports.MarkTrustedPeerMethod = MarkTrustedPeerMethod;\n    exports.NewKeyPairMethod = NewKeyPairMethod;\n    exports.NewMessageFilterMethod = NewMessageFilterMethod;\n    exports.NewSymKeyMethod = NewSymKeyMethod;\n    exports.PostMethod = PostMethod;\n    exports.SetMaxMessageSizeMethod = SetMaxMessageSizeMethod;\n    exports.SetMinPoWMethod = SetMinPoWMethod;\n    exports.ShhVersionMethod = ShhVersionMethod;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"]},"metadata":{},"sourceType":"module"}