{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('web3-core-helpers'), require('web3-eth-accounts'), require('web3-eth-ens'), require('web3-eth-contract'), require('web3-eth-personal'), require('web3-eth-abi'), require('web3-eth-iban'), require('web3-net'), require('web3-utils'), require('ethereumjs-tx'), require('lodash/isString'), require('@babel/runtime/regenerator'), require('@babel/runtime/helpers/asyncToGenerator'), require('web3-core-subscriptions'), require('web3-core-method'), require('web3-providers'), require('@babel/runtime/helpers/classCallCheck'), require('@babel/runtime/helpers/createClass'), require('@babel/runtime/helpers/possibleConstructorReturn'), require('@babel/runtime/helpers/set'), require('@babel/runtime/helpers/getPrototypeOf'), require('@babel/runtime/helpers/get'), require('@babel/runtime/helpers/inherits'), require('web3-core')) : typeof define === 'function' && define.amd ? define(['exports', 'web3-core-helpers', 'web3-eth-accounts', 'web3-eth-ens', 'web3-eth-contract', 'web3-eth-personal', 'web3-eth-abi', 'web3-eth-iban', 'web3-net', 'web3-utils', 'ethereumjs-tx', 'lodash/isString', '@babel/runtime/regenerator', '@babel/runtime/helpers/asyncToGenerator', 'web3-core-subscriptions', 'web3-core-method', 'web3-providers', '@babel/runtime/helpers/classCallCheck', '@babel/runtime/helpers/createClass', '@babel/runtime/helpers/possibleConstructorReturn', '@babel/runtime/helpers/set', '@babel/runtime/helpers/getPrototypeOf', '@babel/runtime/helpers/get', '@babel/runtime/helpers/inherits', 'web3-core'], factory) : factory(global.Web3Eth = {}, global.web3CoreHelpers, global.web3EthAccounts, global.web3EthEns, global.web3EthContract, global.web3EthPersonal, global.web3EthAbi, global.web3EthIban, global.web3Net, global.Utils, global.EthereumTx, global.isString, global._regeneratorRuntime, global._asyncToGenerator, global.web3CoreSubscriptions, global.web3CoreMethod, global.web3Providers, global._classCallCheck, global._createClass, global._possibleConstructorReturn, global._set, global._getPrototypeOf, global._get, global._inherits, global.web3Core);\n})(this, function (exports, web3CoreHelpers, web3EthAccounts, web3EthEns, web3EthContract, web3EthPersonal, web3EthAbi, web3EthIban, web3Net, Utils, EthereumTx, isString, _regeneratorRuntime, _asyncToGenerator, web3CoreSubscriptions, web3CoreMethod, web3Providers, _classCallCheck, _createClass, _possibleConstructorReturn, _set, _getPrototypeOf, _get, _inherits, web3Core) {\n  'use strict';\n\n  EthereumTx = EthereumTx && EthereumTx.hasOwnProperty('default') ? EthereumTx['default'] : EthereumTx;\n  isString = isString && isString.hasOwnProperty('default') ? isString['default'] : isString;\n  _regeneratorRuntime = _regeneratorRuntime && _regeneratorRuntime.hasOwnProperty('default') ? _regeneratorRuntime['default'] : _regeneratorRuntime;\n  _asyncToGenerator = _asyncToGenerator && _asyncToGenerator.hasOwnProperty('default') ? _asyncToGenerator['default'] : _asyncToGenerator;\n  _classCallCheck = _classCallCheck && _classCallCheck.hasOwnProperty('default') ? _classCallCheck['default'] : _classCallCheck;\n  _createClass = _createClass && _createClass.hasOwnProperty('default') ? _createClass['default'] : _createClass;\n  _possibleConstructorReturn = _possibleConstructorReturn && _possibleConstructorReturn.hasOwnProperty('default') ? _possibleConstructorReturn['default'] : _possibleConstructorReturn;\n  _set = _set && _set.hasOwnProperty('default') ? _set['default'] : _set;\n  _getPrototypeOf = _getPrototypeOf && _getPrototypeOf.hasOwnProperty('default') ? _getPrototypeOf['default'] : _getPrototypeOf;\n  _get = _get && _get.hasOwnProperty('default') ? _get['default'] : _get;\n  _inherits = _inherits && _inherits.hasOwnProperty('default') ? _inherits['default'] : _inherits;\n\n  var TransactionSigner = function () {\n    function TransactionSigner(utils, formatters) {\n      _classCallCheck(this, TransactionSigner);\n\n      this.utils = utils;\n      this.formatters = formatters;\n    }\n\n    _createClass(TransactionSigner, [{\n      key: \"sign\",\n      value: function () {\n        var _sign = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(transaction, privateKey) {\n          var ethTx, validationResult, rlpEncoded, rawTransaction;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (privateKey) {\n                    _context.next = 2;\n                    break;\n                  }\n\n                  throw new Error('No privateKey given to the TransactionSigner.');\n\n                case 2:\n                  if (privateKey.startsWith('0x')) {\n                    privateKey = privateKey.substring(2);\n                  }\n\n                  ethTx = new EthereumTx(transaction);\n                  ethTx.sign(Buffer.from(privateKey, 'hex'));\n                  validationResult = ethTx.validate(true);\n\n                  if (!(validationResult !== '')) {\n                    _context.next = 8;\n                    break;\n                  }\n\n                  throw new Error(\"TransactionSigner Error: \".concat(validationResult));\n\n                case 8:\n                  rlpEncoded = ethTx.serialize().toString('hex');\n                  rawTransaction = '0x' + rlpEncoded;\n                  return _context.abrupt(\"return\", {\n                    messageHash: Buffer.from(ethTx.hash(false)).toString('hex'),\n                    v: '0x' + Buffer.from(ethTx.v).toString('hex'),\n                    r: '0x' + Buffer.from(ethTx.r).toString('hex'),\n                    s: '0x' + Buffer.from(ethTx.s).toString('hex'),\n                    rawTransaction: rawTransaction\n                  });\n\n                case 11:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        function sign(_x, _x2) {\n          return _sign.apply(this, arguments);\n        }\n\n        return sign;\n      }()\n    }]);\n\n    return TransactionSigner;\n  }();\n\n  var GetBlockMethod = function (_AbstractGetBlockMeth) {\n    _inherits(GetBlockMethod, _AbstractGetBlockMeth);\n\n    function GetBlockMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, GetBlockMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(GetBlockMethod).call(this, 'eth_getBlockByNumber', utils, formatters, moduleInstance));\n    }\n\n    _createClass(GetBlockMethod, [{\n      key: \"beforeExecution\",\n      value: function beforeExecution(moduleInstance) {\n        if (this.isHash(this.parameters[0])) {\n          this.rpcMethod = 'eth_getBlockByHash';\n        }\n\n        _get(_getPrototypeOf(GetBlockMethod.prototype), \"beforeExecution\", this).call(this, moduleInstance);\n      }\n    }]);\n\n    return GetBlockMethod;\n  }(web3CoreMethod.AbstractGetBlockMethod);\n\n  var GetUncleMethod = function (_AbstractGetUncleMeth) {\n    _inherits(GetUncleMethod, _AbstractGetUncleMeth);\n\n    function GetUncleMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, GetUncleMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(GetUncleMethod).call(this, 'eth_getUncleByBlockNumberAndIndex', utils, formatters, moduleInstance));\n    }\n\n    _createClass(GetUncleMethod, [{\n      key: \"beforeExecution\",\n      value: function beforeExecution(moduleInstance) {\n        if (this.isHash(this.parameters[0])) {\n          this.rpcMethod = 'eth_getUncleByBlockHashAndIndex';\n        }\n\n        _get(_getPrototypeOf(GetUncleMethod.prototype), \"beforeExecution\", this).call(this, moduleInstance);\n      }\n    }]);\n\n    return GetUncleMethod;\n  }(web3CoreMethod.AbstractGetUncleMethod);\n\n  var GetBlockTransactionCountMethod = function (_AbstractGetBlockTran) {\n    _inherits(GetBlockTransactionCountMethod, _AbstractGetBlockTran);\n\n    function GetBlockTransactionCountMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, GetBlockTransactionCountMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(GetBlockTransactionCountMethod).call(this, 'eth_getBlockTransactionCountByNumber', utils, formatters, moduleInstance));\n    }\n\n    _createClass(GetBlockTransactionCountMethod, [{\n      key: \"beforeExecution\",\n      value: function beforeExecution(moduleInstance) {\n        if (this.isHash(this.parameters[0])) {\n          this.rpcMethod = 'eth_getBlockTransactionCountByHash';\n        }\n\n        _get(_getPrototypeOf(GetBlockTransactionCountMethod.prototype), \"beforeExecution\", this).call(this, moduleInstance);\n      }\n    }]);\n\n    return GetBlockTransactionCountMethod;\n  }(web3CoreMethod.AbstractGetBlockTransactionCountMethod);\n\n  var GetBlockUncleCountMethod = function (_AbstractGetBlockUncl) {\n    _inherits(GetBlockUncleCountMethod, _AbstractGetBlockUncl);\n\n    function GetBlockUncleCountMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, GetBlockUncleCountMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(GetBlockUncleCountMethod).call(this, 'eth_getUncleCountByBlockNumber', utils, formatters, moduleInstance));\n    }\n\n    _createClass(GetBlockUncleCountMethod, [{\n      key: \"beforeExecution\",\n      value: function beforeExecution(moduleInstance) {\n        if (this.isHash(this.parameters[0])) {\n          this.rpcMethod = 'eth_getUncleCountByBlockHash';\n        }\n\n        _get(_getPrototypeOf(GetBlockUncleCountMethod.prototype), \"beforeExecution\", this).call(this, moduleInstance);\n      }\n    }]);\n\n    return GetBlockUncleCountMethod;\n  }(web3CoreMethod.AbstractGetBlockUncleCountMethod);\n\n  var GetTransactionFromBlockMethod = function (_AbstractGetTransacti) {\n    _inherits(GetTransactionFromBlockMethod, _AbstractGetTransacti);\n\n    function GetTransactionFromBlockMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, GetTransactionFromBlockMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(GetTransactionFromBlockMethod).call(this, 'eth_getTransactionByBlockNumberAndIndex', utils, formatters, moduleInstance));\n    }\n\n    _createClass(GetTransactionFromBlockMethod, [{\n      key: \"beforeExecution\",\n      value: function beforeExecution(moduleInstance) {\n        if (this.isHash(this.parameters[0])) {\n          this.rpcMethod = 'eth_getTransactionByBlockHashAndIndex';\n        }\n\n        _get(_getPrototypeOf(GetTransactionFromBlockMethod.prototype), \"beforeExecution\", this).call(this, moduleInstance);\n      }\n    }]);\n\n    return GetTransactionFromBlockMethod;\n  }(web3CoreMethod.AbstractGetTransactionFromBlockMethod);\n\n  var EthSignTransactionMethod = function (_SignTransactionMetho) {\n    _inherits(EthSignTransactionMethod, _SignTransactionMetho);\n\n    function EthSignTransactionMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, EthSignTransactionMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(EthSignTransactionMethod).call(this, utils, formatters, moduleInstance));\n    }\n\n    _createClass(EthSignTransactionMethod, [{\n      key: \"beforeExecution\",\n      value: function beforeExecution(moduleInstance) {\n        this.parameters[0] = this.formatters.inputTransactionFormatter(this.parameters[0], moduleInstance);\n      }\n    }, {\n      key: \"execute\",\n      value: function execute() {\n        if (isString(this.parameters[1])) {\n          var account = this.moduleInstance.accounts.wallet[this.parameters[1]];\n\n          if (account) {\n            return this.moduleInstance.transactionSigner.sign(this.parameters[0], account.privateKey);\n          }\n        }\n\n        return _get(_getPrototypeOf(EthSignTransactionMethod.prototype), \"execute\", this).call(this);\n      }\n    }]);\n\n    return EthSignTransactionMethod;\n  }(web3CoreMethod.SignTransactionMethod);\n\n  var EthSignMethod = function (_SignMethod) {\n    _inherits(EthSignMethod, _SignMethod);\n\n    function EthSignMethod(utils, formatters, moduleInstance) {\n      _classCallCheck(this, EthSignMethod);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(EthSignMethod).call(this, utils, formatters, moduleInstance));\n    }\n\n    _createClass(EthSignMethod, [{\n      key: \"execute\",\n      value: function execute() {\n        if (this.moduleInstance.accounts.wallet[this.parameters[1]]) {\n          return this.signLocally();\n        }\n\n        return _get(_getPrototypeOf(EthSignMethod.prototype), \"execute\", this).call(this);\n      }\n    }, {\n      key: \"signLocally\",\n      value: function () {\n        var _signLocally = _asyncToGenerator(_regeneratorRuntime.mark(function _callee() {\n          var signedMessage;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.prev = 0;\n                  this.beforeExecution(this.moduleInstance);\n                  signedMessage = this.moduleInstance.accounts.sign(this.parameters[1], this.moduleInstance.accounts.wallet[this.parameters[0]].privateKey);\n\n                  if (this.callback) {\n                    this.callback(false, signedMessage);\n                  }\n\n                  return _context.abrupt(\"return\", signedMessage);\n\n                case 7:\n                  _context.prev = 7;\n                  _context.t0 = _context[\"catch\"](0);\n\n                  if (this.callback) {\n                    this.callback(_context.t0, null);\n                  }\n\n                  throw _context.t0;\n\n                case 11:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this, [[0, 7]]);\n        }));\n\n        function signLocally() {\n          return _signLocally.apply(this, arguments);\n        }\n\n        return signLocally;\n      }()\n    }]);\n\n    return EthSignMethod;\n  }(web3CoreMethod.SignMethod);\n\n  var MethodFactory = function (_AbstractMethodFactor) {\n    _inherits(MethodFactory, _AbstractMethodFactor);\n\n    function MethodFactory(utils, formatters) {\n      var _this;\n\n      _classCallCheck(this, MethodFactory);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(MethodFactory).call(this, utils, formatters));\n      _this.methods = {\n        getNodeInfo: web3CoreMethod.GetNodeInfoMethod,\n        getProtocolVersion: web3CoreMethod.GetProtocolVersionMethod,\n        getCoinbase: web3CoreMethod.GetCoinbaseMethod,\n        isMining: web3CoreMethod.IsMiningMethod,\n        getHashrate: web3CoreMethod.GetHashrateMethod,\n        isSyncing: web3CoreMethod.IsSyncingMethod,\n        getGasPrice: web3CoreMethod.GetGasPriceMethod,\n        getAccounts: web3CoreMethod.GetAccountsMethod,\n        getBlockNumber: web3CoreMethod.GetBlockNumberMethod,\n        getBalance: web3CoreMethod.GetBalanceMethod,\n        getStorageAt: web3CoreMethod.GetStorageAtMethod,\n        getCode: web3CoreMethod.GetCodeMethod,\n        getBlock: GetBlockMethod,\n        getUncle: GetUncleMethod,\n        getBlockTransactionCount: GetBlockTransactionCountMethod,\n        getBlockUncleCount: GetBlockUncleCountMethod,\n        getTransaction: web3CoreMethod.GetTransactionMethod,\n        getTransactionFromBlock: GetTransactionFromBlockMethod,\n        getTransactionReceipt: web3CoreMethod.GetTransactionReceiptMethod,\n        getTransactionCount: web3CoreMethod.GetTransactionCountMethod,\n        sendSignedTransaction: web3CoreMethod.SendRawTransactionMethod,\n        signTransaction: EthSignTransactionMethod,\n        sendTransaction: web3CoreMethod.EthSendTransactionMethod,\n        sign: EthSignMethod,\n        call: web3CoreMethod.CallMethod,\n        estimateGas: web3CoreMethod.EstimateGasMethod,\n        submitWork: web3CoreMethod.SubmitWorkMethod,\n        getWork: web3CoreMethod.GetWorkMethod,\n        getPastLogs: web3CoreMethod.GetPastLogsMethod,\n        requestAccounts: web3CoreMethod.RequestAccountsMethod,\n        getId: web3CoreMethod.VersionMethod,\n        getChainId: web3CoreMethod.ChainIdMethod\n      };\n      return _this;\n    }\n\n    return MethodFactory;\n  }(web3CoreMethod.AbstractMethodFactory);\n\n  var SubscriptionsFactory = function () {\n    function SubscriptionsFactory(utils, formatters) {\n      _classCallCheck(this, SubscriptionsFactory);\n\n      this.utils = utils;\n      this.formatters = formatters;\n    }\n\n    _createClass(SubscriptionsFactory, [{\n      key: \"getSubscription\",\n      value: function getSubscription(moduleInstance, type, options) {\n        switch (type) {\n          case 'logs':\n            return new web3CoreSubscriptions.LogSubscription(options, this.utils, this.formatters, moduleInstance, new web3CoreMethod.GetPastLogsMethod(this.utils, this.formatters, moduleInstance));\n\n          case 'newBlockHeaders':\n            return new web3CoreSubscriptions.NewHeadsSubscription(this.utils, this.formatters, moduleInstance);\n\n          case 'pendingTransactions':\n            return new web3CoreSubscriptions.NewPendingTransactionsSubscription(this.utils, this.formatters, moduleInstance);\n\n          case 'syncing':\n            return new web3CoreSubscriptions.SyncingSubscription(this.utils, this.formatters, moduleInstance);\n\n          default:\n            throw new Error(\"Unknown subscription: \".concat(type));\n        }\n      }\n    }]);\n\n    return SubscriptionsFactory;\n  }();\n\n  var Eth = function (_AbstractWeb3Module) {\n    _inherits(Eth, _AbstractWeb3Module);\n\n    function Eth(provider, methodFactory, net, accounts, personal, Iban, abiCoder, ens, utils, formatters, subscriptionsFactory, contractModuleFactory, options, nodeNet) {\n      var _this;\n\n      _classCallCheck(this, Eth);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Eth).call(this, provider, options, methodFactory, nodeNet));\n      _this.net = net;\n      _this.accounts = accounts;\n      _this.personal = personal;\n      _this.Iban = Iban;\n      _this.abi = abiCoder;\n      _this.ens = ens;\n      _this.utils = utils;\n      _this.formatters = formatters;\n      _this.subscriptionsFactory = subscriptionsFactory;\n      _this.contractModuleFactory = contractModuleFactory;\n      _this.initiatedContracts = [];\n      _this._transactionSigner = options.transactionSigner;\n\n      _this.Contract = function (abi, address) {\n        var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n        var contract = _this.contractModuleFactory.createContract(_this.currentProvider, _this.accounts, abi, address, {\n          defaultAccount: options.from || options.defaultAccount || _this.defaultAccount,\n          defaultBlock: options.defaultBlock || _this.defaultBlock,\n          defaultGas: options.gas || options.defaultGas || _this.defaultGas,\n          defaultGasPrice: options.gasPrice || options.defaultGasPrice || _this.defaultGasPrice,\n          transactionBlockTimeout: options.transactionBlockTimeout || _this.transactionBlockTimeout,\n          transactionConfirmationBlocks: options.transactionConfirmationBlocks || _this.transactionConfirmationBlocks,\n          transactionPollingTimeout: options.transactionPollingTimeout || _this.transactionPollingTimeout,\n          transactionSigner: _this.transactionSigner,\n          data: options.data\n        });\n\n        _this.initiatedContracts.push(contract);\n\n        return contract;\n      };\n\n      return _this;\n    }\n\n    _createClass(Eth, [{\n      key: \"clearSubscriptions\",\n      value: function clearSubscriptions() {\n        return _get(_getPrototypeOf(Eth.prototype), \"clearSubscriptions\", this).call(this, 'eth_unsubscribe');\n      }\n    }, {\n      key: \"subscribe\",\n      value: function subscribe(type, options, callback) {\n        return this.subscriptionsFactory.getSubscription(this, type, options).subscribe(callback);\n      }\n    }, {\n      key: \"setProvider\",\n      value: function setProvider(provider, net) {\n        var setContractProviders = this.initiatedContracts.every(function (contract) {\n          return contract.setProvider(provider, net);\n        });\n        return this.net.setProvider(provider, net) && this.personal.setProvider(provider, net) && _get(_getPrototypeOf(Eth.prototype), \"setProvider\", this).call(this, provider, net) && setContractProviders;\n      }\n    }, {\n      key: \"transactionSigner\",\n      get: function get() {\n        return this._transactionSigner;\n      },\n      set: function set(transactionSigner) {\n        this._transactionSigner = transactionSigner;\n        this.accounts.transactionSigner = transactionSigner;\n        this.ens.transactionSigner = transactionSigner;\n        this.initiatedContracts.forEach(function (contract) {\n          contract.transactionSigner = transactionSigner;\n        });\n      }\n    }, {\n      key: \"defaultGasPrice\",\n      set: function set(value) {\n        this.initiatedContracts.forEach(function (contract) {\n          contract.defaultGasPrice = value;\n        });\n        this.net.defaultGasPrice = value;\n        this.personal.defaultGasPrice = value;\n\n        _set(_getPrototypeOf(Eth.prototype), \"defaultGasPrice\", value, this, true);\n      },\n      get: function get() {\n        return _get(_getPrototypeOf(Eth.prototype), \"defaultGasPrice\", this);\n      }\n    }, {\n      key: \"defaultGas\",\n      set: function set(value) {\n        this.initiatedContracts.forEach(function (contract) {\n          contract.defaultGas = value;\n        });\n        this.net.defaultGas = value;\n        this.personal.defaultGas = value;\n\n        _set(_getPrototypeOf(Eth.prototype), \"defaultGas\", value, this, true);\n      },\n      get: function get() {\n        return _get(_getPrototypeOf(Eth.prototype), \"defaultGas\", this);\n      }\n    }, {\n      key: \"transactionBlockTimeout\",\n      set: function set(value) {\n        this.initiatedContracts.forEach(function (contract) {\n          contract.transactionBlockTimeout = value;\n        });\n        this.net.transactionBlockTimeout = value;\n        this.personal.transactionBlockTimeout = value;\n\n        _set(_getPrototypeOf(Eth.prototype), \"transactionBlockTimeout\", value, this, true);\n      },\n      get: function get() {\n        return _get(_getPrototypeOf(Eth.prototype), \"transactionBlockTimeout\", this);\n      }\n    }, {\n      key: \"transactionConfirmationBlocks\",\n      set: function set(value) {\n        this.initiatedContracts.forEach(function (contract) {\n          contract.transactionConfirmationBlocks = value;\n        });\n        this.net.transactionConfirmationBlocks = value;\n        this.personal.transactionConfirmationBlocks = value;\n\n        _set(_getPrototypeOf(Eth.prototype), \"transactionConfirmationBlocks\", value, this, true);\n      },\n      get: function get() {\n        return _get(_getPrototypeOf(Eth.prototype), \"transactionConfirmationBlocks\", this);\n      }\n    }, {\n      key: \"transactionPollingTimeout\",\n      set: function set(value) {\n        this.initiatedContracts.forEach(function (contract) {\n          contract.transactionPollingTimeout = value;\n        });\n        this.net.transactionPollingTimeout = value;\n        this.personal.transactionPollingTimeout = value;\n\n        _set(_getPrototypeOf(Eth.prototype), \"transactionPollingTimeout\", value, this, true);\n      },\n      get: function get() {\n        return _get(_getPrototypeOf(Eth.prototype), \"transactionPollingTimeout\", this);\n      }\n    }, {\n      key: \"defaultAccount\",\n      set: function set(value) {\n        var _this2 = this;\n\n        this.initiatedContracts.forEach(function (contract) {\n          contract.defaultAccount = _this2.utils.toChecksumAddress(value);\n        });\n        this.net.defaultAccount = value;\n        this.personal.defaultAccount = value;\n\n        _set(_getPrototypeOf(Eth.prototype), \"defaultAccount\", value, this, true);\n      },\n      get: function get() {\n        return _get(_getPrototypeOf(Eth.prototype), \"defaultAccount\", this);\n      }\n    }, {\n      key: \"defaultBlock\",\n      set: function set(value) {\n        this.initiatedContracts.forEach(function (contract) {\n          contract.defaultBlock = value;\n        });\n        this.net.defaultBlock = value;\n        this.personal.defaultBlock = value;\n\n        _set(_getPrototypeOf(Eth.prototype), \"defaultBlock\", value, this, true);\n      },\n      get: function get() {\n        return _get(_getPrototypeOf(Eth.prototype), \"defaultBlock\", this);\n      }\n    }]);\n\n    return Eth;\n  }(web3Core.AbstractWeb3Module);\n\n  function TransactionSigner$1() {\n    return new TransactionSigner(Utils, web3CoreHelpers.formatters);\n  }\n\n  function Eth$1(provider) {\n    var net = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    if (!options.transactionSigner) {\n      options.transactionSigner = new TransactionSigner$1();\n    }\n\n    var resolvedProvider = new web3Providers.ProviderResolver().resolve(provider, net);\n    var accounts = new web3EthAccounts.Accounts(resolvedProvider, null, options);\n    var abiCoder = new web3EthAbi.AbiCoder();\n    return new Eth(resolvedProvider, new MethodFactory(Utils, web3CoreHelpers.formatters), new web3Net.Network(resolvedProvider, null, options), accounts, new web3EthPersonal.Personal(resolvedProvider, null, accounts, options), web3EthIban.Iban, abiCoder, new web3EthEns.Ens(resolvedProvider, null, accounts, options), Utils, web3CoreHelpers.formatters, new SubscriptionsFactory(Utils, web3CoreHelpers.formatters), new web3EthContract.ContractModuleFactory(Utils, web3CoreHelpers.formatters, abiCoder, accounts), options, net);\n  }\n\n  exports.TransactionSigner = TransactionSigner$1;\n  exports.Eth = Eth$1;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"sources":["/Users/chasesmith/Desktop/registry-display/src/node_modules/web3-eth/dist/web3-eth.umd.js"],"names":["global","factory","exports","module","require","define","amd","Web3Eth","web3CoreHelpers","web3EthAccounts","web3EthEns","web3EthContract","web3EthPersonal","web3EthAbi","web3EthIban","web3Net","Utils","EthereumTx","isString","_regeneratorRuntime","_asyncToGenerator","web3CoreSubscriptions","web3CoreMethod","web3Providers","_classCallCheck","_createClass","_possibleConstructorReturn","_set","_getPrototypeOf","_get","_inherits","web3Core","hasOwnProperty","TransactionSigner","utils","formatters","key","value","_sign","mark","_callee","transaction","privateKey","ethTx","validationResult","rlpEncoded","rawTransaction","wrap","_callee$","_context","prev","next","Error","startsWith","substring","sign","Buffer","from","validate","concat","serialize","toString","abrupt","messageHash","hash","v","r","s","stop","_x","_x2","apply","arguments","GetBlockMethod","_AbstractGetBlockMeth","moduleInstance","call","beforeExecution","isHash","parameters","rpcMethod","prototype","AbstractGetBlockMethod","GetUncleMethod","_AbstractGetUncleMeth","AbstractGetUncleMethod","GetBlockTransactionCountMethod","_AbstractGetBlockTran","AbstractGetBlockTransactionCountMethod","GetBlockUncleCountMethod","_AbstractGetBlockUncl","AbstractGetBlockUncleCountMethod","GetTransactionFromBlockMethod","_AbstractGetTransacti","AbstractGetTransactionFromBlockMethod","EthSignTransactionMethod","_SignTransactionMetho","inputTransactionFormatter","execute","account","accounts","wallet","transactionSigner","SignTransactionMethod","EthSignMethod","_SignMethod","signLocally","_signLocally","signedMessage","callback","t0","SignMethod","MethodFactory","_AbstractMethodFactor","_this","methods","getNodeInfo","GetNodeInfoMethod","getProtocolVersion","GetProtocolVersionMethod","getCoinbase","GetCoinbaseMethod","isMining","IsMiningMethod","getHashrate","GetHashrateMethod","isSyncing","IsSyncingMethod","getGasPrice","GetGasPriceMethod","getAccounts","GetAccountsMethod","getBlockNumber","GetBlockNumberMethod","getBalance","GetBalanceMethod","getStorageAt","GetStorageAtMethod","getCode","GetCodeMethod","getBlock","getUncle","getBlockTransactionCount","getBlockUncleCount","getTransaction","GetTransactionMethod","getTransactionFromBlock","getTransactionReceipt","GetTransactionReceiptMethod","getTransactionCount","GetTransactionCountMethod","sendSignedTransaction","SendRawTransactionMethod","signTransaction","sendTransaction","EthSendTransactionMethod","CallMethod","estimateGas","EstimateGasMethod","submitWork","SubmitWorkMethod","getWork","GetWorkMethod","getPastLogs","GetPastLogsMethod","requestAccounts","RequestAccountsMethod","getId","VersionMethod","getChainId","ChainIdMethod","AbstractMethodFactory","SubscriptionsFactory","getSubscription","type","options","LogSubscription","NewHeadsSubscription","NewPendingTransactionsSubscription","SyncingSubscription","Eth","_AbstractWeb3Module","provider","methodFactory","net","personal","Iban","abiCoder","ens","subscriptionsFactory","contractModuleFactory","nodeNet","abi","initiatedContracts","_transactionSigner","Contract","address","length","undefined","contract","createContract","currentProvider","defaultAccount","defaultBlock","defaultGas","gas","defaultGasPrice","gasPrice","transactionBlockTimeout","transactionConfirmationBlocks","transactionPollingTimeout","data","push","clearSubscriptions","subscribe","setProvider","setContractProviders","every","get","set","forEach","_this2","toChecksumAddress","AbstractWeb3Module","TransactionSigner$1","Eth$1","resolvedProvider","ProviderResolver","resolve","Accounts","AbiCoder","Network","Personal","Ens","ContractModuleFactory","Object","defineProperty"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('web3-core-helpers'), require('web3-eth-accounts'), require('web3-eth-ens'), require('web3-eth-contract'), require('web3-eth-personal'), require('web3-eth-abi'), require('web3-eth-iban'), require('web3-net'), require('web3-utils'), require('ethereumjs-tx'), require('lodash/isString'), require('@babel/runtime/regenerator'), require('@babel/runtime/helpers/asyncToGenerator'), require('web3-core-subscriptions'), require('web3-core-method'), require('web3-providers'), require('@babel/runtime/helpers/classCallCheck'), require('@babel/runtime/helpers/createClass'), require('@babel/runtime/helpers/possibleConstructorReturn'), require('@babel/runtime/helpers/set'), require('@babel/runtime/helpers/getPrototypeOf'), require('@babel/runtime/helpers/get'), require('@babel/runtime/helpers/inherits'), require('web3-core')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'web3-core-helpers', 'web3-eth-accounts', 'web3-eth-ens', 'web3-eth-contract', 'web3-eth-personal', 'web3-eth-abi', 'web3-eth-iban', 'web3-net', 'web3-utils', 'ethereumjs-tx', 'lodash/isString', '@babel/runtime/regenerator', '@babel/runtime/helpers/asyncToGenerator', 'web3-core-subscriptions', 'web3-core-method', 'web3-providers', '@babel/runtime/helpers/classCallCheck', '@babel/runtime/helpers/createClass', '@babel/runtime/helpers/possibleConstructorReturn', '@babel/runtime/helpers/set', '@babel/runtime/helpers/getPrototypeOf', '@babel/runtime/helpers/get', '@babel/runtime/helpers/inherits', 'web3-core'], factory) :\n    (factory((global.Web3Eth = {}),global.web3CoreHelpers,global.web3EthAccounts,global.web3EthEns,global.web3EthContract,global.web3EthPersonal,global.web3EthAbi,global.web3EthIban,global.web3Net,global.Utils,global.EthereumTx,global.isString,global._regeneratorRuntime,global._asyncToGenerator,global.web3CoreSubscriptions,global.web3CoreMethod,global.web3Providers,global._classCallCheck,global._createClass,global._possibleConstructorReturn,global._set,global._getPrototypeOf,global._get,global._inherits,global.web3Core));\n}(this, (function (exports,web3CoreHelpers,web3EthAccounts,web3EthEns,web3EthContract,web3EthPersonal,web3EthAbi,web3EthIban,web3Net,Utils,EthereumTx,isString,_regeneratorRuntime,_asyncToGenerator,web3CoreSubscriptions,web3CoreMethod,web3Providers,_classCallCheck,_createClass,_possibleConstructorReturn,_set,_getPrototypeOf,_get,_inherits,web3Core) { 'use strict';\n\n    EthereumTx = EthereumTx && EthereumTx.hasOwnProperty('default') ? EthereumTx['default'] : EthereumTx;\n    isString = isString && isString.hasOwnProperty('default') ? isString['default'] : isString;\n    _regeneratorRuntime = _regeneratorRuntime && _regeneratorRuntime.hasOwnProperty('default') ? _regeneratorRuntime['default'] : _regeneratorRuntime;\n    _asyncToGenerator = _asyncToGenerator && _asyncToGenerator.hasOwnProperty('default') ? _asyncToGenerator['default'] : _asyncToGenerator;\n    _classCallCheck = _classCallCheck && _classCallCheck.hasOwnProperty('default') ? _classCallCheck['default'] : _classCallCheck;\n    _createClass = _createClass && _createClass.hasOwnProperty('default') ? _createClass['default'] : _createClass;\n    _possibleConstructorReturn = _possibleConstructorReturn && _possibleConstructorReturn.hasOwnProperty('default') ? _possibleConstructorReturn['default'] : _possibleConstructorReturn;\n    _set = _set && _set.hasOwnProperty('default') ? _set['default'] : _set;\n    _getPrototypeOf = _getPrototypeOf && _getPrototypeOf.hasOwnProperty('default') ? _getPrototypeOf['default'] : _getPrototypeOf;\n    _get = _get && _get.hasOwnProperty('default') ? _get['default'] : _get;\n    _inherits = _inherits && _inherits.hasOwnProperty('default') ? _inherits['default'] : _inherits;\n\n    var TransactionSigner =\n    function () {\n      function TransactionSigner(utils, formatters) {\n        _classCallCheck(this, TransactionSigner);\n        this.utils = utils;\n        this.formatters = formatters;\n      }\n      _createClass(TransactionSigner, [{\n        key: \"sign\",\n        value: function () {\n          var _sign = _asyncToGenerator(\n          _regeneratorRuntime.mark(function _callee(transaction, privateKey) {\n            var ethTx, validationResult, rlpEncoded, rawTransaction;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    if (privateKey) {\n                      _context.next = 2;\n                      break;\n                    }\n                    throw new Error('No privateKey given to the TransactionSigner.');\n                  case 2:\n                    if (privateKey.startsWith('0x')) {\n                      privateKey = privateKey.substring(2);\n                    }\n                    ethTx = new EthereumTx(transaction);\n                    ethTx.sign(Buffer.from(privateKey, 'hex'));\n                    validationResult = ethTx.validate(true);\n                    if (!(validationResult !== '')) {\n                      _context.next = 8;\n                      break;\n                    }\n                    throw new Error(\"TransactionSigner Error: \".concat(validationResult));\n                  case 8:\n                    rlpEncoded = ethTx.serialize().toString('hex');\n                    rawTransaction = '0x' + rlpEncoded;\n                    return _context.abrupt(\"return\", {\n                      messageHash: Buffer.from(ethTx.hash(false)).toString('hex'),\n                      v: '0x' + Buffer.from(ethTx.v).toString('hex'),\n                      r: '0x' + Buffer.from(ethTx.r).toString('hex'),\n                      s: '0x' + Buffer.from(ethTx.s).toString('hex'),\n                      rawTransaction: rawTransaction\n                    });\n                  case 11:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n          function sign(_x, _x2) {\n            return _sign.apply(this, arguments);\n          }\n          return sign;\n        }()\n      }]);\n      return TransactionSigner;\n    }();\n\n    var GetBlockMethod =\n    function (_AbstractGetBlockMeth) {\n      _inherits(GetBlockMethod, _AbstractGetBlockMeth);\n      function GetBlockMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetBlockMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetBlockMethod).call(this, 'eth_getBlockByNumber', utils, formatters, moduleInstance));\n      }\n      _createClass(GetBlockMethod, [{\n        key: \"beforeExecution\",\n        value: function beforeExecution(moduleInstance) {\n          if (this.isHash(this.parameters[0])) {\n            this.rpcMethod = 'eth_getBlockByHash';\n          }\n          _get(_getPrototypeOf(GetBlockMethod.prototype), \"beforeExecution\", this).call(this, moduleInstance);\n        }\n      }]);\n      return GetBlockMethod;\n    }(web3CoreMethod.AbstractGetBlockMethod);\n\n    var GetUncleMethod =\n    function (_AbstractGetUncleMeth) {\n      _inherits(GetUncleMethod, _AbstractGetUncleMeth);\n      function GetUncleMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetUncleMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetUncleMethod).call(this, 'eth_getUncleByBlockNumberAndIndex', utils, formatters, moduleInstance));\n      }\n      _createClass(GetUncleMethod, [{\n        key: \"beforeExecution\",\n        value: function beforeExecution(moduleInstance) {\n          if (this.isHash(this.parameters[0])) {\n            this.rpcMethod = 'eth_getUncleByBlockHashAndIndex';\n          }\n          _get(_getPrototypeOf(GetUncleMethod.prototype), \"beforeExecution\", this).call(this, moduleInstance);\n        }\n      }]);\n      return GetUncleMethod;\n    }(web3CoreMethod.AbstractGetUncleMethod);\n\n    var GetBlockTransactionCountMethod =\n    function (_AbstractGetBlockTran) {\n      _inherits(GetBlockTransactionCountMethod, _AbstractGetBlockTran);\n      function GetBlockTransactionCountMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetBlockTransactionCountMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetBlockTransactionCountMethod).call(this, 'eth_getBlockTransactionCountByNumber', utils, formatters, moduleInstance));\n      }\n      _createClass(GetBlockTransactionCountMethod, [{\n        key: \"beforeExecution\",\n        value: function beforeExecution(moduleInstance) {\n          if (this.isHash(this.parameters[0])) {\n            this.rpcMethod = 'eth_getBlockTransactionCountByHash';\n          }\n          _get(_getPrototypeOf(GetBlockTransactionCountMethod.prototype), \"beforeExecution\", this).call(this, moduleInstance);\n        }\n      }]);\n      return GetBlockTransactionCountMethod;\n    }(web3CoreMethod.AbstractGetBlockTransactionCountMethod);\n\n    var GetBlockUncleCountMethod =\n    function (_AbstractGetBlockUncl) {\n      _inherits(GetBlockUncleCountMethod, _AbstractGetBlockUncl);\n      function GetBlockUncleCountMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetBlockUncleCountMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetBlockUncleCountMethod).call(this, 'eth_getUncleCountByBlockNumber', utils, formatters, moduleInstance));\n      }\n      _createClass(GetBlockUncleCountMethod, [{\n        key: \"beforeExecution\",\n        value: function beforeExecution(moduleInstance) {\n          if (this.isHash(this.parameters[0])) {\n            this.rpcMethod = 'eth_getUncleCountByBlockHash';\n          }\n          _get(_getPrototypeOf(GetBlockUncleCountMethod.prototype), \"beforeExecution\", this).call(this, moduleInstance);\n        }\n      }]);\n      return GetBlockUncleCountMethod;\n    }(web3CoreMethod.AbstractGetBlockUncleCountMethod);\n\n    var GetTransactionFromBlockMethod =\n    function (_AbstractGetTransacti) {\n      _inherits(GetTransactionFromBlockMethod, _AbstractGetTransacti);\n      function GetTransactionFromBlockMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, GetTransactionFromBlockMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(GetTransactionFromBlockMethod).call(this, 'eth_getTransactionByBlockNumberAndIndex', utils, formatters, moduleInstance));\n      }\n      _createClass(GetTransactionFromBlockMethod, [{\n        key: \"beforeExecution\",\n        value: function beforeExecution(moduleInstance) {\n          if (this.isHash(this.parameters[0])) {\n            this.rpcMethod = 'eth_getTransactionByBlockHashAndIndex';\n          }\n          _get(_getPrototypeOf(GetTransactionFromBlockMethod.prototype), \"beforeExecution\", this).call(this, moduleInstance);\n        }\n      }]);\n      return GetTransactionFromBlockMethod;\n    }(web3CoreMethod.AbstractGetTransactionFromBlockMethod);\n\n    var EthSignTransactionMethod =\n    function (_SignTransactionMetho) {\n      _inherits(EthSignTransactionMethod, _SignTransactionMetho);\n      function EthSignTransactionMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, EthSignTransactionMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(EthSignTransactionMethod).call(this, utils, formatters, moduleInstance));\n      }\n      _createClass(EthSignTransactionMethod, [{\n        key: \"beforeExecution\",\n        value: function beforeExecution(moduleInstance) {\n          this.parameters[0] = this.formatters.inputTransactionFormatter(this.parameters[0], moduleInstance);\n        }\n      }, {\n        key: \"execute\",\n        value: function execute() {\n          if (isString(this.parameters[1])) {\n            var account = this.moduleInstance.accounts.wallet[this.parameters[1]];\n            if (account) {\n              return this.moduleInstance.transactionSigner.sign(this.parameters[0], account.privateKey);\n            }\n          }\n          return _get(_getPrototypeOf(EthSignTransactionMethod.prototype), \"execute\", this).call(this);\n        }\n      }]);\n      return EthSignTransactionMethod;\n    }(web3CoreMethod.SignTransactionMethod);\n\n    var EthSignMethod =\n    function (_SignMethod) {\n      _inherits(EthSignMethod, _SignMethod);\n      function EthSignMethod(utils, formatters, moduleInstance) {\n        _classCallCheck(this, EthSignMethod);\n        return _possibleConstructorReturn(this, _getPrototypeOf(EthSignMethod).call(this, utils, formatters, moduleInstance));\n      }\n      _createClass(EthSignMethod, [{\n        key: \"execute\",\n        value: function execute() {\n          if (this.moduleInstance.accounts.wallet[this.parameters[1]]) {\n            return this.signLocally();\n          }\n          return _get(_getPrototypeOf(EthSignMethod.prototype), \"execute\", this).call(this);\n        }\n      }, {\n        key: \"signLocally\",\n        value: function () {\n          var _signLocally = _asyncToGenerator(\n          _regeneratorRuntime.mark(function _callee() {\n            var signedMessage;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.prev = 0;\n                    this.beforeExecution(this.moduleInstance);\n                    signedMessage = this.moduleInstance.accounts.sign(this.parameters[1], this.moduleInstance.accounts.wallet[this.parameters[0]].privateKey);\n                    if (this.callback) {\n                      this.callback(false, signedMessage);\n                    }\n                    return _context.abrupt(\"return\", signedMessage);\n                  case 7:\n                    _context.prev = 7;\n                    _context.t0 = _context[\"catch\"](0);\n                    if (this.callback) {\n                      this.callback(_context.t0, null);\n                    }\n                    throw _context.t0;\n                  case 11:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, this, [[0, 7]]);\n          }));\n          function signLocally() {\n            return _signLocally.apply(this, arguments);\n          }\n          return signLocally;\n        }()\n      }]);\n      return EthSignMethod;\n    }(web3CoreMethod.SignMethod);\n\n    var MethodFactory =\n    function (_AbstractMethodFactor) {\n      _inherits(MethodFactory, _AbstractMethodFactor);\n      function MethodFactory(utils, formatters) {\n        var _this;\n        _classCallCheck(this, MethodFactory);\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(MethodFactory).call(this, utils, formatters));\n        _this.methods = {\n          getNodeInfo: web3CoreMethod.GetNodeInfoMethod,\n          getProtocolVersion: web3CoreMethod.GetProtocolVersionMethod,\n          getCoinbase: web3CoreMethod.GetCoinbaseMethod,\n          isMining: web3CoreMethod.IsMiningMethod,\n          getHashrate: web3CoreMethod.GetHashrateMethod,\n          isSyncing: web3CoreMethod.IsSyncingMethod,\n          getGasPrice: web3CoreMethod.GetGasPriceMethod,\n          getAccounts: web3CoreMethod.GetAccountsMethod,\n          getBlockNumber: web3CoreMethod.GetBlockNumberMethod,\n          getBalance: web3CoreMethod.GetBalanceMethod,\n          getStorageAt: web3CoreMethod.GetStorageAtMethod,\n          getCode: web3CoreMethod.GetCodeMethod,\n          getBlock: GetBlockMethod,\n          getUncle: GetUncleMethod,\n          getBlockTransactionCount: GetBlockTransactionCountMethod,\n          getBlockUncleCount: GetBlockUncleCountMethod,\n          getTransaction: web3CoreMethod.GetTransactionMethod,\n          getTransactionFromBlock: GetTransactionFromBlockMethod,\n          getTransactionReceipt: web3CoreMethod.GetTransactionReceiptMethod,\n          getTransactionCount: web3CoreMethod.GetTransactionCountMethod,\n          sendSignedTransaction: web3CoreMethod.SendRawTransactionMethod,\n          signTransaction: EthSignTransactionMethod,\n          sendTransaction: web3CoreMethod.EthSendTransactionMethod,\n          sign: EthSignMethod,\n          call: web3CoreMethod.CallMethod,\n          estimateGas: web3CoreMethod.EstimateGasMethod,\n          submitWork: web3CoreMethod.SubmitWorkMethod,\n          getWork: web3CoreMethod.GetWorkMethod,\n          getPastLogs: web3CoreMethod.GetPastLogsMethod,\n          requestAccounts: web3CoreMethod.RequestAccountsMethod,\n          getId: web3CoreMethod.VersionMethod,\n          getChainId: web3CoreMethod.ChainIdMethod\n        };\n        return _this;\n      }\n      return MethodFactory;\n    }(web3CoreMethod.AbstractMethodFactory);\n\n    var SubscriptionsFactory =\n    function () {\n      function SubscriptionsFactory(utils, formatters) {\n        _classCallCheck(this, SubscriptionsFactory);\n        this.utils = utils;\n        this.formatters = formatters;\n      }\n      _createClass(SubscriptionsFactory, [{\n        key: \"getSubscription\",\n        value: function getSubscription(moduleInstance, type, options) {\n          switch (type) {\n            case 'logs':\n              return new web3CoreSubscriptions.LogSubscription(options, this.utils, this.formatters, moduleInstance, new web3CoreMethod.GetPastLogsMethod(this.utils, this.formatters, moduleInstance));\n            case 'newBlockHeaders':\n              return new web3CoreSubscriptions.NewHeadsSubscription(this.utils, this.formatters, moduleInstance);\n            case 'pendingTransactions':\n              return new web3CoreSubscriptions.NewPendingTransactionsSubscription(this.utils, this.formatters, moduleInstance);\n            case 'syncing':\n              return new web3CoreSubscriptions.SyncingSubscription(this.utils, this.formatters, moduleInstance);\n            default:\n              throw new Error(\"Unknown subscription: \".concat(type));\n          }\n        }\n      }]);\n      return SubscriptionsFactory;\n    }();\n\n    var Eth =\n    function (_AbstractWeb3Module) {\n      _inherits(Eth, _AbstractWeb3Module);\n      function Eth(provider, methodFactory, net, accounts, personal, Iban, abiCoder, ens, utils, formatters, subscriptionsFactory, contractModuleFactory, options, nodeNet) {\n        var _this;\n        _classCallCheck(this, Eth);\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(Eth).call(this, provider, options, methodFactory, nodeNet));\n        _this.net = net;\n        _this.accounts = accounts;\n        _this.personal = personal;\n        _this.Iban = Iban;\n        _this.abi = abiCoder;\n        _this.ens = ens;\n        _this.utils = utils;\n        _this.formatters = formatters;\n        _this.subscriptionsFactory = subscriptionsFactory;\n        _this.contractModuleFactory = contractModuleFactory;\n        _this.initiatedContracts = [];\n        _this._transactionSigner = options.transactionSigner;\n        _this.Contract = function (abi, address) {\n          var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n          var contract = _this.contractModuleFactory.createContract(_this.currentProvider, _this.accounts, abi, address, {\n            defaultAccount: options.from || options.defaultAccount || _this.defaultAccount,\n            defaultBlock: options.defaultBlock || _this.defaultBlock,\n            defaultGas: options.gas || options.defaultGas || _this.defaultGas,\n            defaultGasPrice: options.gasPrice || options.defaultGasPrice || _this.defaultGasPrice,\n            transactionBlockTimeout: options.transactionBlockTimeout || _this.transactionBlockTimeout,\n            transactionConfirmationBlocks: options.transactionConfirmationBlocks || _this.transactionConfirmationBlocks,\n            transactionPollingTimeout: options.transactionPollingTimeout || _this.transactionPollingTimeout,\n            transactionSigner: _this.transactionSigner,\n            data: options.data\n          });\n          _this.initiatedContracts.push(contract);\n          return contract;\n        };\n        return _this;\n      }\n      _createClass(Eth, [{\n        key: \"clearSubscriptions\",\n        value: function clearSubscriptions() {\n          return _get(_getPrototypeOf(Eth.prototype), \"clearSubscriptions\", this).call(this, 'eth_unsubscribe');\n        }\n      }, {\n        key: \"subscribe\",\n        value: function subscribe(type, options, callback) {\n          return this.subscriptionsFactory.getSubscription(this, type, options).subscribe(callback);\n        }\n      }, {\n        key: \"setProvider\",\n        value: function setProvider(provider, net) {\n          var setContractProviders = this.initiatedContracts.every(function (contract) {\n            return contract.setProvider(provider, net);\n          });\n          return this.net.setProvider(provider, net) && this.personal.setProvider(provider, net) && _get(_getPrototypeOf(Eth.prototype), \"setProvider\", this).call(this, provider, net) && setContractProviders;\n        }\n      }, {\n        key: \"transactionSigner\",\n        get: function get() {\n          return this._transactionSigner;\n        }\n        ,\n        set: function set(transactionSigner) {\n          this._transactionSigner = transactionSigner;\n          this.accounts.transactionSigner = transactionSigner;\n          this.ens.transactionSigner = transactionSigner;\n          this.initiatedContracts.forEach(function (contract) {\n            contract.transactionSigner = transactionSigner;\n          });\n        }\n      }, {\n        key: \"defaultGasPrice\",\n        set: function set(value) {\n          this.initiatedContracts.forEach(function (contract) {\n            contract.defaultGasPrice = value;\n          });\n          this.net.defaultGasPrice = value;\n          this.personal.defaultGasPrice = value;\n          _set(_getPrototypeOf(Eth.prototype), \"defaultGasPrice\", value, this, true);\n        }\n        ,\n        get: function get() {\n          return _get(_getPrototypeOf(Eth.prototype), \"defaultGasPrice\", this);\n        }\n      }, {\n        key: \"defaultGas\",\n        set: function set(value) {\n          this.initiatedContracts.forEach(function (contract) {\n            contract.defaultGas = value;\n          });\n          this.net.defaultGas = value;\n          this.personal.defaultGas = value;\n          _set(_getPrototypeOf(Eth.prototype), \"defaultGas\", value, this, true);\n        }\n        ,\n        get: function get() {\n          return _get(_getPrototypeOf(Eth.prototype), \"defaultGas\", this);\n        }\n      }, {\n        key: \"transactionBlockTimeout\",\n        set: function set(value) {\n          this.initiatedContracts.forEach(function (contract) {\n            contract.transactionBlockTimeout = value;\n          });\n          this.net.transactionBlockTimeout = value;\n          this.personal.transactionBlockTimeout = value;\n          _set(_getPrototypeOf(Eth.prototype), \"transactionBlockTimeout\", value, this, true);\n        }\n        ,\n        get: function get() {\n          return _get(_getPrototypeOf(Eth.prototype), \"transactionBlockTimeout\", this);\n        }\n      }, {\n        key: \"transactionConfirmationBlocks\",\n        set: function set(value) {\n          this.initiatedContracts.forEach(function (contract) {\n            contract.transactionConfirmationBlocks = value;\n          });\n          this.net.transactionConfirmationBlocks = value;\n          this.personal.transactionConfirmationBlocks = value;\n          _set(_getPrototypeOf(Eth.prototype), \"transactionConfirmationBlocks\", value, this, true);\n        }\n        ,\n        get: function get() {\n          return _get(_getPrototypeOf(Eth.prototype), \"transactionConfirmationBlocks\", this);\n        }\n      }, {\n        key: \"transactionPollingTimeout\",\n        set: function set(value) {\n          this.initiatedContracts.forEach(function (contract) {\n            contract.transactionPollingTimeout = value;\n          });\n          this.net.transactionPollingTimeout = value;\n          this.personal.transactionPollingTimeout = value;\n          _set(_getPrototypeOf(Eth.prototype), \"transactionPollingTimeout\", value, this, true);\n        }\n        ,\n        get: function get() {\n          return _get(_getPrototypeOf(Eth.prototype), \"transactionPollingTimeout\", this);\n        }\n      }, {\n        key: \"defaultAccount\",\n        set: function set(value) {\n          var _this2 = this;\n          this.initiatedContracts.forEach(function (contract) {\n            contract.defaultAccount = _this2.utils.toChecksumAddress(value);\n          });\n          this.net.defaultAccount = value;\n          this.personal.defaultAccount = value;\n          _set(_getPrototypeOf(Eth.prototype), \"defaultAccount\", value, this, true);\n        }\n        ,\n        get: function get() {\n          return _get(_getPrototypeOf(Eth.prototype), \"defaultAccount\", this);\n        }\n      }, {\n        key: \"defaultBlock\",\n        set: function set(value) {\n          this.initiatedContracts.forEach(function (contract) {\n            contract.defaultBlock = value;\n          });\n          this.net.defaultBlock = value;\n          this.personal.defaultBlock = value;\n          _set(_getPrototypeOf(Eth.prototype), \"defaultBlock\", value, this, true);\n        }\n        ,\n        get: function get() {\n          return _get(_getPrototypeOf(Eth.prototype), \"defaultBlock\", this);\n        }\n      }]);\n      return Eth;\n    }(web3Core.AbstractWeb3Module);\n\n    function TransactionSigner$1() {\n      return new TransactionSigner(Utils, web3CoreHelpers.formatters);\n    }\n    function Eth$1(provider) {\n      var net = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      if (!options.transactionSigner) {\n        options.transactionSigner = new TransactionSigner$1();\n      }\n      var resolvedProvider = new web3Providers.ProviderResolver().resolve(provider, net);\n      var accounts = new web3EthAccounts.Accounts(resolvedProvider, null, options);\n      var abiCoder = new web3EthAbi.AbiCoder();\n      return new Eth(resolvedProvider, new MethodFactory(Utils, web3CoreHelpers.formatters), new web3Net.Network(resolvedProvider, null, options), accounts, new web3EthPersonal.Personal(resolvedProvider, null, accounts, options), web3EthIban.Iban, abiCoder, new web3EthEns.Ens(resolvedProvider, null, accounts, options), Utils, web3CoreHelpers.formatters, new SubscriptionsFactory(Utils, web3CoreHelpers.formatters), new web3EthContract.ContractModuleFactory(Utils, web3CoreHelpers.formatters, abiCoder, accounts), options, net);\n    }\n\n    exports.TransactionSigner = TransactionSigner$1;\n    exports.Eth = Eth$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"]},"metadata":{},"sourceType":"module"}