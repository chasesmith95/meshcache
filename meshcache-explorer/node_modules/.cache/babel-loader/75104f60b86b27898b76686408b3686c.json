{"ast":null,"code":"/** PURE_IMPORTS_START _util_isScheduler,_fromArray,_empty,_scalar PURE_IMPORTS_END */\nimport { isScheduler } from '../util/isScheduler';\nimport { fromArray } from './fromArray';\nimport { empty } from './empty';\nimport { scalar } from './scalar';\nexport function of() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  var scheduler = args[args.length - 1];\n\n  if (isScheduler(scheduler)) {\n    args.pop();\n  } else {\n    scheduler = undefined;\n  }\n\n  switch (args.length) {\n    case 0:\n      return empty(scheduler);\n\n    case 1:\n      return scheduler ? fromArray(args, scheduler) : scalar(args[0]);\n\n    default:\n      return fromArray(args, scheduler);\n  }\n}","map":{"version":3,"sources":["../../../src/internal/observable/of.ts"],"names":[],"mappings":"AACA;AACA,SAAS,WAAT,QAA0B,qBAA1B;AACA,SAAS,SAAT,QAAsB,aAAtB;AACA,SAAS,KAAT,QAAiB,SAAjB;AA0EA,SAAM,MAAN,QAAkB,UAAlB;AAAsB,OAAA,SAAA,EAAA,GAAiC;MAAjC,IAAA,GAAA,E;;AAAA,OAAA,IAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,SAAiC,CAAA,MAAjC,EAAiC,EAAA,EAAjC,EAAiC;;AACrD;;AACA,MAAI,SAAA,GAAY,IAAA,CAAA,IAAS,CAAC,MAAV,GAAY,CAAZ,CAAhB;;MACE,WAAW,CAAA,SAAA,C,EAAA;AACZ,IAAA,IAAA,CAAA,GAAA;AAAM,G,MACL;AACD,IAAA,SAAA,GAAA,SAAA;AACD;;AACE,UAAA,IAAM,CAAA,MAAN;AACE,SAAA,CAAA;AACF,aAAM,KAAA,CAAA,SAAA,CAAN;;AACE,SAAA,CAAA;AACF,aAAA,SAAA,GAAA,SAAA,CAAA,IAAA,EAAA,SAAA,CAAA,GAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA;;AACE;AACH,aAAA,SAAA,CAAA,IAAA,EAAA,SAAA,CAAA;AANC","sourcesContent":["/** PURE_IMPORTS_START _util_isScheduler,_fromArray,_empty,_scalar PURE_IMPORTS_END */\nimport { isScheduler } from '../util/isScheduler';\nimport { fromArray } from './fromArray';\nimport { empty } from './empty';\nimport { scalar } from './scalar';\nexport function of() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var scheduler = args[args.length - 1];\n    if (isScheduler(scheduler)) {\n        args.pop();\n    }\n    else {\n        scheduler = undefined;\n    }\n    switch (args.length) {\n        case 0:\n            return empty(scheduler);\n        case 1:\n            return scheduler ? fromArray(args, scheduler) : scalar(args[0]);\n        default:\n            return fromArray(args, scheduler);\n    }\n}\n//# sourceMappingURL=of.js.map\n"]},"metadata":{},"sourceType":"module"}