{"ast":null,"code":"var trim = require('string.prototype.trim'),\n    forEach = require('for-each'),\n    isArray = function isArray(arg) {\n  return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\nmodule.exports = function (headers) {\n  if (!headers) return {};\n  var result = {};\n  forEach(trim(headers).split('\\n'), function (row) {\n    var index = row.indexOf(':'),\n        key = trim(row.slice(0, index)).toLowerCase(),\n        value = trim(row.slice(index + 1));\n\n    if (typeof result[key] === 'undefined') {\n      result[key] = value;\n    } else if (isArray(result[key])) {\n      result[key].push(value);\n    } else {\n      result[key] = [result[key], value];\n    }\n  });\n  return result;\n};","map":{"version":3,"sources":["/Users/chasesmith/Desktop/registry-display/src/node_modules/parse-headers/parse-headers.js"],"names":["trim","require","forEach","isArray","arg","Object","prototype","toString","call","module","exports","headers","result","split","row","index","indexOf","key","slice","toLowerCase","value","push"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,uBAAD,CAAlB;AAAA,IACIC,OAAO,GAAGD,OAAO,CAAC,UAAD,CADrB;AAAA,IAEIE,OAAO,GAAG,SAAVA,OAAU,CAASC,GAAT,EAAc;AACtB,SAAOC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BJ,GAA/B,MAAwC,gBAA/C;AACD,CAJL;;AAMAK,MAAM,CAACC,OAAP,GAAiB,UAAUC,OAAV,EAAmB;AAClC,MAAI,CAACA,OAAL,EACE,OAAO,EAAP;AAEF,MAAIC,MAAM,GAAG,EAAb;AAEAV,EAAAA,OAAO,CACHF,IAAI,CAACW,OAAD,CAAJ,CAAcE,KAAd,CAAoB,IAApB,CADG,EAEH,UAAUC,GAAV,EAAe;AACb,QAAIC,KAAK,GAAGD,GAAG,CAACE,OAAJ,CAAY,GAAZ,CAAZ;AAAA,QACIC,GAAG,GAAGjB,IAAI,CAACc,GAAG,CAACI,KAAJ,CAAU,CAAV,EAAaH,KAAb,CAAD,CAAJ,CAA0BI,WAA1B,EADV;AAAA,QAEIC,KAAK,GAAGpB,IAAI,CAACc,GAAG,CAACI,KAAJ,CAAUH,KAAK,GAAG,CAAlB,CAAD,CAFhB;;AAIA,QAAI,OAAOH,MAAM,CAACK,GAAD,CAAb,KAAwB,WAA5B,EAAyC;AACvCL,MAAAA,MAAM,CAACK,GAAD,CAAN,GAAcG,KAAd;AACD,KAFD,MAEO,IAAIjB,OAAO,CAACS,MAAM,CAACK,GAAD,CAAP,CAAX,EAA0B;AAC/BL,MAAAA,MAAM,CAACK,GAAD,CAAN,CAAYI,IAAZ,CAAiBD,KAAjB;AACD,KAFM,MAEA;AACLR,MAAAA,MAAM,CAACK,GAAD,CAAN,GAAc,CAAEL,MAAM,CAACK,GAAD,CAAR,EAAeG,KAAf,CAAd;AACD;AACF,GAdE,CAAP;AAiBA,SAAOR,MAAP;AACD,CAxBD","sourcesContent":["var trim = require('string.prototype.trim')\n  , forEach = require('for-each')\n  , isArray = function(arg) {\n      return Object.prototype.toString.call(arg) === '[object Array]';\n    }\n\nmodule.exports = function (headers) {\n  if (!headers)\n    return {}\n\n  var result = {}\n\n  forEach(\n      trim(headers).split('\\n')\n    , function (row) {\n        var index = row.indexOf(':')\n          , key = trim(row.slice(0, index)).toLowerCase()\n          , value = trim(row.slice(index + 1))\n\n        if (typeof(result[key]) === 'undefined') {\n          result[key] = value\n        } else if (isArray(result[key])) {\n          result[key].push(value)\n        } else {\n          result[key] = [ result[key], value ]\n        }\n      }\n  )\n\n  return result\n}\n"]},"metadata":{},"sourceType":"module"}